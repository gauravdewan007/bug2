var Module;
if (!Module) Module = (typeof Module !== "undefined" ? Module : null) || {};
var moduleOverrides = {};
for (var key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
if (Module["ENVIRONMENT"]) {
 if (Module["ENVIRONMENT"] === "WEB") {
  ENVIRONMENT_IS_WEB = true;
 } else if (Module["ENVIRONMENT"] === "WORKER") {
  ENVIRONMENT_IS_WORKER = true;
 } else if (Module["ENVIRONMENT"] === "NODE") {
  ENVIRONMENT_IS_NODE = true;
 } else if (Module["ENVIRONMENT"] === "SHELL") {
  ENVIRONMENT_IS_SHELL = true;
 } else {
  throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
 }
} else {
 ENVIRONMENT_IS_WEB = typeof window === "object";
 ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
 ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
 ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}
if (ENVIRONMENT_IS_NODE) {
 if (!Module["print"]) Module["print"] = console.log;
 if (!Module["printErr"]) Module["printErr"] = console.warn;
 var nodeFS;
 var nodePath;
 Module["read"] = function read(filename, binary) {
  if (!nodeFS) nodeFS = require("fs");
  if (!nodePath) nodePath = require("path");
  filename = nodePath["normalize"](filename);
  var ret = nodeFS["readFileSync"](filename);
  return binary ? ret : ret.toString();
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 Module["load"] = function load(f) {
  globalEval(read(f));
 };
 if (!Module["thisProgram"]) {
  if (process["argv"].length > 1) {
   Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
  } else {
   Module["thisProgram"] = "unknown-program";
  }
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (!Module["print"]) Module["print"] = print;
 if (typeof printErr != "undefined") Module["printErr"] = printErr;
 if (typeof read != "undefined") {
  Module["read"] = read;
 } else {
  Module["read"] = function read() {
   throw "no read() available";
  };
 }
 Module["readBinary"] = function readBinary(f) {
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  var data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function read(url) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, false);
  xhr.send(null);
  return xhr.responseText;
 };
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
   } else {
    onerror();
   }
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof console !== "undefined") {
  if (!Module["print"]) Module["print"] = function print(x) {
   console.log(x);
  };
  if (!Module["printErr"]) Module["printErr"] = function printErr(x) {
   console.warn(x);
  };
 } else {
  var TRY_USE_DUMP = false;
  if (!Module["print"]) Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? (function(x) {
   dump(x);
  }) : (function(x) {});
 }
 if (ENVIRONMENT_IS_WORKER) {
  Module["load"] = importScripts;
 }
 if (typeof Module["setWindowTitle"] === "undefined") {
  Module["setWindowTitle"] = (function(title) {
   document.title = title;
  });
 }
} else {
 throw "Unknown runtime environment. Where are we?";
}
function globalEval(x) {
 eval.call(null, x);
}
if (!Module["load"] && Module["read"]) {
 Module["load"] = function load(f) {
  globalEval(Module["read"](f));
 };
}
if (!Module["print"]) {
 Module["print"] = (function() {});
}
if (!Module["printErr"]) {
 Module["printErr"] = Module["print"];
}
if (!Module["arguments"]) {
 Module["arguments"] = [];
}
if (!Module["thisProgram"]) {
 Module["thisProgram"] = "./this.program";
}
Module.print = Module["print"];
Module.printErr = Module["printErr"];
Module["preRun"] = [];
Module["postRun"] = [];
for (var key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
moduleOverrides = undefined;
var Runtime = {
 setTempRet0: (function(value) {
  tempRet0 = value;
  return value;
 }),
 getTempRet0: (function() {
  return tempRet0;
 }),
 stackSave: (function() {
  return STACKTOP;
 }),
 stackRestore: (function(stackTop) {
  STACKTOP = stackTop;
 }),
 getNativeTypeSize: (function(type) {
  switch (type) {
  case "i1":
  case "i8":
   return 1;
  case "i16":
   return 2;
  case "i32":
   return 4;
  case "i64":
   return 8;
  case "float":
   return 4;
  case "double":
   return 8;
  default:
   {
    if (type[type.length - 1] === "*") {
     return Runtime.QUANTUM_SIZE;
    } else if (type[0] === "i") {
     var bits = parseInt(type.substr(1));
     assert(bits % 8 === 0);
     return bits / 8;
    } else {
     return 0;
    }
   }
  }
 }),
 getNativeFieldSize: (function(type) {
  return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
 }),
 STACK_ALIGN: 16,
 prepVararg: (function(ptr, type) {
  if (type === "double" || type === "i64") {
   if (ptr & 7) {
    assert((ptr & 7) === 4);
    ptr += 4;
   }
  } else {
   assert((ptr & 3) === 0);
  }
  return ptr;
 }),
 getAlignSize: (function(type, size, vararg) {
  if (!vararg && (type == "i64" || type == "double")) return 8;
  if (!type) return Math.min(size, 8);
  return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
 }),
 dynCall: (function(sig, ptr, args) {
  if (args && args.length) {
   return Module["dynCall_" + sig].apply(null, [ ptr ].concat(args));
  } else {
   return Module["dynCall_" + sig].call(null, ptr);
  }
 }),
 functionPointers: [],
 addFunction: (function(func) {
  for (var i = 0; i < Runtime.functionPointers.length; i++) {
   if (!Runtime.functionPointers[i]) {
    Runtime.functionPointers[i] = func;
    return 2 * (1 + i);
   }
  }
  throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
 }),
 removeFunction: (function(index) {
  Runtime.functionPointers[(index - 2) / 2] = null;
 }),
 warnOnce: (function(text) {
  if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
  if (!Runtime.warnOnce.shown[text]) {
   Runtime.warnOnce.shown[text] = 1;
   Module.printErr(text);
  }
 }),
 funcWrappers: {},
 getFuncWrapper: (function(func, sig) {
  assert(sig);
  if (!Runtime.funcWrappers[sig]) {
   Runtime.funcWrappers[sig] = {};
  }
  var sigCache = Runtime.funcWrappers[sig];
  if (!sigCache[func]) {
   if (sig.length === 1) {
    sigCache[func] = function dynCall_wrapper() {
     return Runtime.dynCall(sig, func);
    };
   } else if (sig.length === 2) {
    sigCache[func] = function dynCall_wrapper(arg) {
     return Runtime.dynCall(sig, func, [ arg ]);
    };
   } else {
    sigCache[func] = function dynCall_wrapper() {
     return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
    };
   }
  }
  return sigCache[func];
 }),
 getCompilerSetting: (function(name) {
  throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
 }),
 stackAlloc: (function(size) {
  var ret = STACKTOP;
  STACKTOP = STACKTOP + size | 0;
  STACKTOP = STACKTOP + 15 & -16;
  return ret;
 }),
 staticAlloc: (function(size) {
  var ret = STATICTOP;
  STATICTOP = STATICTOP + size | 0;
  STATICTOP = STATICTOP + 15 & -16;
  return ret;
 }),
 dynamicAlloc: (function(size) {
  var ret = HEAP32[DYNAMICTOP_PTR >> 2];
  var end = (ret + size + 15 | 0) & -16;
  HEAP32[DYNAMICTOP_PTR >> 2] = end;
  if (end >= TOTAL_MEMORY) {
   var success = enlargeMemory();
   if (!success) {
    HEAP32[DYNAMICTOP_PTR >> 2] = ret;
    return 0;
   }
  }
  return ret;
 }),
 alignMemory: (function(size, quantum) {
  var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
  return ret;
 }),
 makeBigInt: (function(low, high, unsigned) {
  var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * +4294967296 : +(low >>> 0) + +(high | 0) * +4294967296;
  return ret;
 }),
 GLOBAL_BASE: 8,
 QUANTUM_SIZE: 4,
 __dummy__: 0
};
Module["Runtime"] = Runtime;
var ABORT = 0;
var EXITSTATUS = 0;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
function getCFunc(ident) {
 var func = Module["_" + ident];
 if (!func) {
  try {
   func = eval("_" + ident);
  } catch (e) {}
 }
 assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
 return func;
}
var cwrap, ccall;
((function() {
 var JSfuncs = {
  "stackSave": (function() {
   Runtime.stackSave();
  }),
  "stackRestore": (function() {
   Runtime.stackRestore();
  }),
  "arrayToC": (function(arr) {
   var ret = Runtime.stackAlloc(arr.length);
   writeArrayToMemory(arr, ret);
   return ret;
  }),
  "stringToC": (function(str) {
   var ret = 0;
   if (str !== null && str !== undefined && str !== 0) {
    var len = (str.length << 2) + 1;
    ret = Runtime.stackAlloc(len);
    stringToUTF8(str, ret, len);
   }
   return ret;
  })
 };
 var toC = {
  "string": JSfuncs["stringToC"],
  "array": JSfuncs["arrayToC"]
 };
 ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
   for (var i = 0; i < args.length; i++) {
    var converter = toC[argTypes[i]];
    if (converter) {
     if (stack === 0) stack = Runtime.stackSave();
     cArgs[i] = converter(args[i]);
    } else {
     cArgs[i] = args[i];
    }
   }
  }
  var ret = func.apply(null, cArgs);
  if (returnType === "string") ret = Pointer_stringify(ret);
  if (stack !== 0) {
   if (opts && opts.async) {
    EmterpreterAsync.asyncFinalizers.push((function() {
     Runtime.stackRestore(stack);
    }));
    return;
   }
   Runtime.stackRestore(stack);
  }
  return ret;
 };
 var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
 function parseJSFunc(jsfunc) {
  var parsed = jsfunc.toString().match(sourceRegex).slice(1);
  return {
   arguments: parsed[0],
   body: parsed[1],
   returnValue: parsed[2]
  };
 }
 var JSsource = null;
 function ensureJSsource() {
  if (!JSsource) {
   JSsource = {};
   for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
     JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
   }
  }
 }
 cwrap = function cwrap(ident, returnType, argTypes) {
  argTypes = argTypes || [];
  var cfunc = getCFunc(ident);
  var numericArgs = argTypes.every((function(type) {
   return type === "number";
  }));
  var numericRet = returnType !== "string";
  if (numericRet && numericArgs) {
   return cfunc;
  }
  var argNames = argTypes.map((function(x, i) {
   return "$" + i;
  }));
  var funcstr = "(function(" + argNames.join(",") + ") {";
  var nargs = argTypes.length;
  if (!numericArgs) {
   ensureJSsource();
   funcstr += "var stack = " + JSsource["stackSave"].body + ";";
   for (var i = 0; i < nargs; i++) {
    var arg = argNames[i], type = argTypes[i];
    if (type === "number") continue;
    var convertCode = JSsource[type + "ToC"];
    funcstr += "var " + convertCode.arguments + " = " + arg + ";";
    funcstr += convertCode.body + ";";
    funcstr += arg + "=(" + convertCode.returnValue + ");";
   }
  }
  var cfuncname = parseJSFunc((function() {
   return cfunc;
  })).returnValue;
  funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
  if (!numericRet) {
   var strgfy = parseJSFunc((function() {
    return Pointer_stringify;
   })).returnValue;
   funcstr += "ret = " + strgfy + "(ret);";
  }
  if (!numericArgs) {
   ensureJSsource();
   funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
  }
  funcstr += "return ret})";
  return eval(funcstr);
 };
}))();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
Module["setValue"] = setValue;
function getValue(ptr, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  return HEAP8[ptr >> 0];
 case "i8":
  return HEAP8[ptr >> 0];
 case "i16":
  return HEAP16[ptr >> 1];
 case "i32":
  return HEAP32[ptr >> 2];
 case "i64":
  return HEAP32[ptr >> 2];
 case "float":
  return HEAPF32[ptr >> 2];
 case "double":
  return HEAPF64[ptr >> 3];
 default:
  abort("invalid type for setValue: " + type);
 }
 return null;
}
Module["getValue"] = getValue;
var ALLOC_NORMAL = 0;
var ALLOC_STACK = 1;
var ALLOC_STATIC = 2;
var ALLOC_DYNAMIC = 3;
var ALLOC_NONE = 4;
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var ptr = ret, stop;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  if (typeof curr === "function") {
   curr = Runtime.getFunctionIndex(curr);
  }
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = Runtime.getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
Module["allocate"] = allocate;
function getMemory(size) {
 if (!staticSealed) return Runtime.staticAlloc(size);
 if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
 return _malloc(size);
}
Module["getMemory"] = getMemory;
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return Module["UTF8ToString"](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;
function AsciiToString(ptr) {
 var str = "";
 while (1) {
  var ch = HEAP8[ptr++ >> 0];
  if (!ch) return str;
  str += String.fromCharCode(ch);
 }
}
Module["AsciiToString"] = AsciiToString;
function stringToAscii(str, outPtr) {
 return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;
var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;
function UTF8ArrayToString(u8Array, idx) {
 var endPtr = idx;
 while (u8Array[endPtr]) ++endPtr;
 if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
  return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
 } else {
  var u0, u1, u2, u3, u4, u5;
  var str = "";
  while (1) {
   u0 = u8Array[idx++];
   if (!u0) return str;
   if (!(u0 & 128)) {
    str += String.fromCharCode(u0);
    continue;
   }
   u1 = u8Array[idx++] & 63;
   if ((u0 & 224) == 192) {
    str += String.fromCharCode((u0 & 31) << 6 | u1);
    continue;
   }
   u2 = u8Array[idx++] & 63;
   if ((u0 & 240) == 224) {
    u0 = (u0 & 15) << 12 | u1 << 6 | u2;
   } else {
    u3 = u8Array[idx++] & 63;
    if ((u0 & 248) == 240) {
     u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
    } else {
     u4 = u8Array[idx++] & 63;
     if ((u0 & 252) == 248) {
      u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
     } else {
      u5 = u8Array[idx++] & 63;
      u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
     }
    }
   }
   if (u0 < 65536) {
    str += String.fromCharCode(u0);
   } else {
    var ch = u0 - 65536;
    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
   }
  }
 }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
Module["UTF8ToString"] = UTF8ToString;
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;
var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;
function demangle(func) {
 var __cxa_demangle_func = Module["___cxa_demangle"] || Module["__cxa_demangle"];
 if (__cxa_demangle_func) {
  try {
   var s = func.substr(1);
   var len = lengthBytesUTF8(s) + 1;
   var buf = _malloc(len);
   stringToUTF8(s, buf, len);
   var status = _malloc(4);
   var ret = __cxa_demangle_func(buf, 0, 0, status);
   if (getValue(status, "i32") === 0 && ret) {
    return Pointer_stringify(ret);
   }
  } catch (e) {} finally {
   if (buf) _free(buf);
   if (status) _free(status);
   if (ret) _free(ret);
  }
  return func;
 }
 Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
 return func;
}
function demangleAll(text) {
 var regex = /__Z[\w\d_]+/g;
 return text.replace(regex, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 var js = jsStackTrace();
 if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
 return demangleAll(js);
}
Module["stackTrace"] = stackTrace;
var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}
var STATIC_BASE, STATICTOP, staticSealed;
var STACK_BASE, STACKTOP, STACK_MAX;
var DYNAMIC_BASE, DYNAMICTOP_PTR;
STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
staticSealed = false;
function abortOnCannotGrowMemory() {
 abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}
function enlargeMemory() {
 abortOnCannotGrowMemory();
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");
if (Module["buffer"]) {
 buffer = Module["buffer"];
} else {
 {
  buffer = new ArrayBuffer(TOTAL_MEMORY);
 }
}
updateGlobalBufferViews();
function getTotalMemory() {
 return TOTAL_MEMORY;
}
HEAP32[0] = 1668509029;
HEAP16[1] = 25459;
if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";
Module["HEAP"] = HEAP;
Module["buffer"] = buffer;
Module["HEAP8"] = HEAP8;
Module["HEAP16"] = HEAP16;
Module["HEAP32"] = HEAP32;
Module["HEAPU8"] = HEAPU8;
Module["HEAPU16"] = HEAPU16;
Module["HEAPU32"] = HEAPU32;
Module["HEAPF32"] = HEAPF32;
Module["HEAPF64"] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Module["dynCall_v"](func);
   } else {
    Module["dynCall_vi"](func, callback.arg);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;
function addOnInit(cb) {
 __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;
function addOnPreMain(cb) {
 __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;
function addOnExit(cb) {
 __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
Module["intArrayFromString"] = intArrayFromString;
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
Module["intArrayToString"] = intArrayToString;
function writeStringToMemory(string, buffer, dontAddNull) {
 Runtime.warnOnce("writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!");
 var lastChar, end;
 if (dontAddNull) {
  end = buffer + lengthBytesUTF8(string);
  lastChar = HEAP8[end];
 }
 stringToUTF8(string, buffer, Infinity);
 if (dontAddNull) HEAP8[end] = lastChar;
}
Module["writeStringToMemory"] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
 HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;
if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5) Math["imul"] = function imul(a, b) {
 var ah = a >>> 16;
 var al = a & 65535;
 var bh = b >>> 16;
 var bl = b & 65535;
 return al * bl + (ah * bl + al * bh << 16) | 0;
};
Math.imul = Math["imul"];
if (!Math["clz32"]) Math["clz32"] = (function(x) {
 x = x >>> 0;
 for (var i = 0; i < 32; i++) {
  if (x & 1 << 31 - i) return i;
 }
 return 32;
});
Math.clz32 = Math["clz32"];
if (!Math["trunc"]) Math["trunc"] = (function(x) {
 return x < 0 ? Math.ceil(x) : Math.floor(x);
});
Math.trunc = Math["trunc"];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
function getUniqueRunDependency(id) {
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}
Module["addRunDependency"] = addRunDependency;
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["removeRunDependency"] = removeRunDependency;
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var memoryInitializer = null;
var ASM_CONSTS = [];
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 22896;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__I_000101();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_iostream_cpp();
 })
});
memoryInitializer = "testa.js.mem";
var tempDoublePtr = STATICTOP;
STATICTOP += 16;
function _atexit(func, arg) {
 __ATEXIT__.unshift({
  func: func,
  arg: arg
 });
}
function ___cxa_atexit() {
 return _atexit.apply(null, arguments);
}
Module["_i64Subtract"] = _i64Subtract;
Module["_i64Add"] = _i64Add;
function __ZSt18uncaught_exceptionv() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}
var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: (function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var ptr in EXCEPTIONS.infos) {
   var info = EXCEPTIONS.infos[ptr];
   if (info.adjusted === adjusted) {
    return ptr;
   }
  }
  return adjusted;
 }),
 addRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 }),
 decRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0 && !info.rethrown) {
   if (info.destructor) {
    Module["dynCall_vi"](info.destructor, ptr);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 }),
 clearRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 })
};
function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 throw ptr;
}
function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (Runtime.setTempRet0(0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (Runtime.setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted = thrown;
   return (Runtime.setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (Runtime.setTempRet0(throwntype), thrown) | 0;
}
function ___cxa_throw(ptr, type, destructor) {
 EXCEPTIONS.infos[ptr] = {
  ptr: ptr,
  adjusted: ptr,
  type: type,
  destructor: destructor,
  refcount: 0,
  caught: false,
  rethrown: false
 };
 EXCEPTIONS.last = ptr;
 if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
  __ZSt18uncaught_exceptionv.uncaught_exception = 1;
 } else {
  __ZSt18uncaught_exceptionv.uncaught_exception++;
 }
 throw ptr;
}
Module["_memset"] = _memset;
Module["_pthread_mutex_lock"] = _pthread_mutex_lock;
function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}
var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}
function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
 };
 var pattern = Pointer_stringify(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);
  case 1:
   return janFourth;
  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);
  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);
  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);
  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);
  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": (function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  }),
  "%A": (function(date) {
   return WEEKDAYS[date.tm_wday];
  }),
  "%b": (function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  }),
  "%B": (function(date) {
   return MONTHS[date.tm_mon];
  }),
  "%C": (function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  }),
  "%d": (function(date) {
   return leadingNulls(date.tm_mday, 2);
  }),
  "%e": (function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  }),
  "%g": (function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  }),
  "%G": (function(date) {
   return getWeekBasedYear(date);
  }),
  "%H": (function(date) {
   return leadingNulls(date.tm_hour, 2);
  }),
  "%I": (function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  }),
  "%j": (function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  }),
  "%m": (function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  }),
  "%M": (function(date) {
   return leadingNulls(date.tm_min, 2);
  }),
  "%n": (function() {
   return "\n";
  }),
  "%p": (function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  }),
  "%S": (function(date) {
   return leadingNulls(date.tm_sec, 2);
  }),
  "%t": (function() {
   return "\t";
  }),
  "%u": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  }),
  "%U": (function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  }),
  "%V": (function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  }),
  "%w": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  }),
  "%W": (function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  }),
  "%y": (function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  }),
  "%Y": (function(date) {
   return date.tm_year + 1900;
  }),
  "%z": (function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  }),
  "%Z": (function(date) {
   return date.tm_zone;
  }),
  "%%": (function() {
   return "%";
  })
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}
function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}
function _abort() {
 Module["abort"]();
}
function _free() {}
Module["_free"] = _free;
function ___cxa_free_exception(ptr) {
 try {
  return _free(ptr);
 } catch (e) {}
}
function ___cxa_end_catch() {
 Module["setThrew"](0);
 var ptr = EXCEPTIONS.caught.pop();
 if (ptr) {
  EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
  EXCEPTIONS.last = 0;
 }
}
function _pthread_once(ptr, func) {
 if (!_pthread_once.seen) _pthread_once.seen = {};
 if (ptr in _pthread_once.seen) return;
 Module["dynCall_v"](func);
 _pthread_once.seen[ptr] = 1;
}
function ___lock() {}
function ___unlock() {}
var PTHREAD_SPECIFIC = {};
function _pthread_getspecific(key) {
 return PTHREAD_SPECIFIC[key] || 0;
}
var PTHREAD_SPECIFIC_NEXT_KEY = 1;
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
function _pthread_key_create(key, destructor) {
 if (key == 0) {
  return ERRNO_CODES.EINVAL;
 }
 HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
 PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
 PTHREAD_SPECIFIC_NEXT_KEY++;
 return 0;
}
function _pthread_setspecific(key, value) {
 if (!(key in PTHREAD_SPECIFIC)) {
  return ERRNO_CODES.EINVAL;
 }
 PTHREAD_SPECIFIC[key] = value;
 return 0;
}
function _malloc(bytes) {
 var ptr = Runtime.dynamicAlloc(bytes + 8);
 return ptr + 8 & 4294967288;
}
Module["_malloc"] = _malloc;
function ___cxa_allocate_exception(size) {
 return _malloc(size);
}
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
 return value;
}
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up--; up) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var isPosixPlatform = process.platform != "win32";
     var fd = process.stdin.fd;
     if (isPosixPlatform) {
      var usingDevice = false;
      try {
       fd = fs.openSync("/dev/stdin", "r");
       usingDevice = true;
      } catch (e) {}
     }
     try {
      bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     } catch (e) {
      if (e.toString().indexOf("EOF") != -1) bytesRead = 0; else throw e;
     }
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.length : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  if (!req) {
   return callback("Unable to connect to IndexedDB");
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
   transaction.onerror = (function(e) {
    callback(this.error);
    e.preventDefault();
   });
   var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
   var index = store.index("timestamp");
   index.openKeyCursor().onsuccess = (function(event) {
    var cursor = event.target.result;
    if (!cursor) {
     return callback(null, {
      type: "remote",
      db: db,
      entries: entries
     });
    }
    entries[cursor.primaryKey] = {
     timestamp: cursor.key
    };
    cursor.continue();
   });
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     encoding: "binary",
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 146) >> 1;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsToPermissionStringMap: {
  0: "r",
  1: "r+",
  2: "r+",
  64: "r",
  65: "r+",
  66: "r+",
  129: "rx+",
  193: "rx+",
  514: "w+",
  577: "w",
  578: "w+",
  705: "wx",
  706: "wx+",
  1024: "a",
  1025: "a",
  1026: "a+",
  1089: "a",
  1090: "a+",
  1153: "ax",
  1154: "ax+",
  1217: "ax",
  1218: "ax+",
  4096: "rs",
  4098: "rs+"
 },
 flagsToPermissionString: (function(flags) {
  flags &= ~2097152;
  flags &= ~2048;
  flags &= ~32768;
  flags &= ~524288;
  if (flags in NODEFS.flagsToPermissionStringMap) {
   return NODEFS.flagsToPermissionStringMap[flags];
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   var nbuffer = new Buffer(length);
   var res;
   try {
    res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (res > 0) {
    for (var i = 0; i < res; i++) {
     buffer[offset + i] = nbuffer[i];
    }
   }
   return res;
  }),
  write: (function(stream, buffer, offset, length, position) {
   var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
   var res;
   try {
    res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return res;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
STATICTOP += 16;
STATICTOP += 16;
STATICTOP += 16;
var FS = {
 root: null,
 mounts: [],
 devices: [ null ],
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdirTree: (function(path, mode) {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != ERRNO_CODES.EEXIST) throw e;
   }
  }
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = true;
  if (typeof position === "undefined") {
   position = stream.position;
   seeking = false;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  opts.encoding = opts.encoding || "utf8";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var stream = FS.open(path, opts.flags, opts.mode);
  if (opts.encoding === "utf8") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
  } else if (opts.encoding === "binary") {
   FS.write(stream, data, 0, data.length, 0, opts.canOwn);
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto").randomBytes(1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     })
    },
    chunkSize: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     })
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: (function() {
     return this.contents.length;
    })
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = HEAP8[buf + len];
  stringToUTF8(ret, buf, bufsize + 1);
  HEAP8[buf + len] = endChar;
  return len;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21506:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
Module["_bitshift64Lshr"] = _bitshift64Lshr;
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
function _pthread_cleanup_push(routine, arg) {
 __ATEXIT__.push((function() {
  Module["dynCall_vi"](routine, arg);
 }));
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
Module["_pthread_cond_broadcast"] = _pthread_cond_broadcast;
function _pthread_cleanup_pop() {
 assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
 __ATEXIT__.pop();
 _pthread_cleanup_push.level = __ATEXIT__.length;
}
function ___cxa_find_matching_catch_2() {
 return ___cxa_find_matching_catch.apply(null, arguments);
}
function ___cxa_find_matching_catch_3() {
 return ___cxa_find_matching_catch.apply(null, arguments);
}
function ___cxa_begin_catch(ptr) {
 var info = EXCEPTIONS.infos[ptr];
 if (info && !info.caught) {
  info.caught = true;
  __ZSt18uncaught_exceptionv.uncaught_exception--;
 }
 if (info) info.rethrown = false;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
Module["_memcpy"] = _memcpy;
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_STATIC);
Module["_llvm_cttz_i32"] = _llvm_cttz_i32;
Module["___udivmoddi4"] = ___udivmoddi4;
Module["___udivdi3"] = ___udivdi3;
Module["___muldsi3"] = ___muldsi3;
Module["___muldi3"] = ___muldi3;
Module["_sbrk"] = _sbrk;
Module["_bitshift64Shl"] = _bitshift64Shl;
Module["_memmove"] = _memmove;
function ___gxx_personality_v0() {}
Module["___uremdi3"] = ___uremdi3;
function _pthread_cond_wait() {
 return 0;
}
function ___cxa_rethrow() {
 var ptr = EXCEPTIONS.caught.pop();
 if (!EXCEPTIONS.infos[ptr].rethrown) {
  EXCEPTIONS.caught.push(ptr);
  EXCEPTIONS.infos[ptr].rethrown = true;
 }
 EXCEPTIONS.last = ptr;
 throw ptr;
}
Module["_pthread_mutex_unlock"] = _pthread_mutex_unlock;
Module["_pthread_self"] = _pthread_self;
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  assert(offset_high === 0);
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var ___dso_handle = STATICTOP;
STATICTOP += 16;
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
Module["FS_createFolder"] = FS.createFolder;
Module["FS_createPath"] = FS.createPath;
Module["FS_createDataFile"] = FS.createDataFile;
Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
Module["FS_createLazyFile"] = FS.createLazyFile;
Module["FS_createLink"] = FS.createLink;
Module["FS_createDevice"] = FS.createDevice;
Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);
HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
staticSealed = true;
function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 try {
  return Module["dynCall_iiiiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 try {
  Module["dynCall_viiiiiiiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  Module["dynCall_viiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 try {
  Module["dynCall_viiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_diii(index, a1, a2, a3) {
 try {
  return Module["dynCall_diii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_i(index) {
 try {
  return Module["dynCall_i"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  return Module["dynCall_iiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "enlargeMemory": enlargeMemory,
 "getTotalMemory": getTotalMemory,
 "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_viiiii": invoke_viiiii,
 "invoke_iiiiiid": invoke_iiiiiid,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_ii": invoke_ii,
 "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii,
 "invoke_iiii": invoke_iiii,
 "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii,
 "invoke_viiiiii": invoke_viiiiii,
 "invoke_viiiiiii": invoke_viiiiiii,
 "invoke_viiiiiiiiii": invoke_viiiiiiiiii,
 "invoke_iii": invoke_iii,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_diii": invoke_diii,
 "invoke_i": invoke_i,
 "invoke_iiiii": invoke_iiiii,
 "invoke_viii": invoke_viii,
 "invoke_v": invoke_v,
 "invoke_iiiiiiiii": invoke_iiiiiiiii,
 "invoke_iiiiid": invoke_iiiiid,
 "invoke_viiii": invoke_viiii,
 "_pthread_cleanup_pop": _pthread_cleanup_pop,
 "_strftime": _strftime,
 "_pthread_cond_wait": _pthread_cond_wait,
 "___lock": ___lock,
 "___syscall54": ___syscall54,
 "_abort": _abort,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___cxa_free_exception": ___cxa_free_exception,
 "___cxa_find_matching_catch_2": ___cxa_find_matching_catch_2,
 "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv,
 "__addDays": __addDays,
 "_strftime_l": _strftime_l,
 "___setErrNo": ___setErrNo,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "___cxa_end_catch": ___cxa_end_catch,
 "___resumeException": ___resumeException,
 "___cxa_find_matching_catch_3": ___cxa_find_matching_catch_3,
 "_pthread_getspecific": _pthread_getspecific,
 "__arraySum": __arraySum,
 "_pthread_once": _pthread_once,
 "_pthread_key_create": _pthread_key_create,
 "___unlock": ___unlock,
 "__isLeapYear": __isLeapYear,
 "_pthread_setspecific": _pthread_setspecific,
 "___cxa_atexit": ___cxa_atexit,
 "___cxa_throw": ___cxa_throw,
 "___cxa_rethrow": ___cxa_rethrow,
 "___syscall6": ___syscall6,
 "_pthread_cleanup_push": _pthread_cleanup_push,
 "_time": _time,
 "___cxa_allocate_exception": ___cxa_allocate_exception,
 "_atexit": _atexit,
 "___syscall140": ___syscall140,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "DYNAMICTOP_PTR": DYNAMICTOP_PTR,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "cttz_i8": cttz_i8,
 "___dso_handle": ___dso_handle
};
// EMSCRIPTEN_START_ASM

var asm = (function(global,env,buffer) {

  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var ___lock=env.___lock;
  var ___syscall54=env.___syscall54;
  var _abort=env._abort;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_find_matching_catch_2=env.___cxa_find_matching_catch_2;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var __addDays=env.__addDays;
  var _strftime_l=env._strftime_l;
  var ___setErrNo=env.___setErrNo;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___resumeException=env.___resumeException;
  var ___cxa_find_matching_catch_3=env.___cxa_find_matching_catch_3;
  var _pthread_getspecific=env._pthread_getspecific;
  var __arraySum=env.__arraySum;
  var _pthread_once=env._pthread_once;
  var _pthread_key_create=env._pthread_key_create;
  var ___unlock=env.___unlock;
  var __isLeapYear=env.__isLeapYear;
  var _pthread_setspecific=env._pthread_setspecific;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_throw=env.___cxa_throw;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _time=env._time;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_(i36, i37, i2, i3, i4, i40, i30, i31, i32, i33, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i40 = i40 | 0;
 i30 = i30 | 0;
 i31 = i31 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i1 = i1 | 0;
 var i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i34 = 0, i35 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i41 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i24 = i41 + 496 | 0;
 i35 = i41 + 96 | 0;
 i48 = i41 + 88 | 0;
 i38 = i41 + 80 | 0;
 i25 = i41 + 76 | 0;
 i26 = i41 + 500 | 0;
 i27 = i41 + 72 | 0;
 i28 = i41 + 68 | 0;
 i42 = i41 + 56 | 0;
 i43 = i41 + 44 | 0;
 i44 = i41 + 32 | 0;
 i45 = i41 + 20 | 0;
 i46 = i41 + 8 | 0;
 i29 = i41 + 4 | 0;
 i39 = i41;
 HEAP32[i24 >> 2] = i1;
 HEAP32[i48 >> 2] = i35;
 i47 = i48 + 4 | 0;
 HEAP32[i47 >> 2] = 122;
 HEAP32[i38 >> 2] = i35;
 HEAP32[i25 >> 2] = i35 + 400;
 HEAP32[i42 >> 2] = 0;
 HEAP32[i42 + 4 >> 2] = 0;
 HEAP32[i42 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i43 >> 2] = 0;
 HEAP32[i43 + 4 >> 2] = 0;
 HEAP32[i43 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i44 >> 2] = 0;
 HEAP32[i44 + 4 >> 2] = 0;
 HEAP32[i44 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i45 >> 2] = 0;
 HEAP32[i45 + 4 >> 2] = 0;
 HEAP32[i45 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i46 >> 2] = 0;
 HEAP32[i46 + 4 >> 2] = 0;
 HEAP32[i46 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i46 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(2, i2 | 0, i3 | 0, i26 | 0, i27 | 0, i28 | 0, i42 | 0, i43 | 0, i44 | 0, i45 | 0, i29 | 0);
 i35 = __THREW__;
 __THREW__ = 0;
 L21 : do if (!(i35 & 1)) {
  HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
  i20 = i44 + 8 + 3 | 0;
  i21 = i44 + 4 | 0;
  i22 = i45 + 8 + 3 | 0;
  i23 = i45 + 4 | 0;
  i12 = (i4 & 512 | 0) != 0;
  i13 = i43 + 8 + 3 | 0;
  i14 = i43 + 4 | 0;
  i15 = i46 + 8 + 3 | 0;
  i16 = i46 + 4 | 0;
  i17 = i26 + 3 | 0;
  i18 = i42 + 11 | 0;
  i19 = i42 + 4 | 0;
  i35 = 0;
  i11 = 0;
  L24 : while (1) {
   if (i11 >>> 0 >= 4) {
    i34 = 262;
    break;
   }
   i1 = HEAP32[i36 >> 2] | 0;
   do if (i1) {
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i34 = 36;
      break L24;
     }
    } else i1 = HEAP32[i2 >> 2] | 0;
    if ((i1 | 0) == -1) {
     HEAP32[i36 >> 2] = 0;
     i3 = 1;
     break;
    } else {
     i3 = (HEAP32[i36 >> 2] | 0) == 0;
     break;
    }
   } else i3 = 1; while (0);
   i2 = HEAP32[i37 >> 2] | 0;
   do if (i2) {
    i1 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i34 = 36;
      break L24;
     }
    } else i1 = HEAP32[i1 >> 2] | 0;
    if ((i1 | 0) != -1) if (i3) {
     i10 = i2;
     break;
    } else {
     i34 = 262;
     break L24;
    } else {
     HEAP32[i37 >> 2] = 0;
     i34 = 32;
     break;
    }
   } else i34 = 32; while (0);
   if ((i34 | 0) == 32) {
    i34 = 0;
    if (i3) {
     i34 = 262;
     break;
    } else i10 = 0;
   }
   L49 : do switch (HEAP8[i26 + i11 >> 0] | 0) {
   case 1:
    {
     if ((i11 | 0) != 3) {
      i2 = HEAP32[i36 >> 2] | 0;
      i1 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
       i34 = __THREW__;
       __THREW__ = 0;
       if (i34 & 1) {
        i34 = 36;
        break L24;
       }
      } else i1 = HEAP32[i1 >> 2] | 0;
      __THREW__ = 0;
      i1 = invoke_iiii(HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] | 0, i31 | 0, 8192, i1 | 0) | 0;
      i34 = __THREW__;
      __THREW__ = 0;
      if (i34 & 1) {
       i34 = 36;
       break L24;
      }
      if (!i1) {
       i34 = 49;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i34 = __THREW__;
       __THREW__ = 0;
       if (i34 & 1) {
        i34 = 36;
        break L24;
       }
      } else {
       HEAP32[i2 >> 2] = i3 + 4;
       i1 = HEAP32[i3 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_vii(48, i46 | 0, i1 | 0);
      i34 = __THREW__;
      __THREW__ = 0;
      if (i34 & 1) {
       i34 = 36;
       break L24;
      } else {
       i1 = i10;
       i4 = i10;
       i34 = 51;
      }
     } else i1 = i35;
     break;
    }
   case 0:
    {
     if ((i11 | 0) == 3) i1 = i35; else {
      i1 = i10;
      i4 = i10;
      i34 = 51;
     }
     break;
    }
   case 3:
    {
     i4 = HEAP8[i20 >> 0] | 0;
     i1 = i4 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i4 & 255;
     i3 = HEAP8[i22 >> 0] | 0;
     i5 = i3 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i3 & 255;
     if ((i1 | 0) == (0 - i5 | 0)) i1 = i35; else {
      if (!i1) {
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 36;
         break L24;
        }
        i4 = HEAP8[i22 >> 0] | 0;
       } else {
        i1 = HEAP32[i2 >> 2] | 0;
        i4 = i3;
       }
       if ((i1 | 0) != (HEAP32[(i4 << 24 >> 24 < 0 ? HEAP32[i45 >> 2] | 0 : i45) >> 2] | 0)) {
        i1 = i35;
        break L49;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 36;
         break L24;
        }
        i1 = HEAP8[i22 >> 0] | 0;
       } else {
        HEAP32[i2 >> 2] = i3 + 4;
        i1 = i4;
       }
       HEAP8[i30 >> 0] = 1;
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i45 : i35;
       break L49;
      }
      i3 = HEAP32[i36 >> 2] | 0;
      i6 = HEAP32[i3 + 12 >> 2] | 0;
      i2 = HEAP32[i3 + 16 >> 2] | 0;
      i1 = (i6 | 0) == (i2 | 0);
      if (!i5) {
       if (i1) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 36;
         break L24;
        }
        i4 = HEAP8[i20 >> 0] | 0;
       } else i1 = HEAP32[i6 >> 2] | 0;
       if ((i1 | 0) != (HEAP32[(i4 << 24 >> 24 < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 2] | 0)) {
        HEAP8[i30 >> 0] = 1;
        i1 = i35;
        break L49;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 36;
         break L24;
        }
        i1 = HEAP8[i20 >> 0] | 0;
       } else {
        HEAP32[i2 >> 2] = i3 + 4;
        i1 = i4;
       }
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i35;
       break L49;
      }
      if (i1) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 36;
        break L24;
       }
       i2 = HEAP32[i36 >> 2] | 0;
       i4 = HEAP8[i20 >> 0] | 0;
       i7 = i2;
       i5 = HEAP32[i2 + 12 >> 2] | 0;
       i2 = HEAP32[i2 + 16 >> 2] | 0;
      } else {
       i1 = HEAP32[i6 >> 2] | 0;
       i7 = i3;
       i5 = i6;
      }
      i3 = i7 + 12 | 0;
      i2 = (i5 | 0) == (i2 | 0);
      if ((i1 | 0) == (HEAP32[(i4 << 24 >> 24 < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 2] | 0)) {
       if (i2) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 36;
         break L24;
        }
        i1 = HEAP8[i20 >> 0] | 0;
       } else {
        HEAP32[i3 >> 2] = i5 + 4;
        i1 = i4;
       }
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i21 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i35;
       break L49;
      }
      if (i2) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 36;
        break L24;
       }
      } else i1 = HEAP32[i5 >> 2] | 0;
      i4 = HEAP8[i22 >> 0] | 0;
      if ((i1 | 0) != (HEAP32[(i4 << 24 >> 24 < 0 ? HEAP32[i45 >> 2] | 0 : i45) >> 2] | 0)) {
       i34 = 118;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 36;
        break L24;
       }
       i1 = HEAP8[i22 >> 0] | 0;
      } else {
       HEAP32[i2 >> 2] = i3 + 4;
       i1 = i4;
      }
      HEAP8[i30 >> 0] = 1;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i23 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i45 : i35;
     }
     break;
    }
   case 2:
    {
     if (!(i11 >>> 0 < 2 | (i35 | 0) != 0) ? !(i12 | (i11 | 0) == 2 & (HEAP8[i17 >> 0] | 0) != 0) : 0) {
      i1 = 0;
      break L49;
     }
     i3 = HEAP8[i13 >> 0] | 0;
     i2 = HEAP32[i43 >> 2] | 0;
     i1 = i3 << 24 >> 24 < 0 ? i2 : i43;
     L122 : do if ((i11 | 0) != 0 ? (HEAPU8[i26 + (i11 + -1) >> 0] | 0) < 2 : 0) {
      i8 = i1;
      i1 = i3;
      while (1) {
       i9 = i1 << 24 >> 24 < 0;
       i3 = i8;
       if ((i3 | 0) == ((i9 ? i2 : i43) + ((i9 ? HEAP32[i14 >> 2] | 0 : i1 & 255) << 2) | 0)) break;
       __THREW__ = 0;
       i1 = invoke_iiii(HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] | 0, i31 | 0, 8192, HEAP32[i3 >> 2] | 0) | 0;
       i9 = __THREW__;
       __THREW__ = 0;
       if (i9 & 1) {
        i34 = 128;
        break L24;
       }
       if (!i1) {
        i34 = 126;
        break;
       }
       i8 = i3 + 4 | 0;
       i1 = HEAP8[i13 >> 0] | 0;
       i2 = HEAP32[i43 >> 2] | 0;
      }
      if ((i34 | 0) == 126) {
       i34 = 0;
       i1 = HEAP8[i13 >> 0] | 0;
       i2 = HEAP32[i43 >> 2] | 0;
      }
      i4 = i1 << 24 >> 24 < 0 ? i2 : i43;
      i7 = i4;
      i6 = i8 - i7 >> 2;
      i5 = HEAP8[i15 >> 0] | 0;
      i3 = i5 << 24 >> 24 < 0;
      i5 = i3 ? HEAP32[i16 >> 2] | 0 : i5 & 255;
      if (i6 >>> 0 > i5 >>> 0) {
       i9 = i10;
       i4 = i7;
       i3 = i10;
      } else {
       i5 = (i3 ? HEAP32[i46 >> 2] | 0 : i46) + (i5 << 2) | 0;
       i3 = i5 + (0 - i6 << 2) | 0;
       while (1) {
        if ((i3 | 0) == (i5 | 0)) {
         i9 = i10;
         i4 = i8;
         i3 = i10;
         break L122;
        }
        if ((HEAP32[i3 >> 2] | 0) != (HEAP32[i4 >> 2] | 0)) {
         i9 = i10;
         i4 = i7;
         i3 = i10;
         break L122;
        }
        i4 = i4 + 4 | 0;
        i3 = i3 + 4 | 0;
       }
      }
     } else {
      i9 = i10;
      i4 = i1;
      i1 = i3;
      i3 = i10;
     } while (0);
     L137 : while (1) {
      i6 = i1 << 24 >> 24 < 0;
      i1 = (i6 ? i2 : i43) + ((i6 ? HEAP32[i14 >> 2] | 0 : i1 & 255) << 2) | 0;
      i6 = i4;
      if ((i6 | 0) == (i1 | 0)) break;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 158;
         break L24;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       if ((i1 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i2 = 1;
        break;
       } else {
        i2 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i2 = 1; while (0);
      do if (i3) {
       i1 = HEAP32[i3 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 158;
         break L24;
        }
       } else i1 = HEAP32[i1 >> 2] | 0;
       if ((i1 | 0) != -1) if (i2 ^ (i9 | 0) == 0) {
        i1 = i9;
        i5 = i9;
        break;
       } else {
        i1 = i6;
        break L137;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i34 = 148;
        break;
       }
      } else {
       i1 = i9;
       i34 = 148;
      } while (0);
      if ((i34 | 0) == 148) {
       i34 = 0;
       if (i2) {
        i1 = i6;
        break;
       } else i5 = 0;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 158;
        break L24;
       }
      } else i2 = HEAP32[i3 >> 2] | 0;
      if ((i2 | 0) != (HEAP32[i6 >> 2] | 0)) {
       i1 = i6;
       break;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 159;
        break L24;
       }
      } else HEAP32[i3 >> 2] = i4 + 4;
      i9 = i1;
      i4 = i6 + 4 | 0;
      i1 = HEAP8[i13 >> 0] | 0;
      i2 = HEAP32[i43 >> 2] | 0;
      i3 = i5;
     }
     if (i12 ? (i10 = HEAP8[i13 >> 0] | 0, i9 = i10 << 24 >> 24 < 0, (i1 | 0) != ((i9 ? HEAP32[i43 >> 2] | 0 : i43) + ((i9 ? HEAP32[i14 >> 2] | 0 : i10 & 255) << 2) | 0)) : 0) {
      i34 = 162;
      break L24;
     } else i1 = i35;
     break;
    }
   case 4:
    {
     i7 = 0;
     i1 = i10;
     i4 = i10;
     L173 : while (1) {
      i2 = HEAP32[i36 >> 2] | 0;
      do if (i2) {
       i3 = HEAP32[i2 + 12 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 187;
         break L24;
        }
       } else i2 = HEAP32[i3 >> 2] | 0;
       if ((i2 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i3 = 1;
        break;
       } else {
        i3 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i3 = 1; while (0);
      do if (i4) {
       i2 = HEAP32[i4 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 187;
         break L24;
        }
       } else i2 = HEAP32[i2 >> 2] | 0;
       if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
        i5 = i1;
        i6 = i1;
        break;
       } else {
        i4 = i1;
        break L173;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i34 = 176;
        break;
       }
      } else i34 = 176; while (0);
      if ((i34 | 0) == 176) {
       i34 = 0;
       if (i3) {
        i4 = i1;
        break;
       } else {
        i5 = i1;
        i6 = 0;
       }
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 187;
        break L24;
       }
      } else i1 = HEAP32[i2 >> 2] | 0;
      __THREW__ = 0;
      i2 = invoke_iiii(HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] | 0, i31 | 0, 2048, i1 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i34 = 189;
       break L24;
      }
      if (i2) {
       i2 = HEAP32[i33 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i24 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(10, i32 | 0, i33 | 0, i24 | 0);
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 189;
         break L24;
        }
        i2 = HEAP32[i33 >> 2] | 0;
       }
       HEAP32[i33 >> 2] = i2 + 4;
       HEAP32[i2 >> 2] = i1;
       i1 = i7 + 1 | 0;
      } else {
       i10 = HEAP8[i18 >> 0] | 0;
       if (!((i1 | 0) == (HEAP32[i28 >> 2] | 0) & (i7 | 0 ? ((i10 << 24 >> 24 < 0 ? HEAP32[i19 >> 2] | 0 : i10 & 255) | 0) != 0 : 0))) {
        i4 = i5;
        break;
       }
       i1 = HEAP32[i38 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i25 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(9, i48 | 0, i38 | 0, i25 | 0);
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 189;
         break L24;
        }
        i1 = HEAP32[i38 >> 2] | 0;
       }
       HEAP32[i38 >> 2] = i1 + 4;
       HEAP32[i1 >> 2] = i7;
       i1 = 0;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 187;
        break L24;
       } else {
        i7 = i1;
        i1 = i5;
        i4 = i6;
        continue;
       }
      } else {
       HEAP32[i3 >> 2] = i4 + 4;
       i7 = i1;
       i1 = i5;
       i4 = i6;
       continue;
      }
     }
     i1 = HEAP32[i38 >> 2] | 0;
     if (i7 | 0 ? (HEAP32[i48 >> 2] | 0) != (i1 | 0) : 0) {
      if ((i1 | 0) == (HEAP32[i25 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(9, i48 | 0, i38 | 0, i25 | 0);
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 188;
        break L24;
       }
       i1 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i1 + 4;
      HEAP32[i1 >> 2] = i7;
     }
     L226 : do if ((HEAP32[i29 >> 2] | 0) > 0) {
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 188;
         break L24;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       if ((i1 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i2 = 1;
        break;
       } else {
        i2 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i2 = 1; while (0);
      do if (i4) {
       i1 = HEAP32[i4 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 188;
         break L24;
        }
       } else i1 = HEAP32[i1 >> 2] | 0;
       if ((i1 | 0) != -1) if (i2) break; else {
        i34 = 224;
        break L24;
       } else {
        HEAP32[i37 >> 2] = 0;
        i34 = 218;
        break;
       }
      } else i34 = 218; while (0);
      if ((i34 | 0) == 218) {
       i34 = 0;
       if (i2) {
        i34 = 224;
        break L24;
       } else i4 = 0;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 188;
        break L24;
       }
      } else i1 = HEAP32[i2 >> 2] | 0;
      if ((i1 | 0) != (HEAP32[i27 >> 2] | 0)) {
       i34 = 224;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 188;
        break L24;
       } else i1 = i4;
      } else {
       HEAP32[i2 >> 2] = i3 + 4;
       i1 = i4;
      }
      while (1) {
       if ((HEAP32[i29 >> 2] | 0) <= 0) break L226;
       i2 = HEAP32[i36 >> 2] | 0;
       do if (i2) {
        i3 = HEAP32[i2 + 12 >> 2] | 0;
        if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
         i10 = __THREW__;
         __THREW__ = 0;
         if (i10 & 1) {
          i34 = 186;
          break L24;
         }
        } else i2 = HEAP32[i3 >> 2] | 0;
        if ((i2 | 0) == -1) {
         HEAP32[i36 >> 2] = 0;
         i3 = 1;
         break;
        } else {
         i3 = (HEAP32[i36 >> 2] | 0) == 0;
         break;
        }
       } else i3 = 1; while (0);
       do if (i4) {
        i2 = HEAP32[i4 + 12 >> 2] | 0;
        if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
         i10 = __THREW__;
         __THREW__ = 0;
         if (i10 & 1) {
          i34 = 186;
          break L24;
         }
        } else i2 = HEAP32[i2 >> 2] | 0;
        if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
         i5 = i1;
         i4 = i1;
         break;
        } else {
         i34 = 249;
         break L24;
        } else {
         HEAP32[i37 >> 2] = 0;
         i1 = 0;
         i34 = 242;
         break;
        }
       } else i34 = 242; while (0);
       if ((i34 | 0) == 242) {
        i34 = 0;
        if (i3) {
         i34 = 249;
         break L24;
        } else {
         i5 = i1;
         i4 = 0;
        }
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 186;
         break L24;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       __THREW__ = 0;
       i1 = invoke_iiii(HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] | 0, i31 | 0, 2048, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i34 = 186;
        break L24;
       }
       if (!i1) {
        i34 = 249;
        break L24;
       }
       if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i24 >> 2] | 0) ? (__THREW__ = 0, invoke_viii(10, i32 | 0, i33 | 0, i24 | 0), i10 = __THREW__, __THREW__ = 0, i10 & 1) : 0) {
        i34 = 186;
        break L24;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 186;
         break L24;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       i2 = HEAP32[i33 >> 2] | 0;
       HEAP32[i33 >> 2] = i2 + 4;
       HEAP32[i2 >> 2] = i1;
       HEAP32[i29 >> 2] = (HEAP32[i29 >> 2] | 0) + -1;
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i34 = 186;
         break L24;
        } else {
         i1 = i5;
         continue;
        }
       } else {
        HEAP32[i2 >> 2] = i3 + 4;
        i1 = i5;
        continue;
       }
      }
     } while (0);
     if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i32 >> 2] | 0)) {
      i34 = 259;
      break L24;
     } else i1 = i35;
     break;
    }
   default:
    i1 = i35;
   } while (0);
   L300 : do if ((i34 | 0) == 51) while (1) {
    i34 = 0;
    i2 = HEAP32[i36 >> 2] | 0;
    do if (i2) {
     i3 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i34 = 35;
       break L24;
      }
     } else i2 = HEAP32[i3 >> 2] | 0;
     if ((i2 | 0) == -1) {
      HEAP32[i36 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i36 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    do if (i4) {
     i2 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i34 = 35;
       break L24;
      }
     } else i2 = HEAP32[i2 >> 2] | 0;
     if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
      i5 = i1;
      i4 = i1;
      break;
     } else {
      i1 = i35;
      break L300;
     } else {
      HEAP32[i37 >> 2] = 0;
      i1 = 0;
      i34 = 64;
      break;
     }
    } else i34 = 64; while (0);
    if ((i34 | 0) == 64) {
     i34 = 0;
     if (i3) {
      i1 = i35;
      break L300;
     } else {
      i5 = i1;
      i4 = 0;
     }
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i34 = 35;
      break L24;
     }
    } else i1 = HEAP32[i2 >> 2] | 0;
    __THREW__ = 0;
    i1 = invoke_iiii(HEAP32[(HEAP32[i31 >> 2] | 0) + 12 >> 2] | 0, i31 | 0, 8192, i1 | 0) | 0;
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) {
     i34 = 35;
     break L24;
    }
    if (!i1) {
     i1 = i35;
     break L300;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
     i34 = __THREW__;
     __THREW__ = 0;
     if (i34 & 1) {
      i34 = 35;
      break L24;
     }
    } else {
     HEAP32[i2 >> 2] = i3 + 4;
     i1 = HEAP32[i3 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_vii(48, i46 | 0, i1 | 0);
    i34 = __THREW__;
    __THREW__ = 0;
    if (i34 & 1) {
     i34 = 35;
     break L24;
    } else {
     i1 = i5;
     i34 = 51;
    }
   } while (0);
   i35 = i1;
   i11 = i11 + 1 | 0;
  }
  L336 : switch (i34 | 0) {
  case 35:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 37;
    break;
   }
  case 36:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 37;
    break;
   }
  case 49:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 118:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 128:
   {
    i2 = ___cxa_find_matching_catch_2() | 0;
    break L21;
   }
  case 158:
   {
    i2 = ___cxa_find_matching_catch_2() | 0;
    break L21;
   }
  case 159:
   {
    i2 = ___cxa_find_matching_catch_2() | 0;
    break L21;
   }
  case 162:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 186:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 260;
    break;
   }
  case 187:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 260;
    break;
   }
  case 188:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 260;
    break;
   }
  case 189:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i34 = 260;
    break;
   }
  case 224:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 249:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 259:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i34 = 298;
    break;
   }
  case 262:
   {
    L338 : do if (i35 | 0) {
     i5 = i35 + 8 + 3 | 0;
     i6 = i35 + 4 | 0;
     i4 = 1;
     L340 : while (1) {
      i1 = HEAP8[i5 >> 0] | 0;
      if (i1 << 24 >> 24 < 0) i1 = HEAP32[i6 >> 2] | 0; else i1 = i1 & 255;
      if (i4 >>> 0 >= i1 >>> 0) break L338;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i33 = __THREW__;
        __THREW__ = 0;
        if (i33 & 1) {
         i34 = 290;
         break L340;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       if ((i1 | 0) == -1) {
        HEAP32[i36 >> 2] = 0;
        i3 = 1;
        break;
       } else {
        i3 = (HEAP32[i36 >> 2] | 0) == 0;
        break;
       }
      } else i3 = 1; while (0);
      i1 = HEAP32[i37 >> 2] | 0;
      do if (i1) {
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i33 = __THREW__;
        __THREW__ = 0;
        if (i33 & 1) {
         i34 = 290;
         break L340;
        }
       } else i1 = HEAP32[i2 >> 2] | 0;
       if ((i1 | 0) != -1) if (i3) break; else {
        i34 = 289;
        break L340;
       } else {
        HEAP32[i37 >> 2] = 0;
        i34 = 281;
        break;
       }
      } else i34 = 281; while (0);
      if ((i34 | 0) == 281 ? (i34 = 0, i3) : 0) {
       i34 = 289;
       break;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i33 = __THREW__;
       __THREW__ = 0;
       if (i33 & 1) {
        i34 = 290;
        break;
       }
      } else i1 = HEAP32[i2 >> 2] | 0;
      if ((HEAP8[i5 >> 0] | 0) < 0) i2 = HEAP32[i35 >> 2] | 0; else i2 = i35;
      if ((i1 | 0) != (HEAP32[i2 + (i4 << 2) >> 2] | 0)) {
       i34 = 289;
       break;
      }
      i1 = i4 + 1 | 0;
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i33 = __THREW__;
       __THREW__ = 0;
       if (i33 & 1) {
        i34 = 290;
        break;
       } else {
        i4 = i1;
        continue;
       }
      } else {
       HEAP32[i3 >> 2] = i4 + 4;
       i4 = i1;
       continue;
      }
     }
     if ((i34 | 0) == 289) {
      HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
      i2 = 0;
      i34 = 298;
      break L336;
     } else if ((i34 | 0) == 290) {
      i2 = ___cxa_find_matching_catch_2() | 0;
      break L21;
     }
    } while (0);
    i2 = HEAP32[i48 >> 2] | 0;
    i1 = HEAP32[i38 >> 2] | 0;
    if ((i2 | 0) != (i1 | 0)) {
     HEAP32[i39 >> 2] = 0;
     __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i42, i2, i1, i39);
     if (!(HEAP32[i39 >> 2] | 0)) {
      i2 = 1;
      i34 = 298;
      break;
     } else {
      HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
      i2 = 0;
      i34 = 298;
      break;
     }
    } else {
     i2 = 1;
     i34 = 298;
    }
    break;
   }
  }
  if ((i34 | 0) == 37) {
   i2 = i1;
   break;
  } else if ((i34 | 0) == 260) {
   i2 = i1;
   break;
  } else if ((i34 | 0) == 298) {
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i46);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i45);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i44);
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i43);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i42);
   i1 = HEAP32[i48 >> 2] | 0;
   HEAP32[i48 >> 2] = 0;
   if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i47 >> 2] | 0, i1 | 0), i48 = __THREW__, __THREW__ = 0, i48 & 1) : 0) {
    i48 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i48);
   }
   STACKTOP = i41;
   return i2 | 0;
  }
 } else i2 = ___cxa_find_matching_catch_2() | 0; while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i46);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i45);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i44);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i43);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i42);
 i1 = HEAP32[i48 >> 2] | 0;
 HEAP32[i48 >> 2] = 0;
 if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i47 >> 2] | 0, i1 | 0), i48 = __THREW__, __THREW__ = 0, i48 & 1) : 0) {
  i48 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i48);
 }
 ___resumeException(i2 | 0);
 return 0;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_(i36, i37, i2, i3, i5, i40, i31, i4, i32, i33, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i40 = i40 | 0;
 i31 = i31 | 0;
 i4 = i4 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i1 = i1 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i34 = 0, i35 = 0, i38 = 0, i39 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0;
 i41 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i25 = i41 + 88 | 0;
 i34 = i41 + 96 | 0;
 i48 = i41 + 80 | 0;
 i38 = i41 + 72 | 0;
 i26 = i41 + 68 | 0;
 i27 = i41 + 500 | 0;
 i28 = i41 + 497 | 0;
 i29 = i41 + 496 | 0;
 i42 = i41 + 56 | 0;
 i43 = i41 + 44 | 0;
 i44 = i41 + 32 | 0;
 i45 = i41 + 20 | 0;
 i46 = i41 + 8 | 0;
 i30 = i41 + 4 | 0;
 i39 = i41;
 HEAP32[i25 >> 2] = i1;
 HEAP32[i48 >> 2] = i34;
 i47 = i48 + 4 | 0;
 HEAP32[i47 >> 2] = 122;
 HEAP32[i38 >> 2] = i34;
 HEAP32[i26 >> 2] = i34 + 400;
 HEAP32[i42 >> 2] = 0;
 HEAP32[i42 + 4 >> 2] = 0;
 HEAP32[i42 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i42 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i43 >> 2] = 0;
 HEAP32[i43 + 4 >> 2] = 0;
 HEAP32[i43 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i43 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i44 >> 2] = 0;
 HEAP32[i44 + 4 >> 2] = 0;
 HEAP32[i44 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i44 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i45 >> 2] = 0;
 HEAP32[i45 + 4 >> 2] = 0;
 HEAP32[i45 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i45 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i46 >> 2] = 0;
 HEAP32[i46 + 4 >> 2] = 0;
 HEAP32[i46 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i46 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __THREW__ = 0;
 invoke_viiiiiiiiii(1, i2 | 0, i3 | 0, i27 | 0, i28 | 0, i29 | 0, i42 | 0, i43 | 0, i44 | 0, i45 | 0, i30 | 0);
 i34 = __THREW__;
 __THREW__ = 0;
 L21 : do if (!(i34 & 1)) {
  HEAP32[i33 >> 2] = HEAP32[i32 >> 2];
  i20 = i4 + 8 | 0;
  i21 = i44 + 11 | 0;
  i22 = i44 + 4 | 0;
  i23 = i45 + 11 | 0;
  i24 = i45 + 4 | 0;
  i12 = (i5 & 512 | 0) != 0;
  i13 = i43 + 11 | 0;
  i14 = i43 + 4 | 0;
  i15 = i46 + 11 | 0;
  i16 = i46 + 4 | 0;
  i17 = i27 + 3 | 0;
  i18 = i42 + 11 | 0;
  i19 = i42 + 4 | 0;
  i34 = 0;
  i11 = 0;
  L24 : while (1) {
   if (i11 >>> 0 >= 4) {
    i35 = 254;
    break;
   }
   i1 = HEAP32[i36 >> 2] | 0;
   do if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i35 = 35;
      break L24;
     }
     if ((i1 | 0) == -1) {
      HEAP32[i36 >> 2] = 0;
      i1 = 0;
      break;
     } else {
      i1 = HEAP32[i36 >> 2] | 0;
      break;
     }
    }
   } else i1 = 0; while (0);
   i1 = (i1 | 0) == 0;
   i2 = HEAP32[i37 >> 2] | 0;
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) {
     i10 = i2;
     break;
    } else {
     i35 = 254;
     break L24;
    }
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) {
     i35 = 35;
     break L24;
    }
    if ((i3 | 0) != -1) if (i1) {
     i10 = i2;
     break;
    } else {
     i35 = 254;
     break L24;
    } else {
     HEAP32[i37 >> 2] = 0;
     i35 = 31;
     break;
    }
   } else i35 = 31; while (0);
   if ((i35 | 0) == 31) {
    i35 = 0;
    if (i1) {
     i35 = 254;
     break;
    } else i10 = 0;
   }
   L47 : do switch (HEAP8[i27 + i11 >> 0] | 0) {
   case 1:
    {
     if ((i11 | 0) != 3) {
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i35 = __THREW__;
       __THREW__ = 0;
       if (i35 & 1) {
        i35 = 35;
        break L24;
       }
      } else i1 = HEAPU8[i2 >> 0] | 0;
      if ((i1 & 255) << 24 >> 24 <= -1) {
       i35 = 48;
       break L24;
      }
      if (!(HEAP16[(HEAP32[i20 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
       i35 = 48;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i35 = __THREW__;
       __THREW__ = 0;
       if (i35 & 1) {
        i35 = 35;
        break L24;
       }
      } else {
       HEAP32[i2 >> 2] = i3 + 1;
       i1 = HEAPU8[i3 >> 0] | 0;
      }
      __THREW__ = 0;
      invoke_vii(46, i46 | 0, i1 & 255 | 0);
      i35 = __THREW__;
      __THREW__ = 0;
      if (i35 & 1) {
       i35 = 35;
       break L24;
      } else {
       i1 = i10;
       i4 = i10;
       i35 = 50;
      }
     } else i1 = i34;
     break;
    }
   case 0:
    {
     if ((i11 | 0) == 3) i1 = i34; else {
      i1 = i10;
      i4 = i10;
      i35 = 50;
     }
     break;
    }
   case 3:
    {
     i4 = HEAP8[i21 >> 0] | 0;
     i1 = i4 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i4 & 255;
     i3 = HEAP8[i23 >> 0] | 0;
     i5 = i3 << 24 >> 24 < 0 ? HEAP32[i24 >> 2] | 0 : i3 & 255;
     if ((i1 | 0) == (0 - i5 | 0)) i1 = i34; else {
      if (!i1) {
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 35;
         break L24;
        }
        i4 = HEAP8[i23 >> 0] | 0;
       } else {
        i1 = HEAPU8[i2 >> 0] | 0;
        i4 = i3;
       }
       if ((i1 & 255) << 24 >> 24 != (HEAP8[(i4 << 24 >> 24 < 0 ? HEAP32[i45 >> 2] | 0 : i45) >> 0] | 0)) {
        i1 = i34;
        break L47;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 35;
         break L24;
        }
        i1 = HEAP8[i23 >> 0] | 0;
       } else {
        HEAP32[i2 >> 2] = i3 + 1;
        i1 = i4;
       }
       HEAP8[i31 >> 0] = 1;
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i24 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i45 : i34;
       break L47;
      }
      i3 = HEAP32[i36 >> 2] | 0;
      i6 = HEAP32[i3 + 12 >> 2] | 0;
      i2 = HEAP32[i3 + 16 >> 2] | 0;
      i1 = (i6 | 0) == (i2 | 0);
      if (!i5) {
       if (i1) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 35;
         break L24;
        }
        i4 = HEAP8[i21 >> 0] | 0;
       } else i1 = HEAPU8[i6 >> 0] | 0;
       if ((i1 & 255) << 24 >> 24 != (HEAP8[(i4 << 24 >> 24 < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 0] | 0)) {
        HEAP8[i31 >> 0] = 1;
        i1 = i34;
        break L47;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 35;
         break L24;
        }
        i1 = HEAP8[i21 >> 0] | 0;
       } else {
        HEAP32[i2 >> 2] = i3 + 1;
        i1 = i4;
       }
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
       break L47;
      }
      if (i1) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 35;
        break L24;
       }
       i2 = HEAP32[i36 >> 2] | 0;
       i4 = HEAP8[i21 >> 0] | 0;
       i7 = i2;
       i5 = HEAP32[i2 + 12 >> 2] | 0;
       i2 = HEAP32[i2 + 16 >> 2] | 0;
      } else {
       i1 = HEAPU8[i6 >> 0] | 0;
       i7 = i3;
       i5 = i6;
      }
      i3 = i7 + 12 | 0;
      i2 = (i5 | 0) == (i2 | 0);
      if ((i1 & 255) << 24 >> 24 == (HEAP8[(i4 << 24 >> 24 < 0 ? HEAP32[i44 >> 2] | 0 : i44) >> 0] | 0)) {
       if (i2) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 35;
         break L24;
        }
        i1 = HEAP8[i21 >> 0] | 0;
       } else {
        HEAP32[i3 >> 2] = i5 + 1;
        i1 = i4;
       }
       i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i22 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i44 : i34;
       break L47;
      }
      if (i2) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 35;
        break L24;
       }
      } else i1 = HEAPU8[i5 >> 0] | 0;
      i4 = HEAP8[i23 >> 0] | 0;
      if ((i1 & 255) << 24 >> 24 != (HEAP8[(i4 << 24 >> 24 < 0 ? HEAP32[i45 >> 2] | 0 : i45) >> 0] | 0)) {
       i35 = 116;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 35;
        break L24;
       }
       i1 = HEAP8[i23 >> 0] | 0;
      } else {
       HEAP32[i2 >> 2] = i3 + 1;
       i1 = i4;
      }
      HEAP8[i31 >> 0] = 1;
      i1 = (i1 << 24 >> 24 < 0 ? HEAP32[i24 >> 2] | 0 : i1 & 255) >>> 0 > 1 ? i45 : i34;
     }
     break;
    }
   case 2:
    {
     if (!(i11 >>> 0 < 2 | (i34 | 0) != 0) ? !(i12 | (i11 | 0) == 2 & (HEAP8[i17 >> 0] | 0) != 0) : 0) {
      i1 = 0;
      break L47;
     }
     i2 = HEAP8[i13 >> 0] | 0;
     i1 = i2 << 24 >> 24 < 0;
     i9 = HEAP32[i43 >> 2] | 0;
     i3 = i1 ? i9 : i43;
     i7 = i3;
     L120 : do if ((i11 | 0) != 0 ? (HEAPU8[i27 + (i11 + -1) >> 0] | 0) < 2 : 0) {
      i1 = i3 + (i1 ? HEAP32[i14 >> 2] | 0 : i2 & 255) | 0;
      i6 = i7;
      while (1) {
       i4 = i6;
       if ((i4 | 0) == (i1 | 0)) break;
       i5 = HEAP8[i4 >> 0] | 0;
       if (i5 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[i20 >> 2] | 0) + (i5 << 24 >> 24 << 1) >> 1] & 8192)) break;
       i6 = i4 + 1 | 0;
      }
      i5 = i6 - i7 | 0;
      i4 = HEAP8[i15 >> 0] | 0;
      i1 = i4 << 24 >> 24 < 0;
      i4 = i1 ? HEAP32[i16 >> 2] | 0 : i4 & 255;
      if (i5 >>> 0 <= i4 >>> 0) {
       i4 = (i1 ? HEAP32[i46 >> 2] | 0 : i46) + i4 | 0;
       i1 = i4 + (0 - i5) | 0;
       while (1) {
        if ((i1 | 0) == (i4 | 0)) {
         i8 = i10;
         i3 = i6;
         i1 = i9;
         i4 = i10;
         break L120;
        }
        if ((HEAP8[i1 >> 0] | 0) != (HEAP8[i3 >> 0] | 0)) {
         i8 = i10;
         i3 = i7;
         i1 = i9;
         i4 = i10;
         break L120;
        }
        i3 = i3 + 1 | 0;
        i1 = i1 + 1 | 0;
       }
      } else {
       i8 = i10;
       i3 = i7;
       i1 = i9;
       i4 = i10;
      }
     } else {
      i8 = i10;
      i3 = i7;
      i1 = i9;
      i4 = i10;
     } while (0);
     L134 : while (1) {
      i6 = i2 << 24 >> 24 < 0;
      i1 = (i6 ? i1 : i43) + (i6 ? HEAP32[i14 >> 2] | 0 : i2 & 255) | 0;
      i6 = i3;
      if ((i6 | 0) == (i1 | 0)) break;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 154;
         break L24;
        }
        if ((i1 | 0) == -1) {
         HEAP32[i36 >> 2] = 0;
         i1 = 0;
         break;
        } else {
         i1 = HEAP32[i36 >> 2] | 0;
         break;
        }
       }
      } else i1 = 0; while (0);
      i2 = (i1 | 0) == 0;
      do if (i4) {
       if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i2) {
        i1 = i8;
        i5 = i4;
        break;
       } else {
        i1 = i6;
        break L134;
       }
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 154;
        break L24;
       }
       if ((i1 | 0) != -1) if (i2 ^ (i8 | 0) == 0) {
        i1 = i8;
        i5 = i8;
        break;
       } else {
        i1 = i6;
        break L134;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i35 = 144;
        break;
       }
      } else {
       i1 = i8;
       i35 = 144;
      } while (0);
      if ((i35 | 0) == 144) {
       i35 = 0;
       if (i2) {
        i1 = i6;
        break;
       } else i5 = 0;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = HEAP32[i2 + 12 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 154;
        break L24;
       }
      } else i2 = HEAPU8[i3 >> 0] | 0;
      if ((i2 & 255) << 24 >> 24 != (HEAP8[i6 >> 0] | 0)) {
       i1 = i6;
       break;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 155;
        break L24;
       }
      } else HEAP32[i3 >> 2] = i4 + 1;
      i8 = i1;
      i3 = i6 + 1 | 0;
      i2 = HEAP8[i13 >> 0] | 0;
      i1 = HEAP32[i43 >> 2] | 0;
      i4 = i5;
     }
     if (i12 ? (i10 = HEAP8[i13 >> 0] | 0, i9 = i10 << 24 >> 24 < 0, (i1 | 0) != ((i9 ? HEAP32[i43 >> 2] | 0 : i43) + (i9 ? HEAP32[i14 >> 2] | 0 : i10 & 255) | 0)) : 0) {
      i35 = 158;
      break L24;
     } else i1 = i34;
     break;
    }
   case 4:
    {
     i7 = 0;
     i1 = i10;
     i4 = i10;
     L168 : while (1) {
      i2 = HEAP32[i36 >> 2] | 0;
      do if (i2) {
       if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 182;
         break L24;
        }
        if ((i2 | 0) == -1) {
         HEAP32[i36 >> 2] = 0;
         i2 = 0;
         break;
        } else {
         i2 = HEAP32[i36 >> 2] | 0;
         break;
        }
       }
      } else i2 = 0; while (0);
      i3 = (i2 | 0) == 0;
      do if (i4) {
       if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) {
        i6 = i1;
        i5 = i4;
        break;
       } else {
        i3 = i1;
        break L168;
       }
       __THREW__ = 0;
       i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 182;
        break L24;
       }
       if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
        i6 = i1;
        i5 = i1;
        break;
       } else {
        i3 = i1;
        break L168;
       } else {
        HEAP32[i37 >> 2] = 0;
        i1 = 0;
        i35 = 171;
        break;
       }
      } else i35 = 171; while (0);
      if ((i35 | 0) == 171) {
       i35 = 0;
       if (i3) {
        i3 = i1;
        break;
       } else {
        i6 = i1;
        i5 = 0;
       }
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 182;
        break L24;
       }
      } else i1 = HEAPU8[i2 >> 0] | 0;
      i2 = i1 & 255;
      if (i2 << 24 >> 24 > -1 ? (HEAP16[(HEAP32[i20 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048) != 0 : 0) {
       i1 = HEAP32[i33 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i25 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(8, i32 | 0, i33 | 0, i25 | 0);
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 184;
         break L24;
        }
        i1 = HEAP32[i33 >> 2] | 0;
       }
       HEAP32[i33 >> 2] = i1 + 1;
       HEAP8[i1 >> 0] = i2;
       i1 = i7 + 1 | 0;
      } else {
       i10 = HEAP8[i18 >> 0] | 0;
       if (!(i2 << 24 >> 24 == (HEAP8[i29 >> 0] | 0) & (i7 | 0 ? ((i10 << 24 >> 24 < 0 ? HEAP32[i19 >> 2] | 0 : i10 & 255) | 0) != 0 : 0))) {
        i3 = i6;
        break;
       }
       i1 = HEAP32[i38 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i26 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(9, i48 | 0, i38 | 0, i26 | 0);
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 184;
         break L24;
        }
        i1 = HEAP32[i38 >> 2] | 0;
       }
       HEAP32[i38 >> 2] = i1 + 4;
       HEAP32[i1 >> 2] = i7;
       i1 = 0;
      }
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 182;
        break L24;
       } else {
        i7 = i1;
        i1 = i6;
        i4 = i5;
        continue;
       }
      } else {
       HEAP32[i3 >> 2] = i4 + 1;
       i7 = i1;
       i1 = i6;
       i4 = i5;
       continue;
      }
     }
     i1 = HEAP32[i38 >> 2] | 0;
     if (i7 | 0 ? (HEAP32[i48 >> 2] | 0) != (i1 | 0) : 0) {
      if ((i1 | 0) == (HEAP32[i26 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(9, i48 | 0, i38 | 0, i26 | 0);
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 183;
        break L24;
       }
       i1 = HEAP32[i38 >> 2] | 0;
      }
      HEAP32[i38 >> 2] = i1 + 4;
      HEAP32[i1 >> 2] = i7;
     }
     L220 : do if ((HEAP32[i30 >> 2] | 0) > 0) {
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 183;
         break L24;
        }
        if ((i1 | 0) == -1) {
         HEAP32[i36 >> 2] = 0;
         i1 = 0;
         break;
        } else {
         i1 = HEAP32[i36 >> 2] | 0;
         break;
        }
       }
      } else i1 = 0; while (0);
      i1 = (i1 | 0) == 0;
      do if (i3) {
       if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 183;
         break L24;
        }
        if ((i2 | 0) == -1) {
         HEAP32[i37 >> 2] = 0;
         i35 = 212;
         break;
        }
       }
       if (i1) i4 = i3; else {
        i35 = 217;
        break L24;
       }
      } else i35 = 212; while (0);
      if ((i35 | 0) == 212) {
       i35 = 0;
       if (i1) {
        i35 = 217;
        break L24;
       } else i4 = 0;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 183;
        break L24;
       }
      } else i1 = HEAPU8[i2 >> 0] | 0;
      if ((i1 & 255) << 24 >> 24 != (HEAP8[i28 >> 0] | 0)) {
       i35 = 217;
       break L24;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = i1 + 12 | 0;
      i3 = HEAP32[i2 >> 2] | 0;
      if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i35 = 183;
        break L24;
       } else i1 = i4;
      } else {
       HEAP32[i2 >> 2] = i3 + 1;
       i1 = i4;
      }
      while (1) {
       if ((HEAP32[i30 >> 2] | 0) <= 0) break L220;
       i2 = HEAP32[i36 >> 2] | 0;
       do if (i2) {
        if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
         i10 = __THREW__;
         __THREW__ = 0;
         if (i10 & 1) {
          i35 = 181;
          break L24;
         }
         if ((i2 | 0) == -1) {
          HEAP32[i36 >> 2] = 0;
          i2 = 0;
          break;
         } else {
          i2 = HEAP32[i36 >> 2] | 0;
          break;
         }
        }
       } else i2 = 0; while (0);
       i3 = (i2 | 0) == 0;
       do if (i4) {
        if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) {
         i5 = i1;
         break;
        } else {
         i35 = 241;
         break L24;
        }
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 181;
         break L24;
        }
        if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
         i5 = i1;
         i4 = i1;
         break;
        } else {
         i35 = 241;
         break L24;
        } else {
         HEAP32[i37 >> 2] = 0;
         i1 = 0;
         i35 = 234;
         break;
        }
       } else i35 = 234; while (0);
       if ((i35 | 0) == 234) {
        i35 = 0;
        if (i3) {
         i35 = 241;
         break L24;
        } else {
         i5 = i1;
         i4 = 0;
        }
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 181;
         break L24;
        }
       } else i1 = HEAPU8[i2 >> 0] | 0;
       if ((i1 & 255) << 24 >> 24 <= -1) {
        i35 = 241;
        break L24;
       }
       if (!(HEAP16[(HEAP32[i20 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 2048)) {
        i35 = 241;
        break L24;
       }
       if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i25 >> 2] | 0) ? (__THREW__ = 0, invoke_viii(8, i32 | 0, i33 | 0, i25 | 0), i10 = __THREW__, __THREW__ = 0, i10 & 1) : 0) {
        i35 = 181;
        break L24;
       }
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = HEAP32[i1 + 12 >> 2] | 0;
       if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 181;
         break L24;
        }
       } else i1 = HEAPU8[i2 >> 0] | 0;
       i2 = HEAP32[i33 >> 2] | 0;
       HEAP32[i33 >> 2] = i2 + 1;
       HEAP8[i2 >> 0] = i1;
       HEAP32[i30 >> 2] = (HEAP32[i30 >> 2] | 0) + -1;
       i1 = HEAP32[i36 >> 2] | 0;
       i2 = i1 + 12 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
        i10 = __THREW__;
        __THREW__ = 0;
        if (i10 & 1) {
         i35 = 181;
         break L24;
        } else {
         i1 = i5;
         continue;
        }
       } else {
        HEAP32[i2 >> 2] = i3 + 1;
        i1 = i5;
        continue;
       }
      }
     } while (0);
     if ((HEAP32[i33 >> 2] | 0) == (HEAP32[i32 >> 2] | 0)) {
      i35 = 251;
      break L24;
     } else i1 = i34;
     break;
    }
   default:
    i1 = i34;
   } while (0);
   L288 : do if ((i35 | 0) == 50) while (1) {
    i35 = 0;
    i2 = HEAP32[i36 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i35 = 34;
       break L24;
      }
      if ((i2 | 0) == -1) {
       HEAP32[i36 >> 2] = 0;
       i2 = 0;
       break;
      } else {
       i2 = HEAP32[i36 >> 2] | 0;
       break;
      }
     }
    } else i2 = 0; while (0);
    i3 = (i2 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) {
      i5 = i1;
      break;
     } else {
      i1 = i34;
      break L288;
     }
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i35 = 34;
      break L24;
     }
     if ((i2 | 0) != -1) if (i3 ^ (i1 | 0) == 0) {
      i5 = i1;
      i4 = i1;
      break;
     } else {
      i1 = i34;
      break L288;
     } else {
      HEAP32[i37 >> 2] = 0;
      i1 = 0;
      i35 = 62;
      break;
     }
    } else i35 = 62; while (0);
    if ((i35 | 0) == 62) {
     i35 = 0;
     if (i3) {
      i1 = i34;
      break L288;
     } else {
      i5 = i1;
      i4 = 0;
     }
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = HEAP32[i1 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i35 = 34;
      break L24;
     }
    } else i1 = HEAPU8[i2 >> 0] | 0;
    if ((i1 & 255) << 24 >> 24 <= -1) {
     i1 = i34;
     break L288;
    }
    if (!(HEAP16[(HEAP32[i20 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) {
     i1 = i34;
     break L288;
    }
    i1 = HEAP32[i36 >> 2] | 0;
    i2 = i1 + 12 | 0;
    i3 = HEAP32[i2 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
     i35 = __THREW__;
     __THREW__ = 0;
     if (i35 & 1) {
      i35 = 34;
      break L24;
     }
    } else {
     HEAP32[i2 >> 2] = i3 + 1;
     i1 = HEAPU8[i3 >> 0] | 0;
    }
    __THREW__ = 0;
    invoke_vii(46, i46 | 0, i1 & 255 | 0);
    i35 = __THREW__;
    __THREW__ = 0;
    if (i35 & 1) {
     i35 = 34;
     break L24;
    } else {
     i1 = i5;
     i35 = 50;
    }
   } while (0);
   i34 = i1;
   i11 = i11 + 1 | 0;
  }
  L322 : switch (i35 | 0) {
  case 34:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 36;
    break;
   }
  case 35:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 36;
    break;
   }
  case 48:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 116:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 154:
   {
    i2 = ___cxa_find_matching_catch_2() | 0;
    break L21;
   }
  case 155:
   {
    i2 = ___cxa_find_matching_catch_2() | 0;
    break L21;
   }
  case 158:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 181:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 252;
    break;
   }
  case 182:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 252;
    break;
   }
  case 183:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 252;
    break;
   }
  case 184:
   {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i35 = 252;
    break;
   }
  case 217:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 241:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 251:
   {
    HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
    i2 = 0;
    i35 = 288;
    break;
   }
  case 254:
   {
    L324 : do if (i34 | 0) {
     i5 = i34 + 11 | 0;
     i6 = i34 + 4 | 0;
     i3 = 1;
     L326 : while (1) {
      i1 = HEAP8[i5 >> 0] | 0;
      if (i1 << 24 >> 24 < 0) i1 = HEAP32[i6 >> 2] | 0; else i1 = i1 & 255;
      if (i3 >>> 0 >= i1 >>> 0) break L324;
      i1 = HEAP32[i36 >> 2] | 0;
      do if (i1) {
       if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i33 = __THREW__;
        __THREW__ = 0;
        if (i33 & 1) {
         i35 = 280;
         break L326;
        }
        if ((i1 | 0) == -1) {
         HEAP32[i36 >> 2] = 0;
         i1 = 0;
         break;
        } else {
         i1 = HEAP32[i36 >> 2] | 0;
         break;
        }
       }
      } else i1 = 0; while (0);
      i2 = (i1 | 0) == 0;
      i1 = HEAP32[i37 >> 2] | 0;
      do if (i1) {
       if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i33 = __THREW__;
        __THREW__ = 0;
        if (i33 & 1) {
         i35 = 280;
         break L326;
        }
        if ((i1 | 0) == -1) {
         HEAP32[i37 >> 2] = 0;
         i35 = 272;
         break;
        }
       }
       if (!i2) {
        i35 = 279;
        break L326;
       }
      } else i35 = 272; while (0);
      if ((i35 | 0) == 272 ? (i35 = 0, i2) : 0) {
       i35 = 279;
       break;
      }
      i1 = HEAP32[i36 >> 2] | 0;
      i2 = HEAP32[i1 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i33 = __THREW__;
       __THREW__ = 0;
       if (i33 & 1) {
        i35 = 280;
        break;
       }
      } else i1 = HEAPU8[i2 >> 0] | 0;
      if ((HEAP8[i5 >> 0] | 0) < 0) i2 = HEAP32[i34 >> 2] | 0; else i2 = i34;
      if ((i1 & 255) << 24 >> 24 != (HEAP8[i2 + i3 >> 0] | 0)) {
       i35 = 279;
       break;
      }
      i1 = i3 + 1 | 0;
      i2 = HEAP32[i36 >> 2] | 0;
      i3 = i2 + 12 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] | 0, i2 | 0) | 0;
       i33 = __THREW__;
       __THREW__ = 0;
       if (i33 & 1) {
        i35 = 280;
        break;
       } else {
        i3 = i1;
        continue;
       }
      } else {
       HEAP32[i3 >> 2] = i4 + 1;
       i3 = i1;
       continue;
      }
     }
     if ((i35 | 0) == 279) {
      HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
      i2 = 0;
      i35 = 288;
      break L322;
     } else if ((i35 | 0) == 280) {
      i2 = ___cxa_find_matching_catch_2() | 0;
      break L21;
     }
    } while (0);
    i2 = HEAP32[i48 >> 2] | 0;
    i1 = HEAP32[i38 >> 2] | 0;
    if ((i2 | 0) != (i1 | 0)) {
     HEAP32[i39 >> 2] = 0;
     __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i42, i2, i1, i39);
     if (!(HEAP32[i39 >> 2] | 0)) {
      i2 = 1;
      i35 = 288;
      break;
     } else {
      HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
      i2 = 0;
      i35 = 288;
      break;
     }
    } else {
     i2 = 1;
     i35 = 288;
    }
    break;
   }
  }
  if ((i35 | 0) == 36) {
   i2 = i1;
   break;
  } else if ((i35 | 0) == 252) {
   i2 = i1;
   break;
  } else if ((i35 | 0) == 288) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i46);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i44);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i43);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i42);
   i1 = HEAP32[i48 >> 2] | 0;
   HEAP32[i48 >> 2] = 0;
   if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i47 >> 2] | 0, i1 | 0), i48 = __THREW__, __THREW__ = 0, i48 & 1) : 0) {
    i48 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i48);
   }
   STACKTOP = i41;
   return i2 | 0;
  }
 } else i2 = ___cxa_find_matching_catch_2() | 0; while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i46);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i45);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i44);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i43);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i42);
 i1 = HEAP32[i48 >> 2] | 0;
 HEAP32[i48 >> 2] = 0;
 if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i47 >> 2] | 0, i1 | 0), i48 = __THREW__, __THREW__ = 0, i48 & 1) : 0) {
  i48 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i48);
 }
 ___resumeException(i2 | 0);
 return 0;
}

function _malloc(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i14 = i36;
 do if (i2 >>> 0 < 245) {
  i13 = i2 >>> 0 < 11 ? 16 : i2 + 11 & -8;
  i2 = i13 >>> 3;
  i18 = HEAP32[4334] | 0;
  i3 = i18 >>> i2;
  if (i3 & 3 | 0) {
   i2 = (i3 & 1 ^ 1) + i2 | 0;
   i3 = 17376 + (i2 << 1 << 2) | 0;
   i4 = i3 + 8 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   i6 = i5 + 8 | 0;
   i7 = HEAP32[i6 >> 2] | 0;
   do if ((i3 | 0) != (i7 | 0)) {
    if (i7 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i1 = i7 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i5 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i4 >> 2] = i7;
     break;
    } else _abort();
   } else HEAP32[4334] = i18 & ~(1 << i2); while (0);
   i35 = i2 << 3;
   HEAP32[i5 + 4 >> 2] = i35 | 3;
   i35 = i5 + i35 + 4 | 0;
   HEAP32[i35 >> 2] = HEAP32[i35 >> 2] | 1;
   i35 = i6;
   STACKTOP = i36;
   return i35 | 0;
  }
  i17 = HEAP32[4336] | 0;
  if (i13 >>> 0 > i17 >>> 0) {
   if (i3 | 0) {
    i8 = 2 << i2;
    i2 = i3 << i2 & (i8 | 0 - i8);
    i2 = (i2 & 0 - i2) + -1 | 0;
    i8 = i2 >>> 12 & 16;
    i2 = i2 >>> i8;
    i4 = i2 >>> 5 & 8;
    i2 = i2 >>> i4;
    i6 = i2 >>> 2 & 4;
    i2 = i2 >>> i6;
    i3 = i2 >>> 1 & 2;
    i2 = i2 >>> i3;
    i1 = i2 >>> 1 & 1;
    i1 = (i4 | i8 | i6 | i3 | i1) + (i2 >>> i1) | 0;
    i2 = 17376 + (i1 << 1 << 2) | 0;
    i3 = i2 + 8 | 0;
    i6 = HEAP32[i3 >> 2] | 0;
    i8 = i6 + 8 | 0;
    i4 = HEAP32[i8 >> 2] | 0;
    do if ((i2 | 0) != (i4 | 0)) {
     if (i4 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
     i5 = i4 + 12 | 0;
     if ((HEAP32[i5 >> 2] | 0) == (i6 | 0)) {
      HEAP32[i5 >> 2] = i2;
      HEAP32[i3 >> 2] = i4;
      i9 = i18;
      break;
     } else _abort();
    } else {
     i9 = i18 & ~(1 << i1);
     HEAP32[4334] = i9;
    } while (0);
    i7 = (i1 << 3) - i13 | 0;
    HEAP32[i6 + 4 >> 2] = i13 | 3;
    i4 = i6 + i13 | 0;
    HEAP32[i4 + 4 >> 2] = i7 | 1;
    HEAP32[i4 + i7 >> 2] = i7;
    if (i17 | 0) {
     i5 = HEAP32[4339] | 0;
     i1 = i17 >>> 3;
     i3 = 17376 + (i1 << 1 << 2) | 0;
     i1 = 1 << i1;
     if (i9 & i1) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
       i10 = i2;
       i11 = i1;
      }
     } else {
      HEAP32[4334] = i9 | i1;
      i10 = i3;
      i11 = i3 + 8 | 0;
     }
     HEAP32[i11 >> 2] = i5;
     HEAP32[i10 + 12 >> 2] = i5;
     HEAP32[i5 + 8 >> 2] = i10;
     HEAP32[i5 + 12 >> 2] = i3;
    }
    HEAP32[4336] = i7;
    HEAP32[4339] = i4;
    i35 = i8;
    STACKTOP = i36;
    return i35 | 0;
   }
   i10 = HEAP32[4335] | 0;
   if (i10) {
    i2 = (i10 & 0 - i10) + -1 | 0;
    i34 = i2 >>> 12 & 16;
    i2 = i2 >>> i34;
    i33 = i2 >>> 5 & 8;
    i2 = i2 >>> i33;
    i35 = i2 >>> 2 & 4;
    i2 = i2 >>> i35;
    i8 = i2 >>> 1 & 2;
    i2 = i2 >>> i8;
    i9 = i2 >>> 1 & 1;
    i9 = HEAP32[17640 + ((i33 | i34 | i35 | i8 | i9) + (i2 >>> i9) << 2) >> 2] | 0;
    i2 = i9;
    i8 = i9;
    i9 = (HEAP32[i9 + 4 >> 2] & -8) - i13 | 0;
    while (1) {
     i1 = HEAP32[i2 + 16 >> 2] | 0;
     if (!i1) {
      i1 = HEAP32[i2 + 20 >> 2] | 0;
      if (!i1) break;
     }
     i35 = (HEAP32[i1 + 4 >> 2] & -8) - i13 | 0;
     i34 = i35 >>> 0 < i9 >>> 0;
     i2 = i1;
     i8 = i34 ? i1 : i8;
     i9 = i34 ? i35 : i9;
    }
    i5 = HEAP32[4338] | 0;
    if (i8 >>> 0 < i5 >>> 0) _abort();
    i7 = i8 + i13 | 0;
    if (i8 >>> 0 >= i7 >>> 0) _abort();
    i6 = HEAP32[i8 + 24 >> 2] | 0;
    i3 = HEAP32[i8 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i8 | 0)) {
     i2 = i8 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i8 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i12 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (i4 | 0) {
       i1 = i4;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break; else {
       i1 = i4;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i5 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i12 = i1;
      break;
     }
    } else {
     i4 = HEAP32[i8 + 8 >> 2] | 0;
     if (i4 >>> 0 < i5 >>> 0) _abort();
     i1 = i4 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i8 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i8 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i4;
      i12 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i6 | 0) {
     i1 = HEAP32[i8 + 28 >> 2] | 0;
     i2 = 17640 + (i1 << 2) | 0;
     if ((i8 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i12;
      if (!i12) {
       HEAP32[4335] = i10 & ~(1 << i1);
       break;
      }
     } else {
      if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
      i1 = i6 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) HEAP32[i1 >> 2] = i12; else HEAP32[i6 + 20 >> 2] = i12;
      if (!i12) break;
     }
     i2 = HEAP32[4338] | 0;
     if (i12 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i12 + 24 >> 2] = i6;
     i1 = HEAP32[i8 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i12 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i12;
      break;
     } while (0);
     i1 = HEAP32[i8 + 20 >> 2] | 0;
     if (i1 | 0) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
      HEAP32[i12 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i12;
      break;
     }
    } while (0);
    if (i9 >>> 0 < 16) {
     i35 = i9 + i13 | 0;
     HEAP32[i8 + 4 >> 2] = i35 | 3;
     i35 = i8 + i35 + 4 | 0;
     HEAP32[i35 >> 2] = HEAP32[i35 >> 2] | 1;
    } else {
     HEAP32[i8 + 4 >> 2] = i13 | 3;
     HEAP32[i7 + 4 >> 2] = i9 | 1;
     HEAP32[i7 + i9 >> 2] = i9;
     if (i17 | 0) {
      i4 = HEAP32[4339] | 0;
      i1 = i17 >>> 3;
      i3 = 17376 + (i1 << 1 << 2) | 0;
      i1 = 1 << i1;
      if (i18 & i1) {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
        i15 = i2;
        i16 = i1;
       }
      } else {
       HEAP32[4334] = i18 | i1;
       i15 = i3;
       i16 = i3 + 8 | 0;
      }
      HEAP32[i16 >> 2] = i4;
      HEAP32[i15 + 12 >> 2] = i4;
      HEAP32[i4 + 8 >> 2] = i15;
      HEAP32[i4 + 12 >> 2] = i3;
     }
     HEAP32[4336] = i9;
     HEAP32[4339] = i7;
    }
    i35 = i8 + 8 | 0;
    STACKTOP = i36;
    return i35 | 0;
   }
  }
 } else if (i2 >>> 0 <= 4294967231) {
  i2 = i2 + 11 | 0;
  i13 = i2 & -8;
  i10 = HEAP32[4335] | 0;
  if (i10) {
   i4 = 0 - i13 | 0;
   i2 = i2 >>> 8;
   if (i2) if (i13 >>> 0 > 16777215) i9 = 31; else {
    i16 = (i2 + 1048320 | 0) >>> 16 & 8;
    i28 = i2 << i16;
    i15 = (i28 + 520192 | 0) >>> 16 & 4;
    i28 = i28 << i15;
    i9 = (i28 + 245760 | 0) >>> 16 & 2;
    i9 = 14 - (i15 | i16 | i9) + (i28 << i9 >>> 15) | 0;
    i9 = i13 >>> (i9 + 7 | 0) & 1 | i9 << 1;
   } else i9 = 0;
   i2 = HEAP32[17640 + (i9 << 2) >> 2] | 0;
   L123 : do if (!i2) {
    i3 = 0;
    i5 = 0;
    i28 = 86;
   } else {
    i5 = 0;
    i8 = i2;
    i7 = i13 << ((i9 | 0) == 31 ? 0 : 25 - (i9 >>> 1) | 0);
    i3 = 0;
    while (1) {
     i2 = (HEAP32[i8 + 4 >> 2] & -8) - i13 | 0;
     if (i2 >>> 0 < i4 >>> 0) if (!i2) {
      i2 = i8;
      i4 = 0;
      i3 = i8;
      i28 = 90;
      break L123;
     } else {
      i5 = i8;
      i4 = i2;
     }
     i2 = HEAP32[i8 + 20 >> 2] | 0;
     i8 = HEAP32[i8 + 16 + (i7 >>> 31 << 2) >> 2] | 0;
     i3 = (i2 | 0) == 0 | (i2 | 0) == (i8 | 0) ? i3 : i2;
     i2 = (i8 | 0) == 0;
     if (i2) {
      i28 = 86;
      break;
     } else i7 = i7 << (i2 & 1 ^ 1);
    }
   } while (0);
   if ((i28 | 0) == 86) {
    if ((i3 | 0) == 0 & (i5 | 0) == 0) {
     i2 = 2 << i9;
     i2 = i10 & (i2 | 0 - i2);
     if (!i2) break;
     i16 = (i2 & 0 - i2) + -1 | 0;
     i11 = i16 >>> 12 & 16;
     i16 = i16 >>> i11;
     i9 = i16 >>> 5 & 8;
     i16 = i16 >>> i9;
     i12 = i16 >>> 2 & 4;
     i16 = i16 >>> i12;
     i15 = i16 >>> 1 & 2;
     i16 = i16 >>> i15;
     i3 = i16 >>> 1 & 1;
     i3 = HEAP32[17640 + ((i9 | i11 | i12 | i15 | i3) + (i16 >>> i3) << 2) >> 2] | 0;
    }
    if (!i3) {
     i9 = i5;
     i8 = i4;
    } else {
     i2 = i5;
     i28 = 90;
    }
   }
   if ((i28 | 0) == 90) while (1) {
    i28 = 0;
    i16 = (HEAP32[i3 + 4 >> 2] & -8) - i13 | 0;
    i5 = i16 >>> 0 < i4 >>> 0;
    i4 = i5 ? i16 : i4;
    i2 = i5 ? i3 : i2;
    i5 = HEAP32[i3 + 16 >> 2] | 0;
    if (i5 | 0) {
     i3 = i5;
     i28 = 90;
     continue;
    }
    i3 = HEAP32[i3 + 20 >> 2] | 0;
    if (!i3) {
     i9 = i2;
     i8 = i4;
     break;
    } else i28 = 90;
   }
   if ((i9 | 0) != 0 ? i8 >>> 0 < ((HEAP32[4336] | 0) - i13 | 0) >>> 0 : 0) {
    i5 = HEAP32[4338] | 0;
    if (i9 >>> 0 < i5 >>> 0) _abort();
    i7 = i9 + i13 | 0;
    if (i9 >>> 0 >= i7 >>> 0) _abort();
    i6 = HEAP32[i9 + 24 >> 2] | 0;
    i3 = HEAP32[i9 + 12 >> 2] | 0;
    do if ((i3 | 0) == (i9 | 0)) {
     i2 = i9 + 20 | 0;
     i1 = HEAP32[i2 >> 2] | 0;
     if (!i1) {
      i2 = i9 + 16 | 0;
      i1 = HEAP32[i2 >> 2] | 0;
      if (!i1) {
       i17 = 0;
       break;
      }
     }
     while (1) {
      i3 = i1 + 20 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (i4 | 0) {
       i1 = i4;
       i2 = i3;
       continue;
      }
      i3 = i1 + 16 | 0;
      i4 = HEAP32[i3 >> 2] | 0;
      if (!i4) break; else {
       i1 = i4;
       i2 = i3;
      }
     }
     if (i2 >>> 0 < i5 >>> 0) _abort(); else {
      HEAP32[i2 >> 2] = 0;
      i17 = i1;
      break;
     }
    } else {
     i4 = HEAP32[i9 + 8 >> 2] | 0;
     if (i4 >>> 0 < i5 >>> 0) _abort();
     i1 = i4 + 12 | 0;
     if ((HEAP32[i1 >> 2] | 0) != (i9 | 0)) _abort();
     i2 = i3 + 8 | 0;
     if ((HEAP32[i2 >> 2] | 0) == (i9 | 0)) {
      HEAP32[i1 >> 2] = i3;
      HEAP32[i2 >> 2] = i4;
      i17 = i3;
      break;
     } else _abort();
    } while (0);
    do if (i6) {
     i1 = HEAP32[i9 + 28 >> 2] | 0;
     i2 = 17640 + (i1 << 2) | 0;
     if ((i9 | 0) == (HEAP32[i2 >> 2] | 0)) {
      HEAP32[i2 >> 2] = i17;
      if (!i17) {
       i18 = i10 & ~(1 << i1);
       HEAP32[4335] = i18;
       break;
      }
     } else {
      if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
      i1 = i6 + 16 | 0;
      if ((HEAP32[i1 >> 2] | 0) == (i9 | 0)) HEAP32[i1 >> 2] = i17; else HEAP32[i6 + 20 >> 2] = i17;
      if (!i17) {
       i18 = i10;
       break;
      }
     }
     i2 = HEAP32[4338] | 0;
     if (i17 >>> 0 < i2 >>> 0) _abort();
     HEAP32[i17 + 24 >> 2] = i6;
     i1 = HEAP32[i9 + 16 >> 2] | 0;
     do if (i1 | 0) if (i1 >>> 0 < i2 >>> 0) _abort(); else {
      HEAP32[i17 + 16 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i17;
      break;
     } while (0);
     i1 = HEAP32[i9 + 20 >> 2] | 0;
     if (i1) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
      HEAP32[i17 + 20 >> 2] = i1;
      HEAP32[i1 + 24 >> 2] = i17;
      i18 = i10;
      break;
     } else i18 = i10;
    } else i18 = i10; while (0);
    do if (i8 >>> 0 >= 16) {
     HEAP32[i9 + 4 >> 2] = i13 | 3;
     HEAP32[i7 + 4 >> 2] = i8 | 1;
     HEAP32[i7 + i8 >> 2] = i8;
     i1 = i8 >>> 3;
     if (i8 >>> 0 < 256) {
      i3 = 17376 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[4334] | 0;
      i1 = 1 << i1;
      if (i2 & i1) {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
        i26 = i2;
        i27 = i1;
       }
      } else {
       HEAP32[4334] = i2 | i1;
       i26 = i3;
       i27 = i3 + 8 | 0;
      }
      HEAP32[i27 >> 2] = i7;
      HEAP32[i26 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i26;
      HEAP32[i7 + 12 >> 2] = i3;
      break;
     }
     i1 = i8 >>> 8;
     if (i1) if (i8 >>> 0 > 16777215) i1 = 31; else {
      i34 = (i1 + 1048320 | 0) >>> 16 & 8;
      i35 = i1 << i34;
      i33 = (i35 + 520192 | 0) >>> 16 & 4;
      i35 = i35 << i33;
      i1 = (i35 + 245760 | 0) >>> 16 & 2;
      i1 = 14 - (i33 | i34 | i1) + (i35 << i1 >>> 15) | 0;
      i1 = i8 >>> (i1 + 7 | 0) & 1 | i1 << 1;
     } else i1 = 0;
     i3 = 17640 + (i1 << 2) | 0;
     HEAP32[i7 + 28 >> 2] = i1;
     i2 = i7 + 16 | 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
     i2 = 1 << i1;
     if (!(i18 & i2)) {
      HEAP32[4335] = i18 | i2;
      HEAP32[i3 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i3;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     }
     i2 = i8 << ((i1 | 0) == 31 ? 0 : 25 - (i1 >>> 1) | 0);
     i4 = HEAP32[i3 >> 2] | 0;
     while (1) {
      if ((HEAP32[i4 + 4 >> 2] & -8 | 0) == (i8 | 0)) {
       i28 = 148;
       break;
      }
      i3 = i4 + 16 + (i2 >>> 31 << 2) | 0;
      i1 = HEAP32[i3 >> 2] | 0;
      if (!i1) {
       i28 = 145;
       break;
      } else {
       i2 = i2 << 1;
       i4 = i1;
      }
     }
     if ((i28 | 0) == 145) if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
      HEAP32[i3 >> 2] = i7;
      HEAP32[i7 + 24 >> 2] = i4;
      HEAP32[i7 + 12 >> 2] = i7;
      HEAP32[i7 + 8 >> 2] = i7;
      break;
     } else if ((i28 | 0) == 148) {
      i1 = i4 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i35 = HEAP32[4338] | 0;
      if (i2 >>> 0 >= i35 >>> 0 & i4 >>> 0 >= i35 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i7;
       HEAP32[i1 >> 2] = i7;
       HEAP32[i7 + 8 >> 2] = i2;
       HEAP32[i7 + 12 >> 2] = i4;
       HEAP32[i7 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i35 = i8 + i13 | 0;
     HEAP32[i9 + 4 >> 2] = i35 | 3;
     i35 = i9 + i35 + 4 | 0;
     HEAP32[i35 >> 2] = HEAP32[i35 >> 2] | 1;
    } while (0);
    i35 = i9 + 8 | 0;
    STACKTOP = i36;
    return i35 | 0;
   }
  }
 } else i13 = -1; while (0);
 i3 = HEAP32[4336] | 0;
 if (i3 >>> 0 >= i13 >>> 0) {
  i1 = i3 - i13 | 0;
  i2 = HEAP32[4339] | 0;
  if (i1 >>> 0 > 15) {
   i35 = i2 + i13 | 0;
   HEAP32[4339] = i35;
   HEAP32[4336] = i1;
   HEAP32[i35 + 4 >> 2] = i1 | 1;
   HEAP32[i35 + i1 >> 2] = i1;
   HEAP32[i2 + 4 >> 2] = i13 | 3;
  } else {
   HEAP32[4336] = 0;
   HEAP32[4339] = 0;
   HEAP32[i2 + 4 >> 2] = i3 | 3;
   i35 = i2 + i3 + 4 | 0;
   HEAP32[i35 >> 2] = HEAP32[i35 >> 2] | 1;
  }
  i35 = i2 + 8 | 0;
  STACKTOP = i36;
  return i35 | 0;
 }
 i8 = HEAP32[4337] | 0;
 if (i8 >>> 0 > i13 >>> 0) {
  i33 = i8 - i13 | 0;
  HEAP32[4337] = i33;
  i35 = HEAP32[4340] | 0;
  i34 = i35 + i13 | 0;
  HEAP32[4340] = i34;
  HEAP32[i34 + 4 >> 2] = i33 | 1;
  HEAP32[i35 + 4 >> 2] = i13 | 3;
  i35 = i35 + 8 | 0;
  STACKTOP = i36;
  return i35 | 0;
 }
 if (!(HEAP32[4452] | 0)) {
  HEAP32[4454] = 4096;
  HEAP32[4453] = 4096;
  HEAP32[4455] = -1;
  HEAP32[4456] = -1;
  HEAP32[4457] = 0;
  HEAP32[4445] = 0;
  i2 = i14 & -16 ^ 1431655768;
  HEAP32[i14 >> 2] = i2;
  HEAP32[4452] = i2;
  i2 = 4096;
 } else i2 = HEAP32[4454] | 0;
 i9 = i13 + 48 | 0;
 i10 = i13 + 47 | 0;
 i7 = i2 + i10 | 0;
 i5 = 0 - i2 | 0;
 i11 = i7 & i5;
 if (i11 >>> 0 <= i13 >>> 0) {
  i35 = 0;
  STACKTOP = i36;
  return i35 | 0;
 }
 i2 = HEAP32[4444] | 0;
 if (i2 | 0 ? (i26 = HEAP32[4442] | 0, i27 = i26 + i11 | 0, i27 >>> 0 <= i26 >>> 0 | i27 >>> 0 > i2 >>> 0) : 0) {
  i35 = 0;
  STACKTOP = i36;
  return i35 | 0;
 }
 L255 : do if (!(HEAP32[4445] & 4)) {
  i3 = HEAP32[4340] | 0;
  L257 : do if (i3) {
   i4 = 17784;
   while (1) {
    i2 = HEAP32[i4 >> 2] | 0;
    if (i2 >>> 0 <= i3 >>> 0 ? (i19 = i4 + 4 | 0, (i2 + (HEAP32[i19 >> 2] | 0) | 0) >>> 0 > i3 >>> 0) : 0) break;
    i2 = HEAP32[i4 + 8 >> 2] | 0;
    if (!i2) {
     i28 = 172;
     break L257;
    } else i4 = i2;
   }
   i3 = i7 - i8 & i5;
   if (i3 >>> 0 < 2147483647) {
    i2 = _sbrk(i3 | 0) | 0;
    if ((i2 | 0) == ((HEAP32[i4 >> 2] | 0) + (HEAP32[i19 >> 2] | 0) | 0)) {
     if ((i2 | 0) != (-1 | 0)) {
      i7 = i3;
      i6 = i2;
      i28 = 190;
      break L255;
     }
    } else {
     i1 = i3;
     i28 = 180;
    }
   }
  } else i28 = 172; while (0);
  do if (((i28 | 0) == 172 ? (i6 = _sbrk(0) | 0, (i6 | 0) != (-1 | 0)) : 0) ? (i1 = i6, i20 = HEAP32[4453] | 0, i21 = i20 + -1 | 0, i1 = ((i21 & i1 | 0) == 0 ? 0 : (i21 + i1 & 0 - i20) - i1 | 0) + i11 | 0, i20 = HEAP32[4442] | 0, i21 = i1 + i20 | 0, i1 >>> 0 > i13 >>> 0 & i1 >>> 0 < 2147483647) : 0) {
   i27 = HEAP32[4444] | 0;
   if (i27 | 0 ? i21 >>> 0 <= i20 >>> 0 | i21 >>> 0 > i27 >>> 0 : 0) break;
   i2 = _sbrk(i1 | 0) | 0;
   if ((i2 | 0) == (i6 | 0)) {
    i7 = i1;
    i28 = 190;
    break L255;
   } else i28 = 180;
  } while (0);
  L274 : do if ((i28 | 0) == 180) {
   i3 = 0 - i1 | 0;
   do if (i9 >>> 0 > i1 >>> 0 & (i1 >>> 0 < 2147483647 & (i2 | 0) != (-1 | 0)) ? (i22 = HEAP32[4454] | 0, i22 = i10 - i1 + i22 & 0 - i22, i22 >>> 0 < 2147483647) : 0) if ((_sbrk(i22 | 0) | 0) == (-1 | 0)) {
    _sbrk(i3 | 0) | 0;
    break L274;
   } else {
    i1 = i22 + i1 | 0;
    break;
   } while (0);
   if ((i2 | 0) != (-1 | 0)) {
    i7 = i1;
    i6 = i2;
    i28 = 190;
    break L255;
   }
  } while (0);
  HEAP32[4445] = HEAP32[4445] | 4;
  i28 = 187;
 } else i28 = 187; while (0);
 if ((((i28 | 0) == 187 ? i11 >>> 0 < 2147483647 : 0) ? (i25 = _sbrk(i11 | 0) | 0, i23 = _sbrk(0) | 0, i25 >>> 0 < i23 >>> 0 & ((i25 | 0) != (-1 | 0) & (i23 | 0) != (-1 | 0))) : 0) ? (i24 = i23 - i25 | 0, i24 >>> 0 > (i13 + 40 | 0) >>> 0) : 0) {
  i7 = i24;
  i6 = i25;
  i28 = 190;
 }
 if ((i28 | 0) == 190) {
  i1 = (HEAP32[4442] | 0) + i7 | 0;
  HEAP32[4442] = i1;
  if (i1 >>> 0 > (HEAP32[4443] | 0) >>> 0) HEAP32[4443] = i1;
  i10 = HEAP32[4340] | 0;
  do if (i10) {
   i1 = 17784;
   while (1) {
    i2 = HEAP32[i1 >> 2] | 0;
    i3 = i1 + 4 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i6 | 0) == (i2 + i4 | 0)) {
     i28 = 200;
     break;
    }
    i5 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i5) break; else i1 = i5;
   }
   if (((i28 | 0) == 200 ? (HEAP32[i1 + 12 >> 2] & 8 | 0) == 0 : 0) ? i10 >>> 0 < i6 >>> 0 & i10 >>> 0 >= i2 >>> 0 : 0) {
    HEAP32[i3 >> 2] = i4 + i7;
    i35 = i10 + 8 | 0;
    i35 = (i35 & 7 | 0) == 0 ? 0 : 0 - i35 & 7;
    i34 = i10 + i35 | 0;
    i35 = i7 - i35 + (HEAP32[4337] | 0) | 0;
    HEAP32[4340] = i34;
    HEAP32[4337] = i35;
    HEAP32[i34 + 4 >> 2] = i35 | 1;
    HEAP32[i34 + i35 + 4 >> 2] = 40;
    HEAP32[4341] = HEAP32[4456];
    break;
   }
   i1 = HEAP32[4338] | 0;
   if (i6 >>> 0 < i1 >>> 0) {
    HEAP32[4338] = i6;
    i8 = i6;
   } else i8 = i1;
   i2 = i6 + i7 | 0;
   i1 = 17784;
   while (1) {
    if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) {
     i28 = 208;
     break;
    }
    i1 = HEAP32[i1 + 8 >> 2] | 0;
    if (!i1) {
     i2 = 17784;
     break;
    }
   }
   if ((i28 | 0) == 208) if (!(HEAP32[i1 + 12 >> 2] & 8)) {
    HEAP32[i1 >> 2] = i6;
    i12 = i1 + 4 | 0;
    HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + i7;
    i12 = i6 + 8 | 0;
    i12 = i6 + ((i12 & 7 | 0) == 0 ? 0 : 0 - i12 & 7) | 0;
    i1 = i2 + 8 | 0;
    i1 = i2 + ((i1 & 7 | 0) == 0 ? 0 : 0 - i1 & 7) | 0;
    i11 = i12 + i13 | 0;
    i9 = i1 - i12 - i13 | 0;
    HEAP32[i12 + 4 >> 2] = i13 | 3;
    do if ((i1 | 0) != (i10 | 0)) {
     if ((i1 | 0) == (HEAP32[4339] | 0)) {
      i35 = (HEAP32[4336] | 0) + i9 | 0;
      HEAP32[4336] = i35;
      HEAP32[4339] = i11;
      HEAP32[i11 + 4 >> 2] = i35 | 1;
      HEAP32[i11 + i35 >> 2] = i35;
      break;
     }
     i2 = HEAP32[i1 + 4 >> 2] | 0;
     if ((i2 & 3 | 0) == 1) {
      i7 = i2 & -8;
      i5 = i2 >>> 3;
      L326 : do if (i2 >>> 0 >= 256) {
       i6 = HEAP32[i1 + 24 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       do if ((i4 | 0) == (i1 | 0)) {
        i4 = i1 + 16 | 0;
        i3 = i4 + 4 | 0;
        i2 = HEAP32[i3 >> 2] | 0;
        if (!i2) {
         i2 = HEAP32[i4 >> 2] | 0;
         if (!i2) {
          i33 = 0;
          break;
         } else i3 = i4;
        }
        while (1) {
         i4 = i2 + 20 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (i5 | 0) {
          i2 = i5;
          i3 = i4;
          continue;
         }
         i4 = i2 + 16 | 0;
         i5 = HEAP32[i4 >> 2] | 0;
         if (!i5) break; else {
          i2 = i5;
          i3 = i4;
         }
        }
        if (i3 >>> 0 < i8 >>> 0) _abort(); else {
         HEAP32[i3 >> 2] = 0;
         i33 = i2;
         break;
        }
       } else {
        i5 = HEAP32[i1 + 8 >> 2] | 0;
        if (i5 >>> 0 < i8 >>> 0) _abort();
        i2 = i5 + 12 | 0;
        if ((HEAP32[i2 >> 2] | 0) != (i1 | 0)) _abort();
        i3 = i4 + 8 | 0;
        if ((HEAP32[i3 >> 2] | 0) == (i1 | 0)) {
         HEAP32[i2 >> 2] = i4;
         HEAP32[i3 >> 2] = i5;
         i33 = i4;
         break;
        } else _abort();
       } while (0);
       if (!i6) break;
       i2 = HEAP32[i1 + 28 >> 2] | 0;
       i3 = 17640 + (i2 << 2) | 0;
       do if ((i1 | 0) != (HEAP32[i3 >> 2] | 0)) {
        if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
        i2 = i6 + 16 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) HEAP32[i2 >> 2] = i33; else HEAP32[i6 + 20 >> 2] = i33;
        if (!i33) break L326;
       } else {
        HEAP32[i3 >> 2] = i33;
        if (i33 | 0) break;
        HEAP32[4335] = HEAP32[4335] & ~(1 << i2);
        break L326;
       } while (0);
       i4 = HEAP32[4338] | 0;
       if (i33 >>> 0 < i4 >>> 0) _abort();
       HEAP32[i33 + 24 >> 2] = i6;
       i2 = i1 + 16 | 0;
       i3 = HEAP32[i2 >> 2] | 0;
       do if (i3 | 0) if (i3 >>> 0 < i4 >>> 0) _abort(); else {
        HEAP32[i33 + 16 >> 2] = i3;
        HEAP32[i3 + 24 >> 2] = i33;
        break;
       } while (0);
       i2 = HEAP32[i2 + 4 >> 2] | 0;
       if (!i2) break;
       if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
        HEAP32[i33 + 20 >> 2] = i2;
        HEAP32[i2 + 24 >> 2] = i33;
        break;
       }
      } else {
       i3 = HEAP32[i1 + 8 >> 2] | 0;
       i4 = HEAP32[i1 + 12 >> 2] | 0;
       i2 = 17376 + (i5 << 1 << 2) | 0;
       do if ((i3 | 0) != (i2 | 0)) {
        if (i3 >>> 0 < i8 >>> 0) _abort();
        if ((HEAP32[i3 + 12 >> 2] | 0) == (i1 | 0)) break;
        _abort();
       } while (0);
       if ((i4 | 0) == (i3 | 0)) {
        HEAP32[4334] = HEAP32[4334] & ~(1 << i5);
        break;
       }
       do if ((i4 | 0) == (i2 | 0)) i30 = i4 + 8 | 0; else {
        if (i4 >>> 0 < i8 >>> 0) _abort();
        i2 = i4 + 8 | 0;
        if ((HEAP32[i2 >> 2] | 0) == (i1 | 0)) {
         i30 = i2;
         break;
        }
        _abort();
       } while (0);
       HEAP32[i3 + 12 >> 2] = i4;
       HEAP32[i30 >> 2] = i3;
      } while (0);
      i1 = i1 + i7 | 0;
      i5 = i7 + i9 | 0;
     } else i5 = i9;
     i1 = i1 + 4 | 0;
     HEAP32[i1 >> 2] = HEAP32[i1 >> 2] & -2;
     HEAP32[i11 + 4 >> 2] = i5 | 1;
     HEAP32[i11 + i5 >> 2] = i5;
     i1 = i5 >>> 3;
     if (i5 >>> 0 < 256) {
      i3 = 17376 + (i1 << 1 << 2) | 0;
      i2 = HEAP32[4334] | 0;
      i1 = 1 << i1;
      do if (!(i2 & i1)) {
       HEAP32[4334] = i2 | i1;
       i34 = i3;
       i35 = i3 + 8 | 0;
      } else {
       i1 = i3 + 8 | 0;
       i2 = HEAP32[i1 >> 2] | 0;
       if (i2 >>> 0 >= (HEAP32[4338] | 0) >>> 0) {
        i34 = i2;
        i35 = i1;
        break;
       }
       _abort();
      } while (0);
      HEAP32[i35 >> 2] = i11;
      HEAP32[i34 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i34;
      HEAP32[i11 + 12 >> 2] = i3;
      break;
     }
     i1 = i5 >>> 8;
     do if (!i1) i1 = 0; else {
      if (i5 >>> 0 > 16777215) {
       i1 = 31;
       break;
      }
      i34 = (i1 + 1048320 | 0) >>> 16 & 8;
      i35 = i1 << i34;
      i33 = (i35 + 520192 | 0) >>> 16 & 4;
      i35 = i35 << i33;
      i1 = (i35 + 245760 | 0) >>> 16 & 2;
      i1 = 14 - (i33 | i34 | i1) + (i35 << i1 >>> 15) | 0;
      i1 = i5 >>> (i1 + 7 | 0) & 1 | i1 << 1;
     } while (0);
     i4 = 17640 + (i1 << 2) | 0;
     HEAP32[i11 + 28 >> 2] = i1;
     i2 = i11 + 16 | 0;
     HEAP32[i2 + 4 >> 2] = 0;
     HEAP32[i2 >> 2] = 0;
     i2 = HEAP32[4335] | 0;
     i3 = 1 << i1;
     if (!(i2 & i3)) {
      HEAP32[4335] = i2 | i3;
      HEAP32[i4 >> 2] = i11;
      HEAP32[i11 + 24 >> 2] = i4;
      HEAP32[i11 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i11;
      break;
     }
     i2 = i5 << ((i1 | 0) == 31 ? 0 : 25 - (i1 >>> 1) | 0);
     i4 = HEAP32[i4 >> 2] | 0;
     while (1) {
      if ((HEAP32[i4 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
       i28 = 278;
       break;
      }
      i3 = i4 + 16 + (i2 >>> 31 << 2) | 0;
      i1 = HEAP32[i3 >> 2] | 0;
      if (!i1) {
       i28 = 275;
       break;
      } else {
       i2 = i2 << 1;
       i4 = i1;
      }
     }
     if ((i28 | 0) == 275) if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
      HEAP32[i3 >> 2] = i11;
      HEAP32[i11 + 24 >> 2] = i4;
      HEAP32[i11 + 12 >> 2] = i11;
      HEAP32[i11 + 8 >> 2] = i11;
      break;
     } else if ((i28 | 0) == 278) {
      i1 = i4 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      i35 = HEAP32[4338] | 0;
      if (i2 >>> 0 >= i35 >>> 0 & i4 >>> 0 >= i35 >>> 0) {
       HEAP32[i2 + 12 >> 2] = i11;
       HEAP32[i1 >> 2] = i11;
       HEAP32[i11 + 8 >> 2] = i2;
       HEAP32[i11 + 12 >> 2] = i4;
       HEAP32[i11 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } else {
     i35 = (HEAP32[4337] | 0) + i9 | 0;
     HEAP32[4337] = i35;
     HEAP32[4340] = i11;
     HEAP32[i11 + 4 >> 2] = i35 | 1;
    } while (0);
    i35 = i12 + 8 | 0;
    STACKTOP = i36;
    return i35 | 0;
   } else i2 = 17784;
   while (1) {
    i1 = HEAP32[i2 >> 2] | 0;
    if (i1 >>> 0 <= i10 >>> 0 ? (i29 = i1 + (HEAP32[i2 + 4 >> 2] | 0) | 0, i29 >>> 0 > i10 >>> 0) : 0) break;
    i2 = HEAP32[i2 + 8 >> 2] | 0;
   }
   i5 = i29 + -47 | 0;
   i2 = i5 + 8 | 0;
   i2 = i5 + ((i2 & 7 | 0) == 0 ? 0 : 0 - i2 & 7) | 0;
   i5 = i10 + 16 | 0;
   i2 = i2 >>> 0 < i5 >>> 0 ? i10 : i2;
   i1 = i2 + 8 | 0;
   i3 = i6 + 8 | 0;
   i3 = (i3 & 7 | 0) == 0 ? 0 : 0 - i3 & 7;
   i35 = i6 + i3 | 0;
   i3 = i7 + -40 - i3 | 0;
   HEAP32[4340] = i35;
   HEAP32[4337] = i3;
   HEAP32[i35 + 4 >> 2] = i3 | 1;
   HEAP32[i35 + i3 + 4 >> 2] = 40;
   HEAP32[4341] = HEAP32[4456];
   i3 = i2 + 4 | 0;
   HEAP32[i3 >> 2] = 27;
   HEAP32[i1 >> 2] = HEAP32[4446];
   HEAP32[i1 + 4 >> 2] = HEAP32[4447];
   HEAP32[i1 + 8 >> 2] = HEAP32[4448];
   HEAP32[i1 + 12 >> 2] = HEAP32[4449];
   HEAP32[4446] = i6;
   HEAP32[4447] = i7;
   HEAP32[4449] = 0;
   HEAP32[4448] = i1;
   i1 = i2 + 24 | 0;
   do {
    i1 = i1 + 4 | 0;
    HEAP32[i1 >> 2] = 7;
   } while ((i1 + 4 | 0) >>> 0 < i29 >>> 0);
   if ((i2 | 0) != (i10 | 0)) {
    i6 = i2 - i10 | 0;
    HEAP32[i3 >> 2] = HEAP32[i3 >> 2] & -2;
    HEAP32[i10 + 4 >> 2] = i6 | 1;
    HEAP32[i2 >> 2] = i6;
    i1 = i6 >>> 3;
    if (i6 >>> 0 < 256) {
     i3 = 17376 + (i1 << 1 << 2) | 0;
     i2 = HEAP32[4334] | 0;
     i1 = 1 << i1;
     if (i2 & i1) {
      i1 = i3 + 8 | 0;
      i2 = HEAP32[i1 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
       i31 = i2;
       i32 = i1;
      }
     } else {
      HEAP32[4334] = i2 | i1;
      i31 = i3;
      i32 = i3 + 8 | 0;
     }
     HEAP32[i32 >> 2] = i10;
     HEAP32[i31 + 12 >> 2] = i10;
     HEAP32[i10 + 8 >> 2] = i31;
     HEAP32[i10 + 12 >> 2] = i3;
     break;
    }
    i1 = i6 >>> 8;
    if (i1) if (i6 >>> 0 > 16777215) i3 = 31; else {
     i34 = (i1 + 1048320 | 0) >>> 16 & 8;
     i35 = i1 << i34;
     i33 = (i35 + 520192 | 0) >>> 16 & 4;
     i35 = i35 << i33;
     i3 = (i35 + 245760 | 0) >>> 16 & 2;
     i3 = 14 - (i33 | i34 | i3) + (i35 << i3 >>> 15) | 0;
     i3 = i6 >>> (i3 + 7 | 0) & 1 | i3 << 1;
    } else i3 = 0;
    i4 = 17640 + (i3 << 2) | 0;
    HEAP32[i10 + 28 >> 2] = i3;
    HEAP32[i10 + 20 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    i1 = HEAP32[4335] | 0;
    i2 = 1 << i3;
    if (!(i1 & i2)) {
     HEAP32[4335] = i1 | i2;
     HEAP32[i4 >> 2] = i10;
     HEAP32[i10 + 24 >> 2] = i4;
     HEAP32[i10 + 12 >> 2] = i10;
     HEAP32[i10 + 8 >> 2] = i10;
     break;
    }
    i2 = i6 << ((i3 | 0) == 31 ? 0 : 25 - (i3 >>> 1) | 0);
    i4 = HEAP32[i4 >> 2] | 0;
    while (1) {
     if ((HEAP32[i4 + 4 >> 2] & -8 | 0) == (i6 | 0)) {
      i28 = 304;
      break;
     }
     i3 = i4 + 16 + (i2 >>> 31 << 2) | 0;
     i1 = HEAP32[i3 >> 2] | 0;
     if (!i1) {
      i28 = 301;
      break;
     } else {
      i2 = i2 << 1;
      i4 = i1;
     }
    }
    if ((i28 | 0) == 301) if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
     HEAP32[i3 >> 2] = i10;
     HEAP32[i10 + 24 >> 2] = i4;
     HEAP32[i10 + 12 >> 2] = i10;
     HEAP32[i10 + 8 >> 2] = i10;
     break;
    } else if ((i28 | 0) == 304) {
     i1 = i4 + 8 | 0;
     i2 = HEAP32[i1 >> 2] | 0;
     i35 = HEAP32[4338] | 0;
     if (i2 >>> 0 >= i35 >>> 0 & i4 >>> 0 >= i35 >>> 0) {
      HEAP32[i2 + 12 >> 2] = i10;
      HEAP32[i1 >> 2] = i10;
      HEAP32[i10 + 8 >> 2] = i2;
      HEAP32[i10 + 12 >> 2] = i4;
      HEAP32[i10 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } else {
   i35 = HEAP32[4338] | 0;
   if ((i35 | 0) == 0 | i6 >>> 0 < i35 >>> 0) HEAP32[4338] = i6;
   HEAP32[4446] = i6;
   HEAP32[4447] = i7;
   HEAP32[4449] = 0;
   HEAP32[4343] = HEAP32[4452];
   HEAP32[4342] = -1;
   i1 = 0;
   do {
    i35 = 17376 + (i1 << 1 << 2) | 0;
    HEAP32[i35 + 12 >> 2] = i35;
    HEAP32[i35 + 8 >> 2] = i35;
    i1 = i1 + 1 | 0;
   } while ((i1 | 0) != 32);
   i35 = i6 + 8 | 0;
   i35 = (i35 & 7 | 0) == 0 ? 0 : 0 - i35 & 7;
   i34 = i6 + i35 | 0;
   i35 = i7 + -40 - i35 | 0;
   HEAP32[4340] = i34;
   HEAP32[4337] = i35;
   HEAP32[i34 + 4 >> 2] = i35 | 1;
   HEAP32[i34 + i35 + 4 >> 2] = 40;
   HEAP32[4341] = HEAP32[4456];
  } while (0);
  i1 = HEAP32[4337] | 0;
  if (i1 >>> 0 > i13 >>> 0) {
   i33 = i1 - i13 | 0;
   HEAP32[4337] = i33;
   i35 = HEAP32[4340] | 0;
   i34 = i35 + i13 | 0;
   HEAP32[4340] = i34;
   HEAP32[i34 + 4 >> 2] = i33 | 1;
   HEAP32[i35 + 4 >> 2] = i13 | 3;
   i35 = i35 + 8 | 0;
   STACKTOP = i36;
   return i35 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 i35 = 0;
 STACKTOP = i36;
 return i35 | 0;
}

function _printf_core(i28, i3, i52, i53, i54) {
 i28 = i28 | 0;
 i3 = i3 | 0;
 i52 = i52 | 0;
 i53 = i53 | 0;
 i54 = i54 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0, d6 = 0.0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, d11 = 0.0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i36 = 0, i37 = 0, i38 = 0, i39 = 0, i40 = 0, i41 = 0, i42 = 0, i43 = 0, i44 = 0, i45 = 0, i46 = 0, i47 = 0, i48 = 0, i49 = 0, i50 = 0, i51 = 0, i55 = 0;
 i55 = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 i48 = i55 + 24 | 0;
 i49 = i55 + 16 | 0;
 i50 = i55 + 588 | 0;
 i39 = i55 + 576 | 0;
 i51 = i55;
 i34 = i55 + 536 | 0;
 i29 = i55 + 8 | 0;
 i30 = i55 + 528 | 0;
 i31 = (i28 | 0) != 0;
 i32 = i34 + 40 | 0;
 i33 = i32;
 i34 = i34 + 39 | 0;
 i35 = i29 + 4 | 0;
 i36 = i50;
 i37 = 0 - i36 | 0;
 i38 = i39 + 12 | 0;
 i39 = i39 + 11 | 0;
 i40 = i38;
 i41 = i40 - i36 | 0;
 i42 = -2 - i36 | 0;
 i43 = i40 + 2 | 0;
 i44 = i48 + 288 | 0;
 i45 = i50 + 9 | 0;
 i46 = i45;
 i47 = i50 + 8 | 0;
 i2 = 0;
 i1 = 0;
 i8 = 0;
 L1 : while (1) {
  do if ((i1 | 0) > -1) if ((i2 | 0) > (2147483647 - i1 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   i1 = -1;
   break;
  } else {
   i1 = i2 + i1 | 0;
   break;
  } while (0);
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) {
   i27 = 243;
   break;
  } else i4 = i3;
  L9 : while (1) {
   switch (i2 << 24 >> 24) {
   case 37:
    {
     i2 = i4;
     i27 = 9;
     break L9;
    }
   case 0:
    {
     i2 = i4;
     break L9;
    }
   default:
    {}
   }
   i2 = i4 + 1 | 0;
   i4 = i2;
   i2 = HEAP8[i2 >> 0] | 0;
  }
  L12 : do if ((i27 | 0) == 9) while (1) {
   i27 = 0;
   if ((HEAP8[i4 + 1 >> 0] | 0) != 37) break L12;
   i2 = i2 + 1 | 0;
   i4 = i4 + 2 | 0;
   if ((HEAP8[i4 >> 0] | 0) == 37) i27 = 9; else break;
  } while (0);
  i2 = i2 - i3 | 0;
  if (i31 ? (HEAP32[i28 >> 2] & 32 | 0) == 0 : 0) ___fwritex(i3, i2, i28) | 0;
  if (i2 | 0) {
   i3 = i4;
   continue;
  }
  i7 = i4 + 1 | 0;
  i5 = HEAP8[i7 >> 0] | 0;
  i2 = (i5 << 24 >> 24) + -48 | 0;
  if (i2 >>> 0 < 10) {
   i10 = (HEAP8[i4 + 2 >> 0] | 0) == 36;
   i7 = i10 ? i4 + 3 | 0 : i7;
   i12 = i10 ? i2 : -1;
   i10 = i10 ? 1 : i8;
   i2 = HEAP8[i7 >> 0] | 0;
  } else {
   i12 = -1;
   i10 = i8;
   i2 = i5;
  }
  i4 = (i2 << 24 >> 24) + -32 | 0;
  L25 : do if (i4 >>> 0 < 32) {
   i5 = 0;
   do {
    if (!(1 << i4 & 75913)) break L25;
    i5 = 1 << (i2 << 24 >> 24) + -32 | i5;
    i7 = i7 + 1 | 0;
    i2 = HEAP8[i7 >> 0] | 0;
    i4 = (i2 << 24 >> 24) + -32 | 0;
   } while (i4 >>> 0 < 32);
  } else i5 = 0; while (0);
  do if (i2 << 24 >> 24 != 42) {
   i4 = (i2 << 24 >> 24) + -48 | 0;
   if (i4 >>> 0 < 10) {
    i8 = 0;
    do {
     i8 = (i8 * 10 | 0) + i4 | 0;
     i7 = i7 + 1 | 0;
     i2 = HEAP8[i7 >> 0] | 0;
     i4 = (i2 << 24 >> 24) + -48 | 0;
    } while (i4 >>> 0 < 10);
    if ((i8 | 0) < 0) {
     i1 = -1;
     break L1;
    } else i26 = i10;
   } else {
    i8 = 0;
    i26 = i10;
   }
  } else {
   i9 = i7 + 1 | 0;
   i2 = HEAP8[i9 >> 0] | 0;
   i4 = (i2 << 24 >> 24) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i7 + 2 >> 0] | 0) == 36 : 0) {
    HEAP32[i54 + (i4 << 2) >> 2] = 10;
    i2 = HEAP32[i53 + ((HEAP8[i9 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i4 = 1;
    i9 = i7 + 3 | 0;
   } else {
    if (i10 | 0) {
     i1 = -1;
     break L1;
    }
    if (!i31) {
     i8 = 0;
     i26 = 0;
     i7 = i9;
     break;
    }
    i4 = (HEAP32[i52 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i2 = HEAP32[i4 >> 2] | 0;
    HEAP32[i52 >> 2] = i4 + 4;
    i4 = 0;
   }
   i26 = (i2 | 0) < 0;
   i8 = i26 ? 0 - i2 | 0 : i2;
   i5 = i26 ? i5 | 8192 : i5;
   i26 = i4;
   i7 = i9;
   i2 = HEAP8[i9 >> 0] | 0;
  } while (0);
  L45 : do if (i2 << 24 >> 24 == 46) {
   i2 = i7 + 1 | 0;
   i4 = HEAP8[i2 >> 0] | 0;
   if (i4 << 24 >> 24 != 42) {
    i7 = (i4 << 24 >> 24) + -48 | 0;
    if (i7 >>> 0 < 10) i4 = 0; else {
     i13 = 0;
     break;
    }
    while (1) {
     i4 = (i4 * 10 | 0) + i7 | 0;
     i2 = i2 + 1 | 0;
     i7 = (HEAP8[i2 >> 0] | 0) + -48 | 0;
     if (i7 >>> 0 >= 10) {
      i13 = i4;
      break L45;
     }
    }
   }
   i2 = i7 + 2 | 0;
   i4 = (HEAP8[i2 >> 0] | 0) + -48 | 0;
   if (i4 >>> 0 < 10 ? (HEAP8[i7 + 3 >> 0] | 0) == 36 : 0) {
    HEAP32[i54 + (i4 << 2) >> 2] = 10;
    i13 = HEAP32[i53 + ((HEAP8[i2 >> 0] | 0) + -48 << 3) >> 2] | 0;
    i2 = i7 + 4 | 0;
    break;
   }
   if (i26 | 0) {
    i1 = -1;
    break L1;
   }
   if (i31) {
    i25 = (HEAP32[i52 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    i13 = HEAP32[i25 >> 2] | 0;
    HEAP32[i52 >> 2] = i25 + 4;
   } else i13 = 0;
  } else {
   i13 = -1;
   i2 = i7;
  } while (0);
  i10 = 0;
  while (1) {
   i4 = (HEAP8[i2 >> 0] | 0) + -65 | 0;
   if (i4 >>> 0 > 57) {
    i1 = -1;
    break L1;
   }
   i25 = i2 + 1 | 0;
   i4 = HEAP8[10414 + (i10 * 58 | 0) + i4 >> 0] | 0;
   i7 = i4 & 255;
   if ((i7 + -1 | 0) >>> 0 < 8) {
    i10 = i7;
    i2 = i25;
   } else break;
  }
  if (!(i4 << 24 >> 24)) {
   i1 = -1;
   break;
  }
  i9 = (i12 | 0) > -1;
  do if (i4 << 24 >> 24 == 19) if (i9) {
   i1 = -1;
   break L1;
  } else i27 = 51; else {
   if (i9) {
    HEAP32[i54 + (i12 << 2) >> 2] = i7;
    i23 = i53 + (i12 << 3) | 0;
    i24 = HEAP32[i23 + 4 >> 2] | 0;
    i27 = i51;
    HEAP32[i27 >> 2] = HEAP32[i23 >> 2];
    HEAP32[i27 + 4 >> 2] = i24;
    i27 = 51;
    break;
   }
   if (!i31) {
    i1 = 0;
    break L1;
   }
   _pop_arg(i51, i7, i52);
  } while (0);
  if ((i27 | 0) == 51 ? (i27 = 0, !i31) : 0) {
   i2 = 0;
   i8 = i26;
   i3 = i25;
   continue;
  }
  i20 = HEAP8[i2 >> 0] | 0;
  i20 = (i10 | 0) != 0 & (i20 & 15 | 0) == 3 ? i20 & -33 : i20;
  i9 = i5 & -65537;
  i24 = (i5 & 8192 | 0) == 0 ? i5 : i9;
  L74 : do switch (i20 | 0) {
  case 110:
   switch ((i10 & 255) << 24 >> 24) {
   case 0:
    {
     HEAP32[HEAP32[i51 >> 2] >> 2] = i1;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 1:
    {
     HEAP32[HEAP32[i51 >> 2] >> 2] = i1;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 2:
    {
     i2 = HEAP32[i51 >> 2] | 0;
     HEAP32[i2 >> 2] = i1;
     HEAP32[i2 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 3:
    {
     HEAP16[HEAP32[i51 >> 2] >> 1] = i1;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 4:
    {
     HEAP8[HEAP32[i51 >> 2] >> 0] = i1;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 6:
    {
     HEAP32[HEAP32[i51 >> 2] >> 2] = i1;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   case 7:
    {
     i2 = HEAP32[i51 >> 2] | 0;
     HEAP32[i2 >> 2] = i1;
     HEAP32[i2 + 4 >> 2] = ((i1 | 0) < 0) << 31 >> 31;
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   default:
    {
     i2 = 0;
     i8 = i26;
     i3 = i25;
     continue L1;
    }
   }
  case 112:
   {
    i9 = 120;
    i10 = i13 >>> 0 > 8 ? i13 : 8;
    i2 = i24 | 8;
    i27 = 63;
    break;
   }
  case 88:
  case 120:
   {
    i9 = i20;
    i10 = i13;
    i2 = i24;
    i27 = 63;
    break;
   }
  case 111:
   {
    i4 = i51;
    i2 = HEAP32[i4 >> 2] | 0;
    i4 = HEAP32[i4 + 4 >> 2] | 0;
    if ((i2 | 0) == 0 & (i4 | 0) == 0) i3 = i32; else {
     i3 = i32;
     do {
      i3 = i3 + -1 | 0;
      HEAP8[i3 >> 0] = i2 & 7 | 48;
      i2 = _bitshift64Lshr(i2 | 0, i4 | 0, 3) | 0;
      i4 = tempRet0;
     } while (!((i2 | 0) == 0 & (i4 | 0) == 0));
    }
    if (!(i24 & 8)) {
     i4 = 0;
     i5 = 10894;
     i7 = i13;
     i2 = i24;
     i27 = 76;
    } else {
     i7 = i33 - i3 | 0;
     i4 = 0;
     i5 = 10894;
     i7 = (i13 | 0) > (i7 | 0) ? i13 : i7 + 1 | 0;
     i2 = i24;
     i27 = 76;
    }
    break;
   }
  case 105:
  case 100:
   {
    i3 = i51;
    i2 = HEAP32[i3 >> 2] | 0;
    i3 = HEAP32[i3 + 4 >> 2] | 0;
    if ((i3 | 0) < 0) {
     i2 = _i64Subtract(0, 0, i2 | 0, i3 | 0) | 0;
     i3 = tempRet0;
     i4 = i51;
     HEAP32[i4 >> 2] = i2;
     HEAP32[i4 + 4 >> 2] = i3;
     i4 = 1;
     i5 = 10894;
     i27 = 75;
     break L74;
    }
    if (!(i24 & 2048)) {
     i5 = i24 & 1;
     i4 = i5;
     i5 = (i5 | 0) == 0 ? 10894 : 10896;
     i27 = 75;
    } else {
     i4 = 1;
     i5 = 10895;
     i27 = 75;
    }
    break;
   }
  case 117:
   {
    i3 = i51;
    i4 = 0;
    i5 = 10894;
    i2 = HEAP32[i3 >> 2] | 0;
    i3 = HEAP32[i3 + 4 >> 2] | 0;
    i27 = 75;
    break;
   }
  case 99:
   {
    HEAP8[i34 >> 0] = HEAP32[i51 >> 2];
    i3 = i34;
    i12 = 0;
    i10 = 10894;
    i4 = i32;
    i2 = 1;
    break;
   }
  case 109:
   {
    i2 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    i27 = 81;
    break;
   }
  case 115:
   {
    i2 = HEAP32[i51 >> 2] | 0;
    i2 = i2 | 0 ? i2 : 10904;
    i27 = 81;
    break;
   }
  case 67:
   {
    HEAP32[i29 >> 2] = HEAP32[i51 >> 2];
    HEAP32[i35 >> 2] = 0;
    HEAP32[i51 >> 2] = i29;
    i9 = -1;
    i4 = i29;
    i27 = 85;
    break;
   }
  case 83:
   {
    i2 = HEAP32[i51 >> 2] | 0;
    if (!i13) {
     _pad(i28, 32, i8, 0, i24);
     i2 = 0;
     i27 = 96;
    } else {
     i9 = i13;
     i4 = i2;
     i27 = 85;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    d6 = +HEAPF64[i51 >> 3];
    HEAP32[i49 >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = d6;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) >= 0) {
     i2 = i24 & 1;
     if (!(i24 & 2048)) {
      i22 = i2;
      i23 = (i2 | 0) == 0 ? 10912 : 10917;
     } else {
      i22 = 1;
      i23 = 10914;
     }
    } else {
     d6 = -d6;
     i22 = 1;
     i23 = 10911;
    }
    HEAPF64[tempDoublePtr >> 3] = d6;
    i21 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if (i21 >>> 0 < 2146435072 | (i21 | 0) == 2146435072 & 0 < 0) {
     d11 = +_frexpl(d6, i49) * 2.0;
     i3 = d11 != 0.0;
     if (i3) HEAP32[i49 >> 2] = (HEAP32[i49 >> 2] | 0) + -1;
     i15 = i20 | 32;
     if ((i15 | 0) == 97) {
      i7 = i20 & 32;
      i12 = (i7 | 0) == 0 ? i23 : i23 + 9 | 0;
      i10 = i22 | 2;
      i2 = 12 - i13 | 0;
      do if (!(i13 >>> 0 > 11 | (i2 | 0) == 0)) {
       d6 = 8.0;
       do {
        i2 = i2 + -1 | 0;
        d6 = d6 * 16.0;
       } while ((i2 | 0) != 0);
       if ((HEAP8[i12 >> 0] | 0) == 45) {
        d6 = -(d6 + (-d11 - d6));
        break;
       } else {
        d6 = d11 + d6 - d6;
        break;
       }
      } else d6 = d11; while (0);
      i3 = HEAP32[i49 >> 2] | 0;
      i2 = (i3 | 0) < 0 ? 0 - i3 | 0 : i3;
      i2 = _fmt_u(i2, ((i2 | 0) < 0) << 31 >> 31, i38) | 0;
      if ((i2 | 0) == (i38 | 0)) {
       HEAP8[i39 >> 0] = 48;
       i2 = i39;
      }
      HEAP8[i2 + -1 >> 0] = (i3 >> 31 & 2) + 43;
      i9 = i2 + -2 | 0;
      HEAP8[i9 >> 0] = i20 + 15;
      i5 = (i13 | 0) < 1;
      i4 = (i24 & 8 | 0) == 0;
      i2 = i50;
      do {
       i23 = ~~d6;
       i3 = i2 + 1 | 0;
       HEAP8[i2 >> 0] = HEAPU8[10878 + i23 >> 0] | i7;
       d6 = (d6 - +(i23 | 0)) * 16.0;
       do if ((i3 - i36 | 0) == 1) {
        if (i4 & (i5 & d6 == 0.0)) {
         i2 = i3;
         break;
        }
        HEAP8[i3 >> 0] = 46;
        i2 = i2 + 2 | 0;
       } else i2 = i3; while (0);
      } while (d6 != 0.0);
      i5 = i9;
      i4 = (i13 | 0) != 0 & (i42 + i2 | 0) < (i13 | 0) ? i43 + i13 - i5 | 0 : i41 - i5 + i2 | 0;
      i7 = i4 + i10 | 0;
      _pad(i28, 32, i8, i7, i24);
      if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i12, i10, i28) | 0;
      _pad(i28, 48, i8, i7, i24 ^ 65536);
      i3 = i2 - i36 | 0;
      if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i50, i3, i28) | 0;
      i2 = i40 - i5 | 0;
      _pad(i28, 48, i4 - (i3 + i2) | 0, 0, 0);
      if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i9, i2, i28) | 0;
      _pad(i28, 32, i8, i7, i24 ^ 8192);
      i2 = (i7 | 0) < (i8 | 0) ? i8 : i7;
      break;
     }
     i2 = (i13 | 0) < 0 ? 6 : i13;
     if (i3) {
      i3 = (HEAP32[i49 >> 2] | 0) + -28 | 0;
      HEAP32[i49 >> 2] = i3;
      d6 = d11 * 268435456.0;
     } else {
      d6 = d11;
      i3 = HEAP32[i49 >> 2] | 0;
     }
     i21 = (i3 | 0) < 0 ? i48 : i44;
     i4 = i21;
     do {
      i19 = ~~d6 >>> 0;
      HEAP32[i4 >> 2] = i19;
      i4 = i4 + 4 | 0;
      d6 = (d6 - +(i19 >>> 0)) * 1.0e9;
     } while (d6 != 0.0);
     if ((i3 | 0) > 0) {
      i5 = i21;
      i9 = i4;
      while (1) {
       i7 = (i3 | 0) > 29 ? 29 : i3;
       i3 = i9 + -4 | 0;
       do if (i3 >>> 0 >= i5 >>> 0) {
        i4 = 0;
        do {
         i18 = _bitshift64Shl(HEAP32[i3 >> 2] | 0, 0, i7 | 0) | 0;
         i18 = _i64Add(i18 | 0, tempRet0 | 0, i4 | 0, 0) | 0;
         i19 = tempRet0;
         i17 = ___uremdi3(i18 | 0, i19 | 0, 1e9, 0) | 0;
         HEAP32[i3 >> 2] = i17;
         i4 = ___udivdi3(i18 | 0, i19 | 0, 1e9, 0) | 0;
         i3 = i3 + -4 | 0;
        } while (i3 >>> 0 >= i5 >>> 0);
        if (!i4) break;
        i5 = i5 + -4 | 0;
        HEAP32[i5 >> 2] = i4;
       } while (0);
       i4 = i9;
       while (1) {
        if (i4 >>> 0 <= i5 >>> 0) break;
        i3 = i4 + -4 | 0;
        if (!(HEAP32[i3 >> 2] | 0)) i4 = i3; else break;
       }
       i3 = (HEAP32[i49 >> 2] | 0) - i7 | 0;
       HEAP32[i49 >> 2] = i3;
       if ((i3 | 0) > 0) i9 = i4; else break;
      }
     } else i5 = i21;
     if ((i3 | 0) < 0) {
      i13 = ((i2 + 25 | 0) / 9 | 0) + 1 | 0;
      i14 = (i15 | 0) == 102;
      do {
       i12 = 0 - i3 | 0;
       i12 = (i12 | 0) > 9 ? 9 : i12;
       do if (i5 >>> 0 < i4 >>> 0) {
        i7 = (1 << i12) + -1 | 0;
        i9 = 1e9 >>> i12;
        i10 = 0;
        i3 = i5;
        do {
         i19 = HEAP32[i3 >> 2] | 0;
         HEAP32[i3 >> 2] = (i19 >>> i12) + i10;
         i10 = Math_imul(i19 & i7, i9) | 0;
         i3 = i3 + 4 | 0;
        } while (i3 >>> 0 < i4 >>> 0);
        i3 = (HEAP32[i5 >> 2] | 0) == 0 ? i5 + 4 | 0 : i5;
        if (!i10) {
         i5 = i3;
         i3 = i4;
         break;
        }
        HEAP32[i4 >> 2] = i10;
        i5 = i3;
        i3 = i4 + 4 | 0;
       } else {
        i5 = (HEAP32[i5 >> 2] | 0) == 0 ? i5 + 4 | 0 : i5;
        i3 = i4;
       } while (0);
       i4 = i14 ? i21 : i5;
       i4 = (i3 - i4 >> 2 | 0) > (i13 | 0) ? i4 + (i13 << 2) | 0 : i3;
       i3 = (HEAP32[i49 >> 2] | 0) + i12 | 0;
       HEAP32[i49 >> 2] = i3;
      } while ((i3 | 0) < 0);
     }
     i19 = i21;
     do if (i5 >>> 0 < i4 >>> 0) {
      i3 = (i19 - i5 >> 2) * 9 | 0;
      i9 = HEAP32[i5 >> 2] | 0;
      if (i9 >>> 0 < 10) break; else i7 = 10;
      do {
       i7 = i7 * 10 | 0;
       i3 = i3 + 1 | 0;
      } while (i9 >>> 0 >= i7 >>> 0);
     } else i3 = 0; while (0);
     i16 = (i15 | 0) == 103;
     i17 = (i2 | 0) != 0;
     i7 = i2 - ((i15 | 0) != 102 ? i3 : 0) + ((i17 & i16) << 31 >> 31) | 0;
     if ((i7 | 0) < (((i4 - i19 >> 2) * 9 | 0) + -9 | 0)) {
      i7 = i7 + 9216 | 0;
      i10 = i21 + 4 + (((i7 | 0) / 9 | 0) + -1024 << 2) | 0;
      i7 = ((i7 | 0) % 9 | 0) + 1 | 0;
      if ((i7 | 0) < 9) {
       i9 = 10;
       do {
        i9 = i9 * 10 | 0;
        i7 = i7 + 1 | 0;
       } while ((i7 | 0) != 9);
      } else i9 = 10;
      i13 = HEAP32[i10 >> 2] | 0;
      i14 = (i13 >>> 0) % (i9 >>> 0) | 0;
      i7 = (i10 + 4 | 0) == (i4 | 0);
      do if (i7 & (i14 | 0) == 0) i7 = i10; else {
       d11 = (((i13 >>> 0) / (i9 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       i12 = (i9 | 0) / 2 | 0;
       if (i14 >>> 0 < i12 >>> 0) d6 = .5; else d6 = i7 & (i14 | 0) == (i12 | 0) ? 1.0 : 1.5;
       do if (i22) {
        if ((HEAP8[i23 >> 0] | 0) != 45) break;
        d6 = -d6;
        d11 = -d11;
       } while (0);
       i7 = i13 - i14 | 0;
       HEAP32[i10 >> 2] = i7;
       if (!(d11 + d6 != d11)) {
        i7 = i10;
        break;
       }
       i18 = i7 + i9 | 0;
       HEAP32[i10 >> 2] = i18;
       if (i18 >>> 0 > 999999999) {
        i7 = i10;
        while (1) {
         i3 = i7 + -4 | 0;
         HEAP32[i7 >> 2] = 0;
         if (i3 >>> 0 < i5 >>> 0) {
          i5 = i5 + -4 | 0;
          HEAP32[i5 >> 2] = 0;
         }
         i18 = (HEAP32[i3 >> 2] | 0) + 1 | 0;
         HEAP32[i3 >> 2] = i18;
         if (i18 >>> 0 > 999999999) i7 = i3; else {
          i10 = i3;
          break;
         }
        }
       }
       i3 = (i19 - i5 >> 2) * 9 | 0;
       i9 = HEAP32[i5 >> 2] | 0;
       if (i9 >>> 0 < 10) {
        i7 = i10;
        break;
       } else i7 = 10;
       do {
        i7 = i7 * 10 | 0;
        i3 = i3 + 1 | 0;
       } while (i9 >>> 0 >= i7 >>> 0);
       i7 = i10;
      } while (0);
      i18 = i7 + 4 | 0;
      i4 = i4 >>> 0 > i18 >>> 0 ? i18 : i4;
     }
     i14 = 0 - i3 | 0;
     i18 = i4;
     while (1) {
      if (i18 >>> 0 <= i5 >>> 0) {
       i15 = 0;
       break;
      }
      i4 = i18 + -4 | 0;
      if (!(HEAP32[i4 >> 2] | 0)) i18 = i4; else {
       i15 = 1;
       break;
      }
     }
     do if (i16) {
      i2 = (i17 & 1 ^ 1) + i2 | 0;
      if ((i2 | 0) > (i3 | 0) & (i3 | 0) > -5) {
       i10 = i20 + -1 | 0;
       i2 = i2 + -1 - i3 | 0;
      } else {
       i10 = i20 + -2 | 0;
       i2 = i2 + -1 | 0;
      }
      i4 = i24 & 8;
      if (i4 | 0) {
       i12 = i4;
       break;
      }
      do if (i15) {
       i9 = HEAP32[i18 + -4 >> 2] | 0;
       if (!i9) {
        i7 = 9;
        break;
       }
       if (!((i9 >>> 0) % 10 | 0)) {
        i7 = 0;
        i4 = 10;
       } else {
        i7 = 0;
        break;
       }
       do {
        i4 = i4 * 10 | 0;
        i7 = i7 + 1 | 0;
       } while (!((i9 >>> 0) % (i4 >>> 0) | 0 | 0));
      } else i7 = 9; while (0);
      i4 = ((i18 - i19 >> 2) * 9 | 0) + -9 | 0;
      if ((i10 | 32 | 0) == 102) {
       i12 = i4 - i7 | 0;
       i12 = (i12 | 0) < 0 ? 0 : i12;
       i2 = (i2 | 0) < (i12 | 0) ? i2 : i12;
       i12 = 0;
       break;
      } else {
       i12 = i4 + i3 - i7 | 0;
       i12 = (i12 | 0) < 0 ? 0 : i12;
       i2 = (i2 | 0) < (i12 | 0) ? i2 : i12;
       i12 = 0;
       break;
      }
     } else {
      i10 = i20;
      i12 = i24 & 8;
     } while (0);
     i13 = i2 | i12;
     i7 = (i13 | 0) != 0 & 1;
     i9 = (i10 | 32 | 0) == 102;
     if (i9) {
      i14 = 0;
      i3 = (i3 | 0) > 0 ? i3 : 0;
     } else {
      i4 = (i3 | 0) < 0 ? i14 : i3;
      i4 = _fmt_u(i4, ((i4 | 0) < 0) << 31 >> 31, i38) | 0;
      if ((i40 - i4 | 0) < 2) do {
       i4 = i4 + -1 | 0;
       HEAP8[i4 >> 0] = 48;
      } while ((i40 - i4 | 0) < 2);
      HEAP8[i4 + -1 >> 0] = (i3 >> 31 & 2) + 43;
      i3 = i4 + -2 | 0;
      HEAP8[i3 >> 0] = i10;
      i14 = i3;
      i3 = i40 - i3 | 0;
     }
     i16 = i22 + 1 + i2 + i7 + i3 | 0;
     _pad(i28, 32, i8, i16, i24);
     if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i23, i22, i28) | 0;
     _pad(i28, 48, i8, i16, i24 ^ 65536);
     do if (i9) {
      i5 = i5 >>> 0 > i21 >>> 0 ? i21 : i5;
      i4 = i5;
      do {
       i3 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i45) | 0;
       do if ((i4 | 0) == (i5 | 0)) {
        if ((i3 | 0) != (i45 | 0)) break;
        HEAP8[i47 >> 0] = 48;
        i3 = i47;
       } else {
        if (i3 >>> 0 <= i50 >>> 0) break;
        _memset(i50 | 0, 48, i3 - i36 | 0) | 0;
        do i3 = i3 + -1 | 0; while (i3 >>> 0 > i50 >>> 0);
       } while (0);
       if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i3, i46 - i3 | 0, i28) | 0;
       i4 = i4 + 4 | 0;
      } while (i4 >>> 0 <= i21 >>> 0);
      do if (i13 | 0) {
       if (HEAP32[i28 >> 2] & 32 | 0) break;
       ___fwritex(10942, 1, i28) | 0;
      } while (0);
      if ((i2 | 0) > 0 & i4 >>> 0 < i18 >>> 0) while (1) {
       i3 = _fmt_u(HEAP32[i4 >> 2] | 0, 0, i45) | 0;
       if (i3 >>> 0 > i50 >>> 0) {
        _memset(i50 | 0, 48, i3 - i36 | 0) | 0;
        do i3 = i3 + -1 | 0; while (i3 >>> 0 > i50 >>> 0);
       }
       if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i3, (i2 | 0) > 9 ? 9 : i2, i28) | 0;
       i4 = i4 + 4 | 0;
       i3 = i2 + -9 | 0;
       if (!((i2 | 0) > 9 & i4 >>> 0 < i18 >>> 0)) {
        i2 = i3;
        break;
       } else i2 = i3;
      }
      _pad(i28, 48, i2 + 9 | 0, 9, 0);
     } else {
      i10 = i15 ? i18 : i5 + 4 | 0;
      if ((i2 | 0) > -1) {
       i9 = (i12 | 0) == 0;
       i7 = i5;
       do {
        i3 = _fmt_u(HEAP32[i7 >> 2] | 0, 0, i45) | 0;
        if ((i3 | 0) == (i45 | 0)) {
         HEAP8[i47 >> 0] = 48;
         i3 = i47;
        }
        do if ((i7 | 0) == (i5 | 0)) {
         i4 = i3 + 1 | 0;
         if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i3, 1, i28) | 0;
         if (i9 & (i2 | 0) < 1) {
          i3 = i4;
          break;
         }
         if (HEAP32[i28 >> 2] & 32 | 0) {
          i3 = i4;
          break;
         }
         ___fwritex(10942, 1, i28) | 0;
         i3 = i4;
        } else {
         if (i3 >>> 0 <= i50 >>> 0) break;
         _memset(i50 | 0, 48, i3 + i37 | 0) | 0;
         do i3 = i3 + -1 | 0; while (i3 >>> 0 > i50 >>> 0);
        } while (0);
        i4 = i46 - i3 | 0;
        if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i3, (i2 | 0) > (i4 | 0) ? i4 : i2, i28) | 0;
        i2 = i2 - i4 | 0;
        i7 = i7 + 4 | 0;
       } while (i7 >>> 0 < i10 >>> 0 & (i2 | 0) > -1);
      }
      _pad(i28, 48, i2 + 18 | 0, 18, 0);
      if (HEAP32[i28 >> 2] & 32 | 0) break;
      ___fwritex(i14, i40 - i14 | 0, i28) | 0;
     } while (0);
     _pad(i28, 32, i8, i16, i24 ^ 8192);
     i2 = (i16 | 0) < (i8 | 0) ? i8 : i16;
    } else {
     i7 = (i20 & 32 | 0) != 0;
     i5 = d6 != d6 | 0.0 != 0.0;
     i3 = i5 ? 0 : i22;
     i4 = i3 + 3 | 0;
     _pad(i28, 32, i8, i4, i9);
     i2 = HEAP32[i28 >> 2] | 0;
     if (!(i2 & 32)) {
      ___fwritex(i23, i3, i28) | 0;
      i2 = HEAP32[i28 >> 2] | 0;
     }
     if (!(i2 & 32)) ___fwritex(i5 ? (i7 ? 12845 : 10938) : i7 ? 10930 : 10934, 3, i28) | 0;
     _pad(i28, 32, i8, i4, i24 ^ 8192);
     i2 = (i4 | 0) < (i8 | 0) ? i8 : i4;
    } while (0);
    i8 = i26;
    i3 = i25;
    continue L1;
   }
  default:
   {
    i12 = 0;
    i10 = 10894;
    i4 = i32;
    i2 = i13;
    i9 = i24;
   }
  } while (0);
  L310 : do if ((i27 | 0) == 63) {
   i5 = i51;
   i4 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[i5 + 4 >> 2] | 0;
   i7 = i9 & 32;
   if ((i4 | 0) == 0 & (i5 | 0) == 0) {
    i3 = i32;
    i4 = 0;
    i5 = 0;
   } else {
    i3 = i32;
    do {
     i3 = i3 + -1 | 0;
     HEAP8[i3 >> 0] = HEAPU8[10878 + (i4 & 15) >> 0] | i7;
     i4 = _bitshift64Lshr(i4 | 0, i5 | 0, 4) | 0;
     i5 = tempRet0;
    } while (!((i4 | 0) == 0 & (i5 | 0) == 0));
    i5 = i51;
    i4 = HEAP32[i5 >> 2] | 0;
    i5 = HEAP32[i5 + 4 >> 2] | 0;
   }
   i5 = (i2 & 8 | 0) == 0 | (i4 | 0) == 0 & (i5 | 0) == 0;
   i4 = i5 ? 0 : 2;
   i5 = i5 ? 10894 : 10894 + (i9 >> 4) | 0;
   i7 = i10;
   i27 = 76;
  } else if ((i27 | 0) == 75) {
   i3 = _fmt_u(i2, i3, i32) | 0;
   i7 = i13;
   i2 = i24;
   i27 = 76;
  } else if ((i27 | 0) == 81) {
   i27 = 0;
   i24 = _memchr(i2, 0, i13) | 0;
   i23 = (i24 | 0) == 0;
   i3 = i2;
   i12 = 0;
   i10 = 10894;
   i4 = i23 ? i2 + i13 | 0 : i24;
   i2 = i23 ? i13 : i24 - i2 | 0;
  } else if ((i27 | 0) == 85) {
   i27 = 0;
   i7 = i4;
   i2 = 0;
   i3 = 0;
   while (1) {
    i5 = HEAP32[i7 >> 2] | 0;
    if (!i5) break;
    i3 = _wctomb(i30, i5) | 0;
    if ((i3 | 0) < 0 | i3 >>> 0 > (i9 - i2 | 0) >>> 0) break;
    i2 = i3 + i2 | 0;
    if (i9 >>> 0 > i2 >>> 0) i7 = i7 + 4 | 0; else break;
   }
   if ((i3 | 0) < 0) {
    i1 = -1;
    break L1;
   }
   _pad(i28, 32, i8, i2, i24);
   if (!i2) {
    i2 = 0;
    i27 = 96;
   } else {
    i5 = 0;
    while (1) {
     i3 = HEAP32[i4 >> 2] | 0;
     if (!i3) {
      i27 = 96;
      break L310;
     }
     i3 = _wctomb(i30, i3) | 0;
     i5 = i3 + i5 | 0;
     if ((i5 | 0) > (i2 | 0)) {
      i27 = 96;
      break L310;
     }
     if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i30, i3, i28) | 0;
     if (i5 >>> 0 >= i2 >>> 0) {
      i27 = 96;
      break;
     } else i4 = i4 + 4 | 0;
    }
   }
  } while (0);
  if ((i27 | 0) == 96) {
   i27 = 0;
   _pad(i28, 32, i8, i2, i24 ^ 8192);
   i2 = (i8 | 0) > (i2 | 0) ? i8 : i2;
   i8 = i26;
   i3 = i25;
   continue;
  }
  if ((i27 | 0) == 76) {
   i27 = 0;
   i9 = (i7 | 0) > -1 ? i2 & -65537 : i2;
   i2 = i51;
   i2 = (HEAP32[i2 >> 2] | 0) != 0 | (HEAP32[i2 + 4 >> 2] | 0) != 0;
   if ((i7 | 0) != 0 | i2) {
    i2 = (i2 & 1 ^ 1) + (i33 - i3) | 0;
    i12 = i4;
    i10 = i5;
    i4 = i32;
    i2 = (i7 | 0) > (i2 | 0) ? i7 : i2;
   } else {
    i3 = i32;
    i12 = i4;
    i10 = i5;
    i4 = i32;
    i2 = 0;
   }
  }
  i7 = i4 - i3 | 0;
  i4 = (i2 | 0) < (i7 | 0) ? i7 : i2;
  i5 = i4 + i12 | 0;
  i2 = (i8 | 0) < (i5 | 0) ? i5 : i8;
  _pad(i28, 32, i2, i5, i9);
  if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i10, i12, i28) | 0;
  _pad(i28, 48, i2, i5, i9 ^ 65536);
  _pad(i28, 48, i4, i7, 0);
  if (!(HEAP32[i28 >> 2] & 32)) ___fwritex(i3, i7, i28) | 0;
  _pad(i28, 32, i2, i5, i9 ^ 8192);
  i8 = i26;
  i3 = i25;
 }
 L345 : do if ((i27 | 0) == 243) if (!i28) if (!i8) i1 = 0; else {
  i1 = 1;
  while (1) {
   i2 = HEAP32[i54 + (i1 << 2) >> 2] | 0;
   if (!i2) break;
   _pop_arg(i53 + (i1 << 3) | 0, i2, i52);
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break L345;
   }
  }
  while (1) {
   if (HEAP32[i54 + (i1 << 2) >> 2] | 0) {
    i1 = -1;
    break L345;
   }
   i1 = i1 + 1 | 0;
   if ((i1 | 0) >= 10) {
    i1 = 1;
    break;
   }
  }
 } while (0);
 STACKTOP = i55;
 return i1 | 0;
}

function ___floatscan(i23, i2, i20) {
 i23 = i23 | 0;
 i2 = i2 | 0;
 i20 = i20 | 0;
 var d1 = 0.0, i3 = 0, d4 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, d10 = 0.0, d11 = 0.0, i12 = 0, d13 = 0.0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, d32 = 0.0;
 i31 = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 i27 = i31;
 switch (i2 | 0) {
 case 0:
  {
   i28 = -149;
   i30 = 24;
   i19 = 4;
   break;
  }
 case 1:
  {
   i28 = -1074;
   i30 = 53;
   i19 = 4;
   break;
  }
 case 2:
  {
   i28 = -1074;
   i30 = 53;
   i19 = 4;
   break;
  }
 default:
  d1 = 0.0;
 }
 L4 : do if ((i19 | 0) == 4) {
  i22 = i23 + 4 | 0;
  i21 = i23 + 100 | 0;
  do {
   i2 = HEAP32[i22 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
    HEAP32[i22 >> 2] = i2 + 1;
    i2 = HEAPU8[i2 >> 0] | 0;
   } else i2 = ___shgetc(i23) | 0;
  } while ((_isspace(i2) | 0) != 0);
  L13 : do switch (i2 | 0) {
  case 43:
  case 45:
   {
    i3 = 1 - (((i2 | 0) == 45 & 1) << 1) | 0;
    i2 = HEAP32[i22 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
     HEAP32[i22 >> 2] = i2 + 1;
     i5 = HEAPU8[i2 >> 0] | 0;
     i29 = i3;
     break L13;
    } else {
     i5 = ___shgetc(i23) | 0;
     i29 = i3;
     break L13;
    }
   }
  default:
   {
    i5 = i2;
    i29 = 1;
   }
  } while (0);
  i2 = 0;
  do {
   if ((i5 | 32 | 0) != (HEAP8[12836 + i2 >> 0] | 0)) break;
   do if (i2 >>> 0 < 7) {
    i3 = HEAP32[i22 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
     HEAP32[i22 >> 2] = i3 + 1;
     i5 = HEAPU8[i3 >> 0] | 0;
     break;
    } else {
     i5 = ___shgetc(i23) | 0;
     break;
    }
   } while (0);
   i2 = i2 + 1 | 0;
  } while (i2 >>> 0 < 8);
  L29 : do switch (i2 | 0) {
  case 8:
   break;
  case 3:
   {
    i19 = 23;
    break;
   }
  default:
   {
    i6 = (i20 | 0) != 0;
    if (i6 & i2 >>> 0 > 3) if ((i2 | 0) == 8) break L29; else {
     i19 = 23;
     break L29;
    }
    L34 : do if (!i2) {
     i2 = 0;
     do {
      if ((i5 | 32 | 0) != (HEAP8[12845 + i2 >> 0] | 0)) break L34;
      do if (i2 >>> 0 < 2) {
       i3 = HEAP32[i22 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i3 + 1;
        i5 = HEAPU8[i3 >> 0] | 0;
        break;
       } else {
        i5 = ___shgetc(i23) | 0;
        break;
       }
      } while (0);
      i2 = i2 + 1 | 0;
     } while (i2 >>> 0 < 3);
    } while (0);
    switch (i2 | 0) {
    case 3:
     {
      i2 = HEAP32[i22 >> 2] | 0;
      if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
       HEAP32[i22 >> 2] = i2 + 1;
       i2 = HEAPU8[i2 >> 0] | 0;
      } else i2 = ___shgetc(i23) | 0;
      if ((i2 | 0) == 40) i2 = 1; else {
       if (!(HEAP32[i21 >> 2] | 0)) {
        d1 = nan;
        break L4;
       }
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
       d1 = nan;
       break L4;
      }
      while (1) {
       i3 = HEAP32[i22 >> 2] | 0;
       if (i3 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i3 + 1;
        i3 = HEAPU8[i3 >> 0] | 0;
       } else i3 = ___shgetc(i23) | 0;
       if (!((i3 + -48 | 0) >>> 0 < 10 | (i3 + -65 | 0) >>> 0 < 26) ? !((i3 | 0) == 95 | (i3 + -97 | 0) >>> 0 < 26) : 0) break;
       i2 = i2 + 1 | 0;
      }
      if ((i3 | 0) == 41) {
       d1 = nan;
       break L4;
      }
      i3 = (HEAP32[i21 >> 2] | 0) == 0;
      if (!i3) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
      if (!i6) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim(i23, 0);
       d1 = 0.0;
       break L4;
      }
      if (!i2) {
       d1 = nan;
       break L4;
      }
      while (1) {
       i2 = i2 + -1 | 0;
       if (!i3) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
       if (!i2) {
        d1 = nan;
        break L4;
       }
      }
     }
    case 0:
     {
      do if ((i5 | 0) == 48) {
       i2 = HEAP32[i22 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i23) | 0;
       if ((i2 | 32 | 0) != 120) {
        if (!(HEAP32[i21 >> 2] | 0)) {
         i2 = 48;
         break;
        }
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
        i2 = 48;
        break;
       }
       i2 = HEAP32[i22 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i2 + 1;
        i3 = HEAPU8[i2 >> 0] | 0;
        i5 = 0;
       } else {
        i3 = ___shgetc(i23) | 0;
        i5 = 0;
       }
       L94 : while (1) {
        switch (i3 | 0) {
        case 46:
         {
          i19 = 74;
          break L94;
         }
        case 48:
         break;
        default:
         {
          i14 = 0;
          i7 = 0;
          d10 = 1.0;
          d1 = 0.0;
          i2 = 0;
          i6 = i3;
          i15 = i5;
          i17 = 0;
          i16 = 0;
          i5 = 0;
          i3 = 0;
          break L94;
         }
        }
        i2 = HEAP32[i22 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
         HEAP32[i22 >> 2] = i2 + 1;
         i3 = HEAPU8[i2 >> 0] | 0;
         i5 = 1;
         continue;
        } else {
         i3 = ___shgetc(i23) | 0;
         i5 = 1;
         continue;
        }
       }
       if ((i19 | 0) == 74) {
        i2 = HEAP32[i22 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
         HEAP32[i22 >> 2] = i2 + 1;
         i3 = HEAPU8[i2 >> 0] | 0;
        } else i3 = ___shgetc(i23) | 0;
        if ((i3 | 0) == 48) {
         i5 = 0;
         i3 = 0;
         do {
          i2 = HEAP32[i22 >> 2] | 0;
          if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
           HEAP32[i22 >> 2] = i2 + 1;
           i6 = HEAPU8[i2 >> 0] | 0;
          } else i6 = ___shgetc(i23) | 0;
          i5 = _i64Add(i5 | 0, i3 | 0, -1, -1) | 0;
          i3 = tempRet0;
         } while ((i6 | 0) == 48);
         i14 = 1;
         i7 = 0;
         d10 = 1.0;
         d1 = 0.0;
         i2 = 0;
         i15 = 1;
         i17 = 0;
         i16 = 0;
        } else {
         i14 = 1;
         i7 = 0;
         d10 = 1.0;
         d1 = 0.0;
         i2 = 0;
         i6 = i3;
         i15 = i5;
         i17 = 0;
         i16 = 0;
         i5 = 0;
         i3 = 0;
        }
       }
       while (1) {
        i9 = i6 + -48 | 0;
        i8 = i6 | 32;
        if (i9 >>> 0 >= 10) {
         i12 = (i6 | 0) == 46;
         if (!(i12 | (i8 + -97 | 0) >>> 0 < 6)) {
          i8 = i6;
          break;
         }
         if (i12) if (!i14) {
          i14 = 1;
          d4 = d10;
          i12 = i15;
          i5 = i16;
          i3 = i17;
          i9 = i16;
          i8 = i17;
         } else {
          i8 = 46;
          break;
         } else i19 = 86;
        } else i19 = 86;
        if ((i19 | 0) == 86) {
         i19 = 0;
         i6 = (i6 | 0) > 57 ? i8 + -87 | 0 : i9;
         do if (!((i17 | 0) < 0 | (i17 | 0) == 0 & i16 >>> 0 < 8)) {
          if ((i17 | 0) < 0 | (i17 | 0) == 0 & i16 >>> 0 < 14) {
           d13 = d10 * .0625;
           d4 = d13;
           d1 = d1 + d13 * +(i6 | 0);
           break;
          }
          if ((i7 | 0) != 0 | (i6 | 0) == 0) d4 = d10; else {
           i7 = 1;
           d4 = d10;
           d1 = d1 + d10 * .5;
          }
         } else {
          d4 = d10;
          i2 = i6 + (i2 << 4) | 0;
         } while (0);
         i9 = _i64Add(i16 | 0, i17 | 0, 1, 0) | 0;
         i12 = 1;
         i8 = tempRet0;
        }
        i6 = HEAP32[i22 >> 2] | 0;
        if (i6 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
         HEAP32[i22 >> 2] = i6 + 1;
         d10 = d4;
         i6 = HEAPU8[i6 >> 0] | 0;
         i15 = i12;
         i17 = i8;
         i16 = i9;
         continue;
        } else {
         d10 = d4;
         i6 = ___shgetc(i23) | 0;
         i15 = i12;
         i17 = i8;
         i16 = i9;
         continue;
        }
       }
       if (!i15) {
        i2 = (HEAP32[i21 >> 2] | 0) == 0;
        if (!i2) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
        if (i20) {
         if (!i2 ? (i18 = HEAP32[i22 >> 2] | 0, HEAP32[i22 >> 2] = i18 + -1, i14 | 0) : 0) HEAP32[i22 >> 2] = i18 + -2;
        } else ___shlim(i23, 0);
        d1 = +(i29 | 0) * 0.0;
        break L4;
       }
       i7 = (i14 | 0) == 0;
       i9 = i7 ? i16 : i5;
       i7 = i7 ? i17 : i3;
       if ((i17 | 0) < 0 | (i17 | 0) == 0 & i16 >>> 0 < 8) {
        i5 = i16;
        i3 = i17;
        do {
         i2 = i2 << 4;
         i5 = _i64Add(i5 | 0, i3 | 0, 1, 0) | 0;
         i3 = tempRet0;
        } while ((i3 | 0) < 0 | (i3 | 0) == 0 & i5 >>> 0 < 8);
        i6 = i2;
       } else i6 = i2;
       if ((i8 | 32 | 0) == 112) {
        i3 = _scanexp(i23, i20) | 0;
        i2 = tempRet0;
        if ((i3 | 0) == 0 & (i2 | 0) == -2147483648) {
         if (!i20) {
          ___shlim(i23, 0);
          d1 = 0.0;
          break L4;
         }
         if (!(HEAP32[i21 >> 2] | 0)) {
          i3 = 0;
          i2 = 0;
         } else {
          HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
          i3 = 0;
          i2 = 0;
         }
        }
       } else if (!(HEAP32[i21 >> 2] | 0)) {
        i3 = 0;
        i2 = 0;
       } else {
        HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
        i3 = 0;
        i2 = 0;
       }
       i5 = _bitshift64Shl(i9 | 0, i7 | 0, 2) | 0;
       i5 = _i64Add(i5 | 0, tempRet0 | 0, -32, -1) | 0;
       i5 = _i64Add(i5 | 0, tempRet0 | 0, i3 | 0, i2 | 0) | 0;
       i2 = tempRet0;
       if (!i6) {
        d1 = +(i29 | 0) * 0.0;
        break L4;
       }
       if ((i2 | 0) > 0 | (i2 | 0) == 0 & i5 >>> 0 > (0 - i28 | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i29 | 0) * 17976931348623157.0e292 * 17976931348623157.0e292;
        break L4;
       }
       i27 = i28 + -106 | 0;
       i26 = ((i27 | 0) < 0) << 31 >> 31;
       if ((i2 | 0) < (i26 | 0) | (i2 | 0) == (i26 | 0) & i5 >>> 0 < i27 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i29 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if ((i6 | 0) > -1) {
        i3 = i6;
        do {
         i26 = !(d1 >= .5);
         i27 = i26 & 1 | i3 << 1;
         i3 = i27 ^ 1;
         d1 = d1 + (i26 ? d1 : d1 + -1.0);
         i5 = _i64Add(i5 | 0, i2 | 0, -1, -1) | 0;
         i2 = tempRet0;
        } while ((i27 | 0) > -1);
        d10 = d1;
        i6 = i3;
       } else d10 = d1;
       i28 = _i64Subtract(32, 0, i28 | 0, ((i28 | 0) < 0) << 31 >> 31 | 0) | 0;
       i2 = _i64Add(i5 | 0, i2 | 0, i28 | 0, tempRet0 | 0) | 0;
       i28 = tempRet0;
       if (0 > (i28 | 0) | 0 == (i28 | 0) & i30 >>> 0 > i2 >>> 0) if ((i2 | 0) < 0) {
        i3 = 0;
        i2 = 84;
        i19 = 127;
       } else i19 = 125; else {
        i2 = i30;
        i19 = 125;
       }
       if ((i19 | 0) == 125) if ((i2 | 0) < 53) {
        i3 = i2;
        i2 = 84 - i2 | 0;
        i19 = 127;
       } else {
        d4 = 0.0;
        d1 = +(i29 | 0);
       }
       if ((i19 | 0) == 127) {
        d1 = +(i29 | 0);
        d4 = +_copysignl(+_scalbn(1.0, i2), d1);
        i2 = i3;
       }
       i30 = (i6 & 1 | 0) == 0 & (d10 != 0.0 & (i2 | 0) < 32);
       d1 = d1 * (i30 ? 0.0 : d10) + (d4 + d1 * +(((i30 & 1) + i6 | 0) >>> 0)) - d4;
       if (!(d1 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
       d1 = +_scalbnl(d1, i5);
       break L4;
      } else i2 = i5; while (0);
      i24 = i28 + i30 | 0;
      i26 = 0 - i24 | 0;
      i3 = 0;
      L184 : while (1) {
       switch (i2 | 0) {
       case 46:
        {
         i19 = 138;
         break L184;
        }
       case 48:
        break;
       default:
        {
         i8 = 0;
         i6 = i3;
         i9 = 0;
         i7 = 0;
         break L184;
        }
       }
       i2 = HEAP32[i22 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
        i3 = 1;
        continue;
       } else {
        i2 = ___shgetc(i23) | 0;
        i3 = 1;
        continue;
       }
      }
      if ((i19 | 0) == 138) {
       i2 = HEAP32[i22 >> 2] | 0;
       if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
        HEAP32[i22 >> 2] = i2 + 1;
        i2 = HEAPU8[i2 >> 0] | 0;
       } else i2 = ___shgetc(i23) | 0;
       if ((i2 | 0) == 48) {
        i3 = 0;
        i2 = 0;
        while (1) {
         i3 = _i64Add(i3 | 0, i2 | 0, -1, -1) | 0;
         i7 = tempRet0;
         i2 = HEAP32[i22 >> 2] | 0;
         if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
          HEAP32[i22 >> 2] = i2 + 1;
          i2 = HEAPU8[i2 >> 0] | 0;
         } else i2 = ___shgetc(i23) | 0;
         if ((i2 | 0) == 48) i2 = i7; else {
          i8 = 1;
          i6 = 1;
          i9 = i3;
          break;
         }
        }
       } else {
        i8 = 1;
        i6 = i3;
        i9 = 0;
        i7 = 0;
       }
      }
      HEAP32[i27 >> 2] = 0;
      i12 = i2 + -48 | 0;
      i5 = (i2 | 0) == 46;
      L203 : do if (i5 | i12 >>> 0 < 10) {
       i19 = i27 + 496 | 0;
       i15 = 0;
       i3 = 0;
       i18 = 0;
       i16 = i8;
       i17 = i6;
       i8 = 0;
       i6 = 0;
       L205 : while (1) {
        do if (i5) if (!i16) {
         i16 = 1;
         i14 = i18;
         i9 = i8;
         i7 = i6;
        } else break L205; else {
         i8 = _i64Add(i8 | 0, i6 | 0, 1, 0) | 0;
         i6 = tempRet0;
         i14 = (i2 | 0) != 48;
         if ((i3 | 0) >= 125) {
          if (!i14) {
           i14 = i18;
           break;
          }
          HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 1;
          i14 = i18;
          break;
         }
         i5 = i27 + (i3 << 2) | 0;
         if (!i15) i2 = i12; else i2 = i2 + -48 + ((HEAP32[i5 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[i5 >> 2] = i2;
         i15 = i15 + 1 | 0;
         i17 = (i15 | 0) == 9;
         i15 = i17 ? 0 : i15;
         i3 = (i17 & 1) + i3 | 0;
         i14 = i14 ? i8 : i18;
         i17 = 1;
        } while (0);
        i2 = HEAP32[i22 >> 2] | 0;
        if (i2 >>> 0 < (HEAP32[i21 >> 2] | 0) >>> 0) {
         HEAP32[i22 >> 2] = i2 + 1;
         i2 = HEAPU8[i2 >> 0] | 0;
        } else i2 = ___shgetc(i23) | 0;
        i12 = i2 + -48 | 0;
        i5 = (i2 | 0) == 46;
        if (!(i5 | i12 >>> 0 < 10)) {
         i12 = i14;
         i14 = i16;
         i5 = i17;
         i19 = 161;
         break L203;
        } else i18 = i14;
       }
       i2 = i15;
       i12 = i18;
       i5 = (i17 | 0) != 0;
       i19 = 169;
      } else {
       i15 = 0;
       i3 = 0;
       i12 = 0;
       i14 = i8;
       i5 = i6;
       i8 = 0;
       i6 = 0;
       i19 = 161;
      } while (0);
      do if ((i19 | 0) == 161) {
       i18 = (i14 | 0) == 0;
       i9 = i18 ? i8 : i9;
       i7 = i18 ? i6 : i7;
       i5 = (i5 | 0) != 0;
       if (!(i5 & (i2 | 32 | 0) == 101)) if ((i2 | 0) > -1) {
        i2 = i15;
        i19 = 169;
        break;
       } else {
        i2 = i15;
        i19 = 171;
        break;
       }
       i5 = _scanexp(i23, i20) | 0;
       i2 = tempRet0;
       if ((i5 | 0) == 0 & (i2 | 0) == -2147483648) {
        if (!i20) {
         ___shlim(i23, 0);
         d1 = 0.0;
         break;
        }
        if (!(HEAP32[i21 >> 2] | 0)) {
         i5 = 0;
         i2 = 0;
        } else {
         HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
         i5 = 0;
         i2 = 0;
        }
       }
       i17 = _i64Add(i5 | 0, i2 | 0, i9 | 0, i7 | 0) | 0;
       i2 = i15;
       i7 = tempRet0;
       i19 = 173;
      } while (0);
      if ((i19 | 0) == 169) if (HEAP32[i21 >> 2] | 0) {
       HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
       if (i5) {
        i17 = i9;
        i19 = 173;
       } else i19 = 172;
      } else i19 = 171;
      if ((i19 | 0) == 171) if (i5) {
       i17 = i9;
       i19 = 173;
      } else i19 = 172;
      do if ((i19 | 0) == 172) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim(i23, 0);
       d1 = 0.0;
      } else if ((i19 | 0) == 173) {
       i5 = HEAP32[i27 >> 2] | 0;
       if (!i5) {
        d1 = +(i29 | 0) * 0.0;
        break;
       }
       if (((i6 | 0) < 0 | (i6 | 0) == 0 & i8 >>> 0 < 10) & ((i17 | 0) == (i8 | 0) & (i7 | 0) == (i6 | 0)) ? i30 >>> 0 > 30 | (i5 >>> i30 | 0) == 0 : 0) {
        d1 = +(i29 | 0) * +(i5 >>> 0);
        break;
       }
       i23 = (i28 | 0) / -2 | 0;
       i22 = ((i23 | 0) < 0) << 31 >> 31;
       if ((i7 | 0) > (i22 | 0) | (i7 | 0) == (i22 | 0) & i17 >>> 0 > i23 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i29 | 0) * 17976931348623157.0e292 * 17976931348623157.0e292;
        break;
       }
       i23 = i28 + -106 | 0;
       i22 = ((i23 | 0) < 0) << 31 >> 31;
       if ((i7 | 0) < (i22 | 0) | (i7 | 0) == (i22 | 0) & i17 >>> 0 < i23 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        d1 = +(i29 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (i2) {
        if ((i2 | 0) < 9) {
         i6 = i27 + (i3 << 2) | 0;
         i5 = HEAP32[i6 >> 2] | 0;
         do {
          i5 = i5 * 10 | 0;
          i2 = i2 + 1 | 0;
         } while ((i2 | 0) != 9);
         HEAP32[i6 >> 2] = i5;
        }
        i3 = i3 + 1 | 0;
       }
       if ((i12 | 0) < 9 ? (i12 | 0) <= (i17 | 0) & (i17 | 0) < 18 : 0) {
        if ((i17 | 0) == 9) {
         d1 = +(i29 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0);
         break;
        }
        if ((i17 | 0) < 9) {
         d1 = +(i29 | 0) * +((HEAP32[i27 >> 2] | 0) >>> 0) / +(HEAP32[5368 + (8 - i17 << 2) >> 2] | 0);
         break;
        }
        i23 = i30 + 27 + (Math_imul(i17, -3) | 0) | 0;
        i2 = HEAP32[i27 >> 2] | 0;
        if ((i23 | 0) > 30 | (i2 >>> i23 | 0) == 0) {
         d1 = +(i29 | 0) * +(i2 >>> 0) * +(HEAP32[5368 + (i17 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       i2 = (i17 | 0) % 9 | 0;
       if (!i2) {
        i2 = 0;
        i6 = 0;
       } else {
        i12 = (i17 | 0) > -1 ? i2 : i2 + 9 | 0;
        i8 = HEAP32[5368 + (8 - i12 << 2) >> 2] | 0;
        if (i3) {
         i9 = 1e9 / (i8 | 0) | 0;
         i6 = 0;
         i7 = 0;
         i5 = i17;
         i2 = 0;
         do {
          i21 = i27 + (i2 << 2) | 0;
          i22 = HEAP32[i21 >> 2] | 0;
          i23 = ((i22 >>> 0) / (i8 >>> 0) | 0) + i6 | 0;
          HEAP32[i21 >> 2] = i23;
          i6 = Math_imul((i22 >>> 0) % (i8 >>> 0) | 0, i9) | 0;
          i23 = (i2 | 0) == (i7 | 0) & (i23 | 0) == 0;
          i5 = i23 ? i5 + -9 | 0 : i5;
          i7 = i23 ? i7 + 1 & 127 : i7;
          i2 = i2 + 1 | 0;
         } while ((i2 | 0) != (i3 | 0));
         if (!i6) i6 = i7; else {
          HEAP32[i27 + (i3 << 2) >> 2] = i6;
          i6 = i7;
          i3 = i3 + 1 | 0;
         }
        } else {
         i6 = 0;
         i3 = 0;
         i5 = i17;
        }
        i2 = 0;
        i17 = 9 - i12 + i5 | 0;
       }
       L284 : while (1) {
        i12 = (i17 | 0) < 18;
        i14 = (i17 | 0) == 18;
        i15 = i27 + (i6 << 2) | 0;
        while (1) {
         if (!i12) {
          if (!i14) {
           i5 = i17;
           break L284;
          }
          if ((HEAP32[i15 >> 2] | 0) >>> 0 >= 9007199) {
           i5 = 18;
           break L284;
          }
         }
         i5 = 0;
         i16 = i3;
         i3 = i3 + 127 | 0;
         while (1) {
          i7 = i3 & 127;
          i8 = i27 + (i7 << 2) | 0;
          i3 = _bitshift64Shl(HEAP32[i8 >> 2] | 0, 0, 29) | 0;
          i3 = _i64Add(i3 | 0, tempRet0 | 0, i5 | 0, 0) | 0;
          i5 = tempRet0;
          if (i5 >>> 0 > 0 | (i5 | 0) == 0 & i3 >>> 0 > 1e9) {
           i9 = ___udivdi3(i3 | 0, i5 | 0, 1e9, 0) | 0;
           i3 = ___uremdi3(i3 | 0, i5 | 0, 1e9, 0) | 0;
          } else i9 = 0;
          HEAP32[i8 >> 2] = i3;
          i23 = (i7 | 0) == (i6 | 0);
          i16 = (i7 | 0) != (i16 + 127 & 127 | 0) | i23 ? i16 : (i3 | 0) == 0 ? i7 : i16;
          if (i23) break; else {
           i5 = i9;
           i3 = i7 + -1 | 0;
          }
         }
         i2 = i2 + -29 | 0;
         if (i9 | 0) break; else i3 = i16;
        }
        i6 = i6 + 127 & 127;
        i3 = i16 + 127 & 127;
        i5 = i27 + ((i16 + 126 & 127) << 2) | 0;
        if ((i6 | 0) == (i16 | 0)) HEAP32[i5 >> 2] = HEAP32[i5 >> 2] | HEAP32[i27 + (i3 << 2) >> 2]; else i3 = i16;
        HEAP32[i27 + (i6 << 2) >> 2] = i9;
        i17 = i17 + 9 | 0;
       }
       L302 : while (1) {
        i15 = i3 + 1 & 127;
        i16 = i27 + ((i3 + 127 & 127) << 2) | 0;
        while (1) {
         i9 = (i5 | 0) == 18;
         i14 = (i5 | 0) > 27 ? 9 : 1;
         i17 = i6;
         while (1) {
          i6 = 0;
          while (1) {
           i7 = i6 + i17 & 127;
           if ((i7 | 0) == (i3 | 0)) {
            i25 = 2;
            i19 = 220;
            break;
           }
           i7 = HEAP32[i27 + (i7 << 2) >> 2] | 0;
           i8 = HEAP32[5400 + (i6 << 2) >> 2] | 0;
           if (i7 >>> 0 < i8 >>> 0) {
            i25 = 2;
            i19 = 220;
            break;
           }
           if (i7 >>> 0 > i8 >>> 0) break;
           i6 = i6 + 1 | 0;
           if ((i6 | 0) >= 2) {
            i25 = i6;
            i19 = 220;
            break;
           }
          }
          if ((i19 | 0) == 220 ? (i19 = 0, i9 & (i25 | 0) == 2) : 0) {
           d1 = 0.0;
           i7 = 0;
           break L302;
          }
          i2 = i2 + i14 | 0;
          if ((i17 | 0) == (i3 | 0)) i17 = i3; else break;
         }
         i9 = (1 << i14) + -1 | 0;
         i12 = 1e9 >>> i14;
         i8 = 0;
         i6 = i17;
         i7 = i17;
         do {
          i21 = i27 + (i7 << 2) | 0;
          i22 = HEAP32[i21 >> 2] | 0;
          i23 = (i22 >>> i14) + i8 | 0;
          HEAP32[i21 >> 2] = i23;
          i8 = Math_imul(i22 & i9, i12) | 0;
          i23 = (i7 | 0) == (i6 | 0) & (i23 | 0) == 0;
          i5 = i23 ? i5 + -9 | 0 : i5;
          i6 = i23 ? i6 + 1 & 127 : i6;
          i7 = i7 + 1 & 127;
         } while ((i7 | 0) != (i3 | 0));
         if (!i8) continue;
         if ((i15 | 0) != (i6 | 0)) break;
         HEAP32[i16 >> 2] = HEAP32[i16 >> 2] | 1;
        }
        HEAP32[i27 + (i3 << 2) >> 2] = i8;
        i3 = i15;
       }
       while (1) {
        i6 = i7 + i17 & 127;
        i5 = i3 + 1 & 127;
        if ((i6 | 0) == (i3 | 0)) HEAP32[i27 + (i5 + -1 << 2) >> 2] = 0; else i5 = i3;
        d1 = d1 * 1.0e9 + +((HEAP32[i27 + (i6 << 2) >> 2] | 0) >>> 0);
        i7 = i7 + 1 | 0;
        if ((i7 | 0) == 2) break; else i3 = i5;
       }
       d13 = +(i29 | 0);
       d4 = d13 * d1;
       i8 = i2 + 53 | 0;
       i9 = i8 - i28 | 0;
       i12 = (i9 | 0) < (i30 | 0);
       i3 = i12 & 1;
       i7 = i12 ? ((i9 | 0) < 0 ? 0 : i9) : i30;
       if ((i7 | 0) < 53) {
        d32 = +_copysignl(+_scalbn(1.0, 105 - i7 | 0), d4);
        d10 = +_fmodl(d4, +_scalbn(1.0, 53 - i7 | 0));
        d11 = d32;
        d1 = d10;
        d10 = d32 + (d4 - d10);
       } else {
        d11 = 0.0;
        d1 = 0.0;
        d10 = d4;
       }
       i6 = i17 + 2 & 127;
       do if ((i6 | 0) != (i5 | 0)) {
        i6 = HEAP32[i27 + (i6 << 2) >> 2] | 0;
        do if (i6 >>> 0 >= 5e8) {
         if ((i6 | 0) != 5e8) {
          d1 = d13 * .75 + d1;
          break;
         }
         if ((i17 + 3 & 127 | 0) == (i5 | 0)) {
          d1 = d13 * .5 + d1;
          break;
         } else {
          d1 = d13 * .75 + d1;
          break;
         }
        } else {
         if ((i6 | 0) == 0 ? (i17 + 3 & 127 | 0) == (i5 | 0) : 0) break;
         d1 = d13 * .25 + d1;
        } while (0);
        if ((53 - i7 | 0) > 1) {
         if (+_fmodl(d1, 1.0) != 0.0) {
          d4 = d1;
          break;
         }
         d4 = d1 + 1.0;
        } else d4 = d1;
       } else d4 = d1; while (0);
       d1 = d10 + d4 - d11;
       do if ((i8 & 2147483647 | 0) > (-2 - i24 | 0)) {
        if (+Math_abs(+d1) >= 9007199254740992.0) {
         d1 = d1 * .5;
         i3 = i12 & (i7 | 0) == (i9 | 0) ? 0 : i3;
         i2 = i2 + 1 | 0;
        }
        if ((i2 + 50 | 0) <= (i26 | 0) ? !(d4 != 0.0 & (i3 | 0) != 0) : 0) break;
        HEAP32[(___errno_location() | 0) >> 2] = 34;
       } while (0);
       d1 = +_scalbnl(d1, i2);
      } while (0);
      break L4;
     }
    default:
     {
      if (HEAP32[i21 >> 2] | 0) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim(i23, 0);
      d1 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((i19 | 0) == 23) {
   i3 = (HEAP32[i21 >> 2] | 0) == 0;
   if (!i3) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
   if ((i20 | 0) != 0 & i2 >>> 0 > 3) do {
    if (!i3) HEAP32[i22 >> 2] = (HEAP32[i22 >> 2] | 0) + -1;
    i2 = i2 + -1 | 0;
   } while (i2 >>> 0 > 3);
  }
  d1 = +(i29 | 0) * inf;
 } while (0);
 STACKTOP = i31;
 return +d1;
}

function _vfscanf(i34, i1, i23) {
 i34 = i34 | 0;
 i1 = i1 | 0;
 i23 = i23 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, d7 = 0.0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i35 = 0, i36 = 0;
 i36 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i28 = i36 + 16 | 0;
 i29 = i36 + 8 | 0;
 i30 = i36 + 33 | 0;
 i31 = i36;
 i32 = i36 + 32 | 0;
 if ((HEAP32[i34 + 76 >> 2] | 0) > -1) i35 = ___lockfile(i34) | 0; else i35 = 0;
 i4 = HEAP8[i1 >> 0] | 0;
 L4 : do if (i4 << 24 >> 24) {
  i17 = i34 + 4 | 0;
  i18 = i34 + 100 | 0;
  i19 = i34 + 108 | 0;
  i20 = i34 + 8 | 0;
  i21 = i30 + 10 | 0;
  i22 = i30 + 33 | 0;
  i16 = i29 + 4 | 0;
  i24 = i30 + 46 | 0;
  i25 = i30 + 94 | 0;
  i26 = i30 + 1 | 0;
  i27 = i30 + 1 | 0;
  i8 = i1;
  i13 = 0;
  i1 = 0;
  i3 = 0;
  i2 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace(i4 & 255) | 0)) {
    i4 = i4 << 24 >> 24 == 37;
    L10 : do if (i4) {
     i5 = i8 + 1 | 0;
     i6 = HEAP8[i5 >> 0] | 0;
     L12 : do switch (i6 << 24 >> 24) {
     case 37:
      break L10;
     case 42:
      {
       i15 = 0;
       i5 = i8 + 2 | 0;
       break;
      }
     default:
      {
       i4 = (i6 & 255) + -48 | 0;
       if (i4 >>> 0 < 10 ? (HEAP8[i8 + 2 >> 0] | 0) == 36 : 0) {
        HEAP32[i28 >> 2] = HEAP32[i23 >> 2];
        while (1) {
         i15 = (HEAP32[i28 >> 2] | 0) + (4 - 1) & ~(4 - 1);
         i5 = HEAP32[i15 >> 2] | 0;
         HEAP32[i28 >> 2] = i15 + 4;
         if (i4 >>> 0 > 1) i4 = i4 + -1 | 0; else break;
        }
        i15 = i5;
        i5 = i8 + 3 | 0;
        break L12;
       }
       i14 = (HEAP32[i23 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       i15 = HEAP32[i14 >> 2] | 0;
       HEAP32[i23 >> 2] = i14 + 4;
      }
     } while (0);
     i8 = HEAP8[i5 >> 0] | 0;
     i4 = i8 & 255;
     if ((i4 + -48 | 0) >>> 0 < 10) {
      i6 = 0;
      do {
       i6 = (i6 * 10 | 0) + -48 + i4 | 0;
       i5 = i5 + 1 | 0;
       i8 = HEAP8[i5 >> 0] | 0;
       i4 = i8 & 255;
      } while ((i4 + -48 | 0) >>> 0 < 10);
     } else i6 = 0;
     if (i8 << 24 >> 24 == 109) {
      i8 = i5 + 1 | 0;
      i4 = (i15 | 0) != 0 & 1;
      i3 = 0;
      i2 = 0;
      i5 = i8;
      i8 = HEAP8[i8 >> 0] | 0;
     } else i4 = 0;
     i9 = i5 + 1 | 0;
     switch (i8 << 24 >> 24) {
     case 104:
      {
       i14 = (HEAP8[i9 >> 0] | 0) == 104;
       i8 = i14 ? -2 : -1;
       i5 = i14 ? i5 + 2 | 0 : i9;
       break;
      }
     case 108:
      {
       i14 = (HEAP8[i9 >> 0] | 0) == 108;
       i8 = i14 ? 3 : 1;
       i5 = i14 ? i5 + 2 | 0 : i9;
       break;
      }
     case 106:
      {
       i8 = 3;
       i5 = i9;
       break;
      }
     case 116:
     case 122:
      {
       i8 = 1;
       i5 = i9;
       break;
      }
     case 76:
      {
       i8 = 2;
       i5 = i9;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       i8 = 0;
       break;
      }
     default:
      {
       i33 = 154;
       break L6;
      }
     }
     i11 = HEAPU8[i5 >> 0] | 0;
     i12 = (i11 & 47 | 0) == 3;
     i11 = i12 ? i11 | 32 : i11;
     i12 = i12 ? 1 : i8;
     i10 = i11 & 255;
     switch (i10 << 24 >> 24) {
     case 99:
      {
       i6 = (i6 | 0) < 1 ? 1 : i6;
       break;
      }
     case 91:
      break;
     case 110:
      {
       if (!i15) {
        i6 = i13;
        break L8;
       }
       switch (i12 | 0) {
       case -2:
        {
         HEAP8[i15 >> 0] = i13;
         i6 = i13;
         break L8;
        }
       case -1:
        {
         HEAP16[i15 >> 1] = i13;
         i6 = i13;
         break L8;
        }
       case 0:
        {
         HEAP32[i15 >> 2] = i13;
         i6 = i13;
         break L8;
        }
       case 1:
        {
         HEAP32[i15 >> 2] = i13;
         i6 = i13;
         break L8;
        }
       case 3:
        {
         i6 = i15;
         HEAP32[i6 >> 2] = i13;
         HEAP32[i6 + 4 >> 2] = ((i13 | 0) < 0) << 31 >> 31;
         i6 = i13;
         break L8;
        }
       default:
        {
         i6 = i13;
         break L8;
        }
       }
      }
     default:
      {
       ___shlim(i34, 0);
       do {
        i8 = HEAP32[i17 >> 2] | 0;
        if (i8 >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
         HEAP32[i17 >> 2] = i8 + 1;
         i8 = HEAPU8[i8 >> 0] | 0;
        } else i8 = ___shgetc(i34) | 0;
       } while ((_isspace(i8) | 0) != 0);
       if (!(HEAP32[i18 >> 2] | 0)) i8 = HEAP32[i17 >> 2] | 0; else {
        i8 = (HEAP32[i17 >> 2] | 0) + -1 | 0;
        HEAP32[i17 >> 2] = i8;
       }
       i13 = (HEAP32[i19 >> 2] | 0) + i13 + i8 - (HEAP32[i20 >> 2] | 0) | 0;
      }
     }
     ___shlim(i34, i6);
     i8 = HEAP32[i17 >> 2] | 0;
     i9 = HEAP32[i18 >> 2] | 0;
     if (i8 >>> 0 < i9 >>> 0) HEAP32[i17 >> 2] = i8 + 1; else {
      if ((___shgetc(i34) | 0) < 0) {
       i33 = 154;
       break L6;
      }
      i9 = HEAP32[i18 >> 2] | 0;
     }
     if (i9 | 0) HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + -1;
     L68 : do switch (i10 << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       i14 = (i11 | 0) == 99;
       L70 : do if ((i11 | 16 | 0) == 115) {
        _memset(i26 | 0, -1, 256) | 0;
        HEAP8[i30 >> 0] = 0;
        if ((i11 | 0) == 115) {
         HEAP8[i22 >> 0] = 0;
         HEAP8[i21 >> 0] = 0;
         HEAP8[i21 + 1 >> 0] = 0;
         HEAP8[i21 + 2 >> 0] = 0;
         HEAP8[i21 + 3 >> 0] = 0;
         HEAP8[i21 + 4 >> 0] = 0;
        }
       } else {
        i10 = i5 + 1 | 0;
        i11 = (HEAP8[i10 >> 0] | 0) == 94;
        i8 = i11 & 1;
        i5 = i11 ? i5 + 2 | 0 : i10;
        _memset(i27 | 0, i11 & 1 | 0, 256) | 0;
        HEAP8[i30 >> 0] = 0;
        switch (HEAP8[i5 >> 0] | 0) {
        case 45:
         {
          i11 = (i8 ^ 1) & 255;
          HEAP8[i24 >> 0] = i11;
          i5 = i5 + 1 | 0;
          break;
         }
        case 93:
         {
          i11 = (i8 ^ 1) & 255;
          HEAP8[i25 >> 0] = i11;
          i5 = i5 + 1 | 0;
          break;
         }
        default:
         i11 = (i8 ^ 1) & 255;
        }
        while (1) {
         i8 = HEAP8[i5 >> 0] | 0;
         L81 : do switch (i8 << 24 >> 24) {
         case 0:
          {
           i33 = 154;
           break L6;
          }
         case 93:
          break L70;
         case 45:
          {
           i10 = i5 + 1 | 0;
           i8 = HEAP8[i10 >> 0] | 0;
           switch (i8 << 24 >> 24) {
           case 93:
           case 0:
            {
             i8 = 45;
             break L81;
            }
           default:
            {}
           }
           i5 = HEAP8[i5 + -1 >> 0] | 0;
           if ((i5 & 255) < (i8 & 255)) {
            i5 = i5 & 255;
            do {
             i5 = i5 + 1 | 0;
             HEAP8[i30 + i5 >> 0] = i11;
             i8 = HEAP8[i10 >> 0] | 0;
            } while ((i5 | 0) < (i8 & 255 | 0));
            i5 = i10;
           } else i5 = i10;
           break;
          }
         default:
          {}
         } while (0);
         HEAP8[i30 + ((i8 & 255) + 1) >> 0] = i11;
         i5 = i5 + 1 | 0;
        }
       } while (0);
       i8 = i14 ? i6 + 1 | 0 : 31;
       i11 = (i12 | 0) == 1;
       i12 = (i4 | 0) != 0;
       L89 : do if (i11) {
        if (i12) {
         i3 = _malloc(i8 << 2) | 0;
         if (!i3) {
          i2 = 0;
          i33 = 154;
          break L6;
         }
        } else i3 = i15;
        HEAP32[i29 >> 2] = 0;
        HEAP32[i16 >> 2] = 0;
        i10 = i8;
        i2 = 0;
        L95 : while (1) {
         i9 = (i3 | 0) == 0;
         do {
          L99 : while (1) {
           i8 = HEAP32[i17 >> 2] | 0;
           if (i8 >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
            HEAP32[i17 >> 2] = i8 + 1;
            i8 = HEAPU8[i8 >> 0] | 0;
           } else i8 = ___shgetc(i34) | 0;
           if (!(HEAP8[i30 + (i8 + 1) >> 0] | 0)) break L95;
           HEAP8[i32 >> 0] = i8;
           switch (_mbrtowc(i31, i32, 1, i29) | 0) {
           case -1:
            {
             i2 = 0;
             i33 = 154;
             break L6;
            }
           case -2:
            break;
           default:
            break L99;
           }
          }
          if (!i9) {
           HEAP32[i3 + (i2 << 2) >> 2] = HEAP32[i31 >> 2];
           i2 = i2 + 1 | 0;
          }
         } while (!(i12 & (i2 | 0) == (i10 | 0)));
         i2 = i10 << 1 | 1;
         i8 = _realloc(i3, i2 << 2) | 0;
         if (!i8) {
          i2 = 0;
          i33 = 154;
          break L6;
         } else {
          i9 = i10;
          i10 = i2;
          i3 = i8;
          i2 = i9;
         }
        }
        if (!(_mbsinit(i29) | 0)) {
         i2 = 0;
         i33 = 154;
         break L6;
        } else {
         i9 = i2;
         i2 = 0;
        }
       } else {
        if (i12) {
         i2 = _malloc(i8) | 0;
         if (!i2) {
          i2 = 0;
          i3 = 0;
          i33 = 154;
          break L6;
         } else {
          i9 = i8;
          i3 = 0;
         }
         while (1) {
          do {
           i8 = HEAP32[i17 >> 2] | 0;
           if (i8 >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
            HEAP32[i17 >> 2] = i8 + 1;
            i8 = HEAPU8[i8 >> 0] | 0;
           } else i8 = ___shgetc(i34) | 0;
           if (!(HEAP8[i30 + (i8 + 1) >> 0] | 0)) {
            i9 = i3;
            i3 = 0;
            break L89;
           }
           HEAP8[i2 + i3 >> 0] = i8;
           i3 = i3 + 1 | 0;
          } while ((i3 | 0) != (i9 | 0));
          i3 = i9 << 1 | 1;
          i8 = _realloc(i2, i3) | 0;
          if (!i8) {
           i3 = 0;
           i33 = 154;
           break L6;
          } else {
           i10 = i9;
           i9 = i3;
           i2 = i8;
           i3 = i10;
          }
         }
        }
        if (!i15) {
         i3 = i9;
         while (1) {
          i2 = HEAP32[i17 >> 2] | 0;
          if (i2 >>> 0 < i3 >>> 0) {
           HEAP32[i17 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i34) | 0;
          if (!(HEAP8[i30 + (i2 + 1) >> 0] | 0)) {
           i9 = 0;
           i2 = 0;
           i3 = 0;
           break L89;
          }
          i3 = HEAP32[i18 >> 2] | 0;
         }
        } else {
         i8 = 0;
         i3 = i9;
         while (1) {
          i2 = HEAP32[i17 >> 2] | 0;
          if (i2 >>> 0 < i3 >>> 0) {
           HEAP32[i17 >> 2] = i2 + 1;
           i2 = HEAPU8[i2 >> 0] | 0;
          } else i2 = ___shgetc(i34) | 0;
          if (!(HEAP8[i30 + (i2 + 1) >> 0] | 0)) {
           i9 = i8;
           i2 = i15;
           i3 = 0;
           break L89;
          }
          HEAP8[i15 + i8 >> 0] = i2;
          i8 = i8 + 1 | 0;
          i3 = HEAP32[i18 >> 2] | 0;
         }
        }
       } while (0);
       if (!(HEAP32[i18 >> 2] | 0)) i8 = HEAP32[i17 >> 2] | 0; else {
        i8 = (HEAP32[i17 >> 2] | 0) + -1 | 0;
        HEAP32[i17 >> 2] = i8;
       }
       i8 = i8 - (HEAP32[i20 >> 2] | 0) + (HEAP32[i19 >> 2] | 0) | 0;
       if (!i8) break L6;
       if (!((i8 | 0) == (i6 | 0) | i14 ^ 1)) break L6;
       do if (i12) if (i11) {
        HEAP32[i15 >> 2] = i3;
        break;
       } else {
        HEAP32[i15 >> 2] = i2;
        break;
       } while (0);
       if (!i14) {
        if (i3 | 0) HEAP32[i3 + (i9 << 2) >> 2] = 0;
        if (!i2) {
         i2 = 0;
         break L68;
        }
        HEAP8[i2 + i9 >> 0] = 0;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       i6 = 16;
       i33 = 136;
       break;
      }
     case 111:
      {
       i6 = 8;
       i33 = 136;
       break;
      }
     case 117:
     case 100:
      {
       i6 = 10;
       i33 = 136;
       break;
      }
     case 105:
      {
       i6 = 0;
       i33 = 136;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       d7 = +___floatscan(i34, i12, 0);
       if ((HEAP32[i19 >> 2] | 0) == ((HEAP32[i20 >> 2] | 0) - (HEAP32[i17 >> 2] | 0) | 0)) break L6;
       if (i15) switch (i12 | 0) {
       case 0:
        {
         HEAPF32[i15 >> 2] = d7;
         break L68;
        }
       case 1:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       case 2:
        {
         HEAPF64[i15 >> 3] = d7;
         break L68;
        }
       default:
        break L68;
       }
       break;
      }
     default:
      {}
     } while (0);
     L169 : do if ((i33 | 0) == 136) {
      i33 = 0;
      i6 = ___intscan(i34, i6, 0, -1, -1) | 0;
      if ((HEAP32[i19 >> 2] | 0) == ((HEAP32[i20 >> 2] | 0) - (HEAP32[i17 >> 2] | 0) | 0)) break L6;
      if ((i15 | 0) != 0 & (i11 | 0) == 112) {
       HEAP32[i15 >> 2] = i6;
       break;
      }
      if (i15) switch (i12 | 0) {
      case -2:
       {
        HEAP8[i15 >> 0] = i6;
        break L169;
       }
      case -1:
       {
        HEAP16[i15 >> 1] = i6;
        break L169;
       }
      case 0:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 1:
       {
        HEAP32[i15 >> 2] = i6;
        break L169;
       }
      case 3:
       {
        i14 = i15;
        HEAP32[i14 >> 2] = i6;
        HEAP32[i14 + 4 >> 2] = tempRet0;
        break L169;
       }
      default:
       break L169;
      }
     } while (0);
     i1 = ((i15 | 0) != 0 & 1) + i1 | 0;
     i6 = (HEAP32[i19 >> 2] | 0) + i13 + (HEAP32[i17 >> 2] | 0) - (HEAP32[i20 >> 2] | 0) | 0;
     break L8;
    } while (0);
    i5 = i8 + (i4 & 1) | 0;
    ___shlim(i34, 0);
    i4 = HEAP32[i17 >> 2] | 0;
    if (i4 >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
     HEAP32[i17 >> 2] = i4 + 1;
     i4 = HEAPU8[i4 >> 0] | 0;
    } else i4 = ___shgetc(i34) | 0;
    if ((i4 | 0) != (HEAPU8[i5 >> 0] | 0)) {
     i33 = 22;
     break L6;
    }
    i6 = i13 + 1 | 0;
   } else {
    i5 = i8;
    while (1) {
     i4 = i5 + 1 | 0;
     if (!(_isspace(HEAPU8[i4 >> 0] | 0) | 0)) break; else i5 = i4;
    }
    ___shlim(i34, 0);
    do {
     i4 = HEAP32[i17 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i18 >> 2] | 0) >>> 0) {
      HEAP32[i17 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i34) | 0;
    } while ((_isspace(i4) | 0) != 0);
    if (!(HEAP32[i18 >> 2] | 0)) i4 = HEAP32[i17 >> 2] | 0; else {
     i4 = (HEAP32[i17 >> 2] | 0) + -1 | 0;
     HEAP32[i17 >> 2] = i4;
    }
    i6 = (HEAP32[i19 >> 2] | 0) + i13 + i4 - (HEAP32[i20 >> 2] | 0) | 0;
   } while (0);
   i8 = i5 + 1 | 0;
   i4 = HEAP8[i8 >> 0] | 0;
   if (!(i4 << 24 >> 24)) break L4; else i13 = i6;
  }
  if ((i33 | 0) == 22) {
   if (HEAP32[i18 >> 2] | 0) HEAP32[i17 >> 2] = (HEAP32[i17 >> 2] | 0) + -1;
   if ((i1 | 0) != 0 | (i4 | 0) > -1) break; else {
    i4 = 0;
    i1 = i3;
    i33 = 155;
   }
  } else if ((i33 | 0) == 154) if (!i1) {
   i1 = i3;
   i33 = 155;
  }
  if ((i33 | 0) == 155) {
   i3 = i1;
   i1 = -1;
  }
  if (i4) {
   _free(i2);
   _free(i3);
  }
 } else i1 = 0; while (0);
 if (i35 | 0) ___unlockfile(i34);
 STACKTOP = i36;
 return i1 | 0;
}

function __ZL7MakeMapv(i8) {
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 i3 = i7 + 436 | 0;
 i4 = i7 + 432 | 0;
 i9 = i7;
 HEAP32[i9 >> 2] = 9814;
 i5 = i9 + 4 | 0;
 HEAP32[i5 >> 2] = 0;
 HEAP32[i5 + 4 >> 2] = 0;
 HEAP32[i5 + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(3, i5 | 0, 9819, 5);
 i5 = __THREW__;
 __THREW__ = 0;
 L1 : do if (i5 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  HEAP32[i9 + 16 >> 2] = 9825;
  i5 = i9 + 20 | 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viii(3, i5 | 0, 9831, 6);
  i5 = __THREW__;
  __THREW__ = 0;
  do if (i5 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   i2 = 1;
   i3 = tempRet0;
  } else {
   HEAP32[i9 + 32 >> 2] = 9838;
   i5 = i9 + 36 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9844, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 2;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 48 >> 2] = 9851;
   i5 = i9 + 52 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9819, 5);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 3;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 64 >> 2] = 9858;
   i5 = i9 + 68 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9864, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 4;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 80 >> 2] = 9871;
   i5 = i9 + 84 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9878, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 5;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 96 >> 2] = 9887;
   i5 = i9 + 100 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9895, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 6;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 112 >> 2] = 9871;
   i5 = i9 + 116 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9903, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 7;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 128 >> 2] = 9911;
   i5 = i9 + 132 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9918, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 8;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 144 >> 2] = 9927;
   i5 = i9 + 148 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9934, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 9;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 160 >> 2] = 9941;
   i5 = i9 + 164 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9948, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 10;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 176 >> 2] = 9838;
   i5 = i9 + 180 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9956, 9);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 11;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 192 >> 2] = 9966;
   i5 = i9 + 196 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9972, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 12;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 208 >> 2] = 9979;
   i5 = i9 + 212 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9985, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 13;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 224 >> 2] = 9993;
   i5 = i9 + 228 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 1e4, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 14;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 240 >> 2] = 10007;
   i5 = i9 + 244 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10013, 6);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 15;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 256 >> 2] = 10020;
   i5 = i9 + 260 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9819, 5);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 16;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 272 >> 2] = 10028;
   i5 = i9 + 276 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10036, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 17;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 288 >> 2] = 9814;
   i5 = i9 + 292 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9918, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 18;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 304 >> 2] = 10045;
   i5 = i9 + 308 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9819, 5);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 19;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 320 >> 2] = 10053;
   i5 = i9 + 324 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 9878, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 20;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 336 >> 2] = 10061;
   i5 = i9 + 340 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10068, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 21;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 352 >> 2] = 10076;
   i5 = i9 + 356 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10083, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 22;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 368 >> 2] = 10091;
   i5 = i9 + 372 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10097, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 23;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 384 >> 2] = 10105;
   i5 = i9 + 388 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10111, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 24;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 400 >> 2] = 10119;
   i5 = i9 + 404 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10125, 7);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 25;
    i3 = tempRet0;
    break;
   }
   HEAP32[i9 + 416 >> 2] = 10133;
   i5 = i9 + 420 | 0;
   HEAP32[i5 >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
   HEAP32[i5 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_viii(3, i5 | 0, 10139, 8);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i2 = 26;
    i3 = tempRet0;
    break;
   }
   i2 = i9 + 432 | 0;
   HEAP32[i8 + 4 >> 2] = 0;
   HEAP32[i8 + 8 >> 2] = 0;
   i5 = i8 + 4 | 0;
   HEAP32[i8 >> 2] = i5;
   i1 = i9;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) {
     i1 = i2;
     i6 = 62;
     break;
    }
    HEAP32[i4 >> 2] = i5;
    __THREW__ = 0;
    HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
    invoke_iiiii(6, i8 | 0, i3 | 0, i1 | 0, i1 | 0) | 0;
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) break;
    i1 = i1 + 16 | 0;
   }
   if ((i6 | 0) == 62) {
    while (1) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + -12 | 0);
     i1 = i1 + -16 | 0;
     if ((i1 | 0) == (i9 | 0)) break; else i6 = 62;
    }
    STACKTOP = i7;
    return;
   }
   i1 = ___cxa_find_matching_catch_2() | 0;
   i3 = tempRet0;
   __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEED2Ev(i8);
   do {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2 + -12 | 0);
    i2 = i2 + -16 | 0;
   } while ((i2 | 0) != (i9 | 0));
   break L1;
  } while (0);
  i2 = i9 + (i2 << 4) | 0;
  do {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2 + -12 | 0);
   i2 = i2 + -16 | 0;
  } while ((i2 | 0) != (i9 | 0));
 } while (0);
 ___resumeException(i1 | 0);
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i36, i37, i38, i39, i40, i41, i42, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i39 = i39 | 0;
 i40 = i40 | 0;
 i41 = i41 | 0;
 i42 = i42 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i43 = 0, i44 = 0, i45 = 0;
 i43 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i43 + 128 | 0;
 i1 = i43 + 112 | 0;
 i34 = i43 + 124 | 0;
 i35 = i43 + 120 | 0;
 i3 = i43 + 116 | 0;
 i4 = i43 + 108 | 0;
 i5 = i43 + 104 | 0;
 i6 = i43 + 100 | 0;
 i7 = i43 + 96 | 0;
 i8 = i43 + 92 | 0;
 i9 = i43 + 88 | 0;
 i10 = i43 + 84 | 0;
 i11 = i43 + 80 | 0;
 i12 = i43 + 76 | 0;
 i13 = i43 + 72 | 0;
 i14 = i43 + 68 | 0;
 i15 = i43 + 64 | 0;
 i16 = i43 + 60 | 0;
 i17 = i43 + 56 | 0;
 i18 = i43 + 52 | 0;
 i19 = i43 + 48 | 0;
 i20 = i43 + 44 | 0;
 i21 = i43 + 40 | 0;
 i22 = i43 + 36 | 0;
 i23 = i43 + 32 | 0;
 i24 = i43 + 28 | 0;
 i25 = i43 + 24 | 0;
 i26 = i43 + 20 | 0;
 i27 = i43 + 16 | 0;
 i28 = i43 + 12 | 0;
 i29 = i43 + 8 | 0;
 i30 = i43 + 4 | 0;
 i31 = i43;
 HEAP32[i40 >> 2] = 0;
 i32 = __ZNKSt3__28ios_base6getlocEv(i39) | 0;
 HEAP32[i2 >> 2] = i32;
 __THREW__ = 0;
 i33 = invoke_iii(15, i2 | 0, 18916) | 0;
 i45 = __THREW__;
 __THREW__ = 0;
 if (i45 & 1) {
  i45 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i32) | 0;
  ___resumeException(i45 | 0);
 }
 __ZNSt3__214__shared_count16__release_sharedEv(i32) | 0;
 do switch (i42 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i34 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 24 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i35 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i35 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 16 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 99:
  {
   i42 = i36 + 8 | 0;
   i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i42 >> 2] | 0) + 12 >> 2] & 127](i42) | 0;
   HEAP32[i3 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i4 >> 2] = HEAP32[i38 >> 2];
   i44 = HEAP8[i42 + 8 + 3 >> 0] | 0;
   i38 = i44 << 24 >> 24 < 0;
   i45 = i38 ? HEAP32[i42 >> 2] | 0 : i42;
   i44 = i45 + ((i38 ? HEAP32[i42 + 4 >> 2] | 0 : i44 & 255) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, i45, i44) | 0;
   i44 = 28;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i5 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 12 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 68:
  {
   HEAP32[i6 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, 7576, 7608) | 0;
   i44 = 28;
   break;
  }
 case 70:
  {
   HEAP32[i8 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, 7608, 7640) | 0;
   i44 = 28;
   break;
  }
 case 72:
  {
   HEAP32[i10 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 73:
  {
   HEAP32[i11 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 106:
  {
   HEAP32[i12 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 28 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 109:
  {
   HEAP32[i13 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 16 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 77:
  {
   HEAP32[i14 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i14 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 4 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i15 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i36, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 112:
  {
   HEAP32[i16 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 114:
  {
   HEAP32[i17 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, 7640, 7684) | 0;
   i44 = 28;
   break;
  }
 case 82:
  {
   HEAP32[i19 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i20 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, 7684, 7704) | 0;
   i44 = 28;
   break;
  }
 case 83:
  {
   HEAP32[i21 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 84:
  {
   HEAP32[i22 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, 7704, 7736) | 0;
   i44 = 28;
   break;
  }
 case 119:
  {
   HEAP32[i24 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 24 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 120:
  {
   i45 = HEAP32[(HEAP32[i36 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i25 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i26 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i25 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i45 & 63](i36, i1, i2, i39, i40, i41) | 0;
   break;
  }
 case 88:
  {
   i42 = i36 + 8 | 0;
   i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i42 >> 2] | 0) + 24 >> 2] & 127](i42) | 0;
   HEAP32[i27 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i38 >> 2];
   i44 = HEAP8[i42 + 8 + 3 >> 0] | 0;
   i38 = i44 << 24 >> 24 < 0;
   i45 = i38 ? HEAP32[i42 >> 2] | 0 : i42;
   i44 = i45 + ((i38 ? HEAP32[i42 + 4 >> 2] | 0 : i44 & 255) << 2) | 0;
   HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i28 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i36, i1, i2, i39, i40, i41, i45, i44) | 0;
   i44 = 28;
   break;
  }
 case 121:
  {
   HEAP32[i29 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i29 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 20 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 89:
  {
   HEAP32[i30 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i36, i41 + 20 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 37:
  {
   HEAP32[i31 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i36, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 default:
  {
   HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
   i44 = 28;
  }
 } while (0);
 if ((i44 | 0) == 28) i1 = HEAP32[i37 >> 2] | 0;
 STACKTOP = i43;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc(i36, i37, i38, i39, i40, i41, i42, i1) {
 i36 = i36 | 0;
 i37 = i37 | 0;
 i38 = i38 | 0;
 i39 = i39 | 0;
 i40 = i40 | 0;
 i41 = i41 | 0;
 i42 = i42 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0, i31 = 0, i32 = 0, i33 = 0, i34 = 0, i35 = 0, i43 = 0, i44 = 0, i45 = 0;
 i43 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i2 = i43 + 128 | 0;
 i1 = i43 + 112 | 0;
 i34 = i43 + 124 | 0;
 i35 = i43 + 120 | 0;
 i3 = i43 + 116 | 0;
 i4 = i43 + 108 | 0;
 i5 = i43 + 104 | 0;
 i6 = i43 + 100 | 0;
 i7 = i43 + 96 | 0;
 i8 = i43 + 92 | 0;
 i9 = i43 + 88 | 0;
 i10 = i43 + 84 | 0;
 i11 = i43 + 80 | 0;
 i12 = i43 + 76 | 0;
 i13 = i43 + 72 | 0;
 i14 = i43 + 68 | 0;
 i15 = i43 + 64 | 0;
 i16 = i43 + 60 | 0;
 i17 = i43 + 56 | 0;
 i18 = i43 + 52 | 0;
 i19 = i43 + 48 | 0;
 i20 = i43 + 44 | 0;
 i21 = i43 + 40 | 0;
 i22 = i43 + 36 | 0;
 i23 = i43 + 32 | 0;
 i24 = i43 + 28 | 0;
 i25 = i43 + 24 | 0;
 i26 = i43 + 20 | 0;
 i27 = i43 + 16 | 0;
 i28 = i43 + 12 | 0;
 i29 = i43 + 8 | 0;
 i30 = i43 + 4 | 0;
 i31 = i43;
 HEAP32[i40 >> 2] = 0;
 i32 = __ZNKSt3__28ios_base6getlocEv(i39) | 0;
 HEAP32[i2 >> 2] = i32;
 __THREW__ = 0;
 i33 = invoke_iii(15, i2 | 0, 18884) | 0;
 i45 = __THREW__;
 __THREW__ = 0;
 if (i45 & 1) {
  i45 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i32) | 0;
  ___resumeException(i45 | 0);
 }
 __ZNSt3__214__shared_count16__release_sharedEv(i32) | 0;
 do switch (i42 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[i34 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i34 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 24 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[i35 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i35 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 16 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 99:
  {
   i42 = i36 + 8 | 0;
   i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i42 >> 2] | 0) + 12 >> 2] & 127](i42) | 0;
   HEAP32[i3 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i4 >> 2] = HEAP32[i38 >> 2];
   i44 = HEAP8[i42 + 11 >> 0] | 0;
   i38 = i44 << 24 >> 24 < 0;
   i45 = i38 ? HEAP32[i42 >> 2] | 0 : i42;
   i44 = i45 + (i38 ? HEAP32[i42 + 4 >> 2] | 0 : i44 & 255) | 0;
   HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i4 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, i45, i44) | 0;
   i44 = 28;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[i5 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 12 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 68:
  {
   HEAP32[i6 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i7 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, 14297, 14305) | 0;
   i44 = 28;
   break;
  }
 case 70:
  {
   HEAP32[i8 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i9 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i9 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, 14305, 14313) | 0;
   i44 = 28;
   break;
  }
 case 72:
  {
   HEAP32[i10 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i10 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 73:
  {
   HEAP32[i11 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i11 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 106:
  {
   HEAP32[i12 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 28 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 109:
  {
   HEAP32[i13 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i13 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 16 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 77:
  {
   HEAP32[i14 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i14 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 4 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[i15 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i15 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i36, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 112:
  {
   HEAP32[i16 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i16 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 8 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 114:
  {
   HEAP32[i17 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i18 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, 14313, 14324) | 0;
   i44 = 28;
   break;
  }
 case 82:
  {
   HEAP32[i19 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i20 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i19 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i20 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, 14324, 14329) | 0;
   i44 = 28;
   break;
  }
 case 83:
  {
   HEAP32[i21 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 84:
  {
   HEAP32[i22 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i23 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i22 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i23 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, 14329, 14337) | 0;
   i44 = 28;
   break;
  }
 case 119:
  {
   HEAP32[i24 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i24 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 24 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 120:
  {
   i45 = HEAP32[(HEAP32[i36 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[i25 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i26 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i1 >> 2] = HEAP32[i25 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i26 >> 2];
   i1 = FUNCTION_TABLE_iiiiiii[i45 & 63](i36, i1, i2, i39, i40, i41) | 0;
   break;
  }
 case 88:
  {
   i42 = i36 + 8 | 0;
   i42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i42 >> 2] | 0) + 24 >> 2] & 127](i42) | 0;
   HEAP32[i27 >> 2] = HEAP32[i37 >> 2];
   HEAP32[i28 >> 2] = HEAP32[i38 >> 2];
   i44 = HEAP8[i42 + 11 >> 0] | 0;
   i38 = i44 << 24 >> 24 < 0;
   i45 = i38 ? HEAP32[i42 >> 2] | 0 : i42;
   i44 = i45 + (i38 ? HEAP32[i42 + 4 >> 2] | 0 : i44 & 255) | 0;
   HEAP32[i1 >> 2] = HEAP32[i27 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i28 >> 2];
   HEAP32[i37 >> 2] = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i36, i1, i2, i39, i40, i41, i45, i44) | 0;
   i44 = 28;
   break;
  }
 case 121:
  {
   HEAP32[i29 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i29 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 20 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 89:
  {
   HEAP32[i30 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i30 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i36, i41 + 20 | 0, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 case 37:
  {
   HEAP32[i31 >> 2] = HEAP32[i38 >> 2];
   HEAP32[i2 >> 2] = HEAP32[i31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i36, i37, i2, i40, i33);
   i44 = 28;
   break;
  }
 default:
  {
   HEAP32[i40 >> 2] = HEAP32[i40 >> 2] | 4;
   i44 = 28;
  }
 } while (0);
 if ((i44 | 0) == 28) i1 = HEAP32[i37 >> 2] | 0;
 STACKTOP = i43;
 return i1 | 0;
}

function _free(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0;
 if (!i1) return;
 i3 = i1 + -8 | 0;
 i7 = HEAP32[4338] | 0;
 if (i3 >>> 0 < i7 >>> 0) _abort();
 i1 = HEAP32[i1 + -4 >> 2] | 0;
 i2 = i1 & 3;
 if ((i2 | 0) == 1) _abort();
 i4 = i1 & -8;
 i13 = i3 + i4 | 0;
 do if (!(i1 & 1)) {
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i2) return;
  i10 = i3 + (0 - i1) | 0;
  i9 = i1 + i4 | 0;
  if (i10 >>> 0 < i7 >>> 0) _abort();
  if ((i10 | 0) == (HEAP32[4339] | 0)) {
   i1 = i13 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i16 = i10;
    i5 = i9;
    break;
   }
   HEAP32[4336] = i9;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i10 + 4 >> 2] = i9 | 1;
   HEAP32[i10 + i9 >> 2] = i9;
   return;
  }
  i4 = i1 >>> 3;
  if (i1 >>> 0 < 256) {
   i2 = HEAP32[i10 + 8 >> 2] | 0;
   i3 = HEAP32[i10 + 12 >> 2] | 0;
   i1 = 17376 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i10 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[4334] = HEAP32[4334] & ~(1 << i4);
    i16 = i10;
    i5 = i9;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) i6 = i1; else _abort();
   } else i6 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i6 >> 2] = i2;
   i16 = i10;
   i5 = i9;
   break;
  }
  i6 = HEAP32[i10 + 24 >> 2] | 0;
  i3 = HEAP32[i10 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i10 | 0)) {
   i3 = i10 + 16 | 0;
   i2 = i3 + 4 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i8 = 0;
     break;
    } else i2 = i3;
   }
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i7 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i8 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i10 + 8 >> 2] | 0;
   if (i4 >>> 0 < i7 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i10 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i10 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i8 = i3;
    break;
   } else _abort();
  } while (0);
  if (i6) {
   i1 = HEAP32[i10 + 28 >> 2] | 0;
   i2 = 17640 + (i1 << 2) | 0;
   if ((i10 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i8;
    if (!i8) {
     HEAP32[4335] = HEAP32[4335] & ~(1 << i1);
     i16 = i10;
     i5 = i9;
     break;
    }
   } else {
    if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i1 = i6 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i10 | 0)) HEAP32[i1 >> 2] = i8; else HEAP32[i6 + 20 >> 2] = i8;
    if (!i8) {
     i16 = i10;
     i5 = i9;
     break;
    }
   }
   i3 = HEAP32[4338] | 0;
   if (i8 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i8 + 24 >> 2] = i6;
   i1 = i10 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i8 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i8;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
    HEAP32[i8 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i8;
    i16 = i10;
    i5 = i9;
    break;
   } else {
    i16 = i10;
    i5 = i9;
   }
  } else {
   i16 = i10;
   i5 = i9;
  }
 } else {
  i16 = i3;
  i5 = i4;
 } while (0);
 if (i16 >>> 0 >= i13 >>> 0) _abort();
 i1 = i13 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 1)) _abort();
 if (!(i2 & 2)) {
  if ((i13 | 0) == (HEAP32[4340] | 0)) {
   i15 = (HEAP32[4337] | 0) + i5 | 0;
   HEAP32[4337] = i15;
   HEAP32[4340] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   if ((i16 | 0) != (HEAP32[4339] | 0)) return;
   HEAP32[4339] = 0;
   HEAP32[4336] = 0;
   return;
  }
  if ((i13 | 0) == (HEAP32[4339] | 0)) {
   i15 = (HEAP32[4336] | 0) + i5 | 0;
   HEAP32[4336] = i15;
   HEAP32[4339] = i16;
   HEAP32[i16 + 4 >> 2] = i15 | 1;
   HEAP32[i16 + i15 >> 2] = i15;
   return;
  }
  i5 = (i2 & -8) + i5 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i6 = HEAP32[i13 + 24 >> 2] | 0;
   i1 = HEAP32[i13 + 12 >> 2] | 0;
   do if ((i1 | 0) == (i13 | 0)) {
    i3 = i13 + 16 | 0;
    i2 = i3 + 4 | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i3 >> 2] | 0;
     if (!i1) {
      i12 = 0;
      break;
     } else i2 = i3;
    }
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i12 = i1;
     break;
    }
   } else {
    i2 = HEAP32[i13 + 8 >> 2] | 0;
    if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i3 = i2 + 12 | 0;
    if ((HEAP32[i3 >> 2] | 0) != (i13 | 0)) _abort();
    i4 = i1 + 8 | 0;
    if ((HEAP32[i4 >> 2] | 0) == (i13 | 0)) {
     HEAP32[i3 >> 2] = i1;
     HEAP32[i4 >> 2] = i2;
     i12 = i1;
     break;
    } else _abort();
   } while (0);
   if (i6 | 0) {
    i1 = HEAP32[i13 + 28 >> 2] | 0;
    i2 = 17640 + (i1 << 2) | 0;
    if ((i13 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i12;
     if (!i12) {
      HEAP32[4335] = HEAP32[4335] & ~(1 << i1);
      break;
     }
    } else {
     if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
     i1 = i6 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i13 | 0)) HEAP32[i1 >> 2] = i12; else HEAP32[i6 + 20 >> 2] = i12;
     if (!i12) break;
    }
    i3 = HEAP32[4338] | 0;
    if (i12 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i12 + 24 >> 2] = i6;
    i1 = i13 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i12 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i12;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
     HEAP32[i12 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i12;
     break;
    }
   }
  } else {
   i2 = HEAP32[i13 + 8 >> 2] | 0;
   i3 = HEAP32[i13 + 12 >> 2] | 0;
   i1 = 17376 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i13 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[4334] = HEAP32[4334] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i13 | 0)) i11 = i1; else _abort();
   } else i11 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i11 >> 2] = i2;
  } while (0);
  HEAP32[i16 + 4 >> 2] = i5 | 1;
  HEAP32[i16 + i5 >> 2] = i5;
  if ((i16 | 0) == (HEAP32[4339] | 0)) {
   HEAP32[4336] = i5;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i16 + 4 >> 2] = i5 | 1;
  HEAP32[i16 + i5 >> 2] = i5;
 }
 i1 = i5 >>> 3;
 if (i5 >>> 0 < 256) {
  i3 = 17376 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[4334] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
    i14 = i2;
    i15 = i1;
   }
  } else {
   HEAP32[4334] = i2 | i1;
   i14 = i3;
   i15 = i3 + 8 | 0;
  }
  HEAP32[i15 >> 2] = i16;
  HEAP32[i14 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i14;
  HEAP32[i16 + 12 >> 2] = i3;
  return;
 }
 i1 = i5 >>> 8;
 if (i1) if (i5 >>> 0 > 16777215) i1 = 31; else {
  i14 = (i1 + 1048320 | 0) >>> 16 & 8;
  i15 = i1 << i14;
  i13 = (i15 + 520192 | 0) >>> 16 & 4;
  i15 = i15 << i13;
  i1 = (i15 + 245760 | 0) >>> 16 & 2;
  i1 = 14 - (i13 | i14 | i1) + (i15 << i1 >>> 15) | 0;
  i1 = i5 >>> (i1 + 7 | 0) & 1 | i1 << 1;
 } else i1 = 0;
 i4 = 17640 + (i1 << 2) | 0;
 HEAP32[i16 + 28 >> 2] = i1;
 HEAP32[i16 + 20 >> 2] = 0;
 HEAP32[i16 + 16 >> 2] = 0;
 i2 = HEAP32[4335] | 0;
 i3 = 1 << i1;
 do if (i2 & i3) {
  i2 = i5 << ((i1 | 0) == 31 ? 0 : 25 - (i1 >>> 1) | 0);
  i4 = HEAP32[i4 >> 2] | 0;
  while (1) {
   if ((HEAP32[i4 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
    i1 = 130;
    break;
   }
   i3 = i4 + 16 + (i2 >>> 31 << 2) | 0;
   i1 = HEAP32[i3 >> 2] | 0;
   if (!i1) {
    i1 = 127;
    break;
   } else {
    i2 = i2 << 1;
    i4 = i1;
   }
  }
  if ((i1 | 0) == 127) if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
   HEAP32[i3 >> 2] = i16;
   HEAP32[i16 + 24 >> 2] = i4;
   HEAP32[i16 + 12 >> 2] = i16;
   HEAP32[i16 + 8 >> 2] = i16;
   break;
  } else if ((i1 | 0) == 130) {
   i1 = i4 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   i15 = HEAP32[4338] | 0;
   if (i2 >>> 0 >= i15 >>> 0 & i4 >>> 0 >= i15 >>> 0) {
    HEAP32[i2 + 12 >> 2] = i16;
    HEAP32[i1 >> 2] = i16;
    HEAP32[i16 + 8 >> 2] = i2;
    HEAP32[i16 + 12 >> 2] = i4;
    HEAP32[i16 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } else {
  HEAP32[4335] = i2 | i3;
  HEAP32[i4 >> 2] = i16;
  HEAP32[i16 + 24 >> 2] = i4;
  HEAP32[i16 + 12 >> 2] = i16;
  HEAP32[i16 + 8 >> 2] = i16;
 } while (0);
 i16 = (HEAP32[4342] | 0) + -1 | 0;
 HEAP32[4342] = i16;
 if (!i16) i1 = 17792; else return;
 while (1) {
  i1 = HEAP32[i1 >> 2] | 0;
  if (!i1) break; else i1 = i1 + 8 | 0;
 }
 HEAP32[4342] = -1;
 return;
}

function _dispose_chunk(i1, i3) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0;
 i14 = i1 + i3 | 0;
 i2 = HEAP32[i1 + 4 >> 2] | 0;
 do if (!(i2 & 1)) {
  i6 = HEAP32[i1 >> 2] | 0;
  if (!(i2 & 3)) return;
  i11 = i1 + (0 - i6) | 0;
  i10 = i6 + i3 | 0;
  i8 = HEAP32[4338] | 0;
  if (i11 >>> 0 < i8 >>> 0) _abort();
  if ((i11 | 0) == (HEAP32[4339] | 0)) {
   i1 = i14 + 4 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if ((i2 & 3 | 0) != 3) {
    i17 = i11;
    i5 = i10;
    break;
   }
   HEAP32[4336] = i10;
   HEAP32[i1 >> 2] = i2 & -2;
   HEAP32[i11 + 4 >> 2] = i10 | 1;
   HEAP32[i11 + i10 >> 2] = i10;
   return;
  }
  i4 = i6 >>> 3;
  if (i6 >>> 0 < 256) {
   i2 = HEAP32[i11 + 8 >> 2] | 0;
   i3 = HEAP32[i11 + 12 >> 2] | 0;
   i1 = 17376 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i8 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i11 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[4334] = HEAP32[4334] & ~(1 << i4);
    i17 = i11;
    i5 = i10;
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i8 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) i7 = i1; else _abort();
   } else i7 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i7 >> 2] = i2;
   i17 = i11;
   i5 = i10;
   break;
  }
  i6 = HEAP32[i11 + 24 >> 2] | 0;
  i3 = HEAP32[i11 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i11 | 0)) {
   i3 = i11 + 16 | 0;
   i2 = i3 + 4 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i9 = 0;
     break;
    } else i2 = i3;
   }
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i8 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i9 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i11 + 8 >> 2] | 0;
   if (i4 >>> 0 < i8 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i11 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i11 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i9 = i3;
    break;
   } else _abort();
  } while (0);
  if (i6) {
   i1 = HEAP32[i11 + 28 >> 2] | 0;
   i2 = 17640 + (i1 << 2) | 0;
   if ((i11 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i9;
    if (!i9) {
     HEAP32[4335] = HEAP32[4335] & ~(1 << i1);
     i17 = i11;
     i5 = i10;
     break;
    }
   } else {
    if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i1 = i6 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i11 | 0)) HEAP32[i1 >> 2] = i9; else HEAP32[i6 + 20 >> 2] = i9;
    if (!i9) {
     i17 = i11;
     i5 = i10;
     break;
    }
   }
   i3 = HEAP32[4338] | 0;
   if (i9 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i9 + 24 >> 2] = i6;
   i1 = i11 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i9 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i9;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
    HEAP32[i9 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i9;
    i17 = i11;
    i5 = i10;
    break;
   } else {
    i17 = i11;
    i5 = i10;
   }
  } else {
   i17 = i11;
   i5 = i10;
  }
 } else {
  i17 = i1;
  i5 = i3;
 } while (0);
 i7 = HEAP32[4338] | 0;
 if (i14 >>> 0 < i7 >>> 0) _abort();
 i1 = i14 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 2)) {
  if ((i14 | 0) == (HEAP32[4340] | 0)) {
   i16 = (HEAP32[4337] | 0) + i5 | 0;
   HEAP32[4337] = i16;
   HEAP32[4340] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   if ((i17 | 0) != (HEAP32[4339] | 0)) return;
   HEAP32[4339] = 0;
   HEAP32[4336] = 0;
   return;
  }
  if ((i14 | 0) == (HEAP32[4339] | 0)) {
   i16 = (HEAP32[4336] | 0) + i5 | 0;
   HEAP32[4336] = i16;
   HEAP32[4339] = i17;
   HEAP32[i17 + 4 >> 2] = i16 | 1;
   HEAP32[i17 + i16 >> 2] = i16;
   return;
  }
  i5 = (i2 & -8) + i5 | 0;
  i4 = i2 >>> 3;
  do if (i2 >>> 0 >= 256) {
   i6 = HEAP32[i14 + 24 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   do if ((i3 | 0) == (i14 | 0)) {
    i3 = i14 + 16 | 0;
    i2 = i3 + 4 | 0;
    i1 = HEAP32[i2 >> 2] | 0;
    if (!i1) {
     i1 = HEAP32[i3 >> 2] | 0;
     if (!i1) {
      i13 = 0;
      break;
     } else i2 = i3;
    }
    while (1) {
     i3 = i1 + 20 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (i4 | 0) {
      i1 = i4;
      i2 = i3;
      continue;
     }
     i3 = i1 + 16 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if (!i4) break; else {
      i1 = i4;
      i2 = i3;
     }
    }
    if (i2 >>> 0 < i7 >>> 0) _abort(); else {
     HEAP32[i2 >> 2] = 0;
     i13 = i1;
     break;
    }
   } else {
    i4 = HEAP32[i14 + 8 >> 2] | 0;
    if (i4 >>> 0 < i7 >>> 0) _abort();
    i1 = i4 + 12 | 0;
    if ((HEAP32[i1 >> 2] | 0) != (i14 | 0)) _abort();
    i2 = i3 + 8 | 0;
    if ((HEAP32[i2 >> 2] | 0) == (i14 | 0)) {
     HEAP32[i1 >> 2] = i3;
     HEAP32[i2 >> 2] = i4;
     i13 = i3;
     break;
    } else _abort();
   } while (0);
   if (i6 | 0) {
    i1 = HEAP32[i14 + 28 >> 2] | 0;
    i2 = 17640 + (i1 << 2) | 0;
    if ((i14 | 0) == (HEAP32[i2 >> 2] | 0)) {
     HEAP32[i2 >> 2] = i13;
     if (!i13) {
      HEAP32[4335] = HEAP32[4335] & ~(1 << i1);
      break;
     }
    } else {
     if (i6 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
     i1 = i6 + 16 | 0;
     if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) HEAP32[i1 >> 2] = i13; else HEAP32[i6 + 20 >> 2] = i13;
     if (!i13) break;
    }
    i3 = HEAP32[4338] | 0;
    if (i13 >>> 0 < i3 >>> 0) _abort();
    HEAP32[i13 + 24 >> 2] = i6;
    i1 = i14 + 16 | 0;
    i2 = HEAP32[i1 >> 2] | 0;
    do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
     HEAP32[i13 + 16 >> 2] = i2;
     HEAP32[i2 + 24 >> 2] = i13;
     break;
    } while (0);
    i1 = HEAP32[i1 + 4 >> 2] | 0;
    if (i1 | 0) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
     HEAP32[i13 + 20 >> 2] = i1;
     HEAP32[i1 + 24 >> 2] = i13;
     break;
    }
   }
  } else {
   i2 = HEAP32[i14 + 8 >> 2] | 0;
   i3 = HEAP32[i14 + 12 >> 2] | 0;
   i1 = 17376 + (i4 << 1 << 2) | 0;
   if ((i2 | 0) != (i1 | 0)) {
    if (i2 >>> 0 < i7 >>> 0) _abort();
    if ((HEAP32[i2 + 12 >> 2] | 0) != (i14 | 0)) _abort();
   }
   if ((i3 | 0) == (i2 | 0)) {
    HEAP32[4334] = HEAP32[4334] & ~(1 << i4);
    break;
   }
   if ((i3 | 0) != (i1 | 0)) {
    if (i3 >>> 0 < i7 >>> 0) _abort();
    i1 = i3 + 8 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i14 | 0)) i12 = i1; else _abort();
   } else i12 = i3 + 8 | 0;
   HEAP32[i2 + 12 >> 2] = i3;
   HEAP32[i12 >> 2] = i2;
  } while (0);
  HEAP32[i17 + 4 >> 2] = i5 | 1;
  HEAP32[i17 + i5 >> 2] = i5;
  if ((i17 | 0) == (HEAP32[4339] | 0)) {
   HEAP32[4336] = i5;
   return;
  }
 } else {
  HEAP32[i1 >> 2] = i2 & -2;
  HEAP32[i17 + 4 >> 2] = i5 | 1;
  HEAP32[i17 + i5 >> 2] = i5;
 }
 i1 = i5 >>> 3;
 if (i5 >>> 0 < 256) {
  i3 = 17376 + (i1 << 1 << 2) | 0;
  i2 = HEAP32[4334] | 0;
  i1 = 1 << i1;
  if (i2 & i1) {
   i1 = i3 + 8 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   if (i2 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
    i15 = i2;
    i16 = i1;
   }
  } else {
   HEAP32[4334] = i2 | i1;
   i15 = i3;
   i16 = i3 + 8 | 0;
  }
  HEAP32[i16 >> 2] = i17;
  HEAP32[i15 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i15;
  HEAP32[i17 + 12 >> 2] = i3;
  return;
 }
 i1 = i5 >>> 8;
 if (i1) if (i5 >>> 0 > 16777215) i1 = 31; else {
  i15 = (i1 + 1048320 | 0) >>> 16 & 8;
  i16 = i1 << i15;
  i14 = (i16 + 520192 | 0) >>> 16 & 4;
  i16 = i16 << i14;
  i1 = (i16 + 245760 | 0) >>> 16 & 2;
  i1 = 14 - (i14 | i15 | i1) + (i16 << i1 >>> 15) | 0;
  i1 = i5 >>> (i1 + 7 | 0) & 1 | i1 << 1;
 } else i1 = 0;
 i4 = 17640 + (i1 << 2) | 0;
 HEAP32[i17 + 28 >> 2] = i1;
 HEAP32[i17 + 20 >> 2] = 0;
 HEAP32[i17 + 16 >> 2] = 0;
 i2 = HEAP32[4335] | 0;
 i3 = 1 << i1;
 if (!(i2 & i3)) {
  HEAP32[4335] = i2 | i3;
  HEAP32[i4 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i4;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 }
 i2 = i5 << ((i1 | 0) == 31 ? 0 : 25 - (i1 >>> 1) | 0);
 i4 = HEAP32[i4 >> 2] | 0;
 while (1) {
  if ((HEAP32[i4 + 4 >> 2] & -8 | 0) == (i5 | 0)) {
   i1 = 127;
   break;
  }
  i3 = i4 + 16 + (i2 >>> 31 << 2) | 0;
  i1 = HEAP32[i3 >> 2] | 0;
  if (!i1) {
   i1 = 124;
   break;
  } else {
   i2 = i2 << 1;
   i4 = i1;
  }
 }
 if ((i1 | 0) == 124) {
  if (i3 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
  HEAP32[i3 >> 2] = i17;
  HEAP32[i17 + 24 >> 2] = i4;
  HEAP32[i17 + 12 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i17;
  return;
 } else if ((i1 | 0) == 127) {
  i1 = i4 + 8 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i16 = HEAP32[4338] | 0;
  if (!(i2 >>> 0 >= i16 >>> 0 & i4 >>> 0 >= i16 >>> 0)) _abort();
  HEAP32[i2 + 12 >> 2] = i17;
  HEAP32[i1 >> 2] = i17;
  HEAP32[i17 + 8 >> 2] = i2;
  HEAP32[i17 + 12 >> 2] = i4;
  HEAP32[i17 + 24 >> 2] = 0;
  return;
 }
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri(i1, i3, i2, i4, i7, i8, i9, i10, i5, i12) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i12 = i12 | 0;
 var i6 = 0, i11 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i11 = i13;
 if (i1) {
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20604) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 44 >> 2] & 127](i11, i6);
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 127](i11, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(47, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i6;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i11, i6);
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 127](i11, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(47, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i6;
  }
  HEAP8[i7 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6) | 0;
  HEAP8[i8 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 127](i6) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i11, i6);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP8[i9 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i11, i6);
  i1 = i10 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i10 >> 2] >> 0] = 0;
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP8[i10 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i10 | 0, 0);
  i9 = __THREW__;
  __THREW__ = 0;
  if (i9 & 1) {
   i9 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i9);
  };
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
 } else {
  i6 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20596) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 44 >> 2] & 127](i11, i6);
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 32 >> 2] & 127](i11, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(47, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i6;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] & 127](i11, i6);
   i1 = HEAP32[i11 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 127](i11, i6);
   i1 = i5 + 11 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP8[i5 >> 0] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(47, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i11 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i11 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
   i2 = i6;
  }
  HEAP8[i7 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] & 127](i6) | 0;
  HEAP8[i8 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 16 >> 2] & 127](i6) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i11, i6);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP8[i9 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i11, i6);
  i1 = i10 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i10 >> 2] >> 0] = 0;
   HEAP32[i10 + 4 >> 2] = 0;
  } else {
   HEAP8[i10 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i10 | 0, 0);
  i9 = __THREW__;
  __THREW__ = 0;
  if (i9 & 1) {
   i9 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i9);
  };
  HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i10 + 4 >> 2] = HEAP32[i11 + 4 >> 2];
  HEAP32[i10 + 8 >> 2] = HEAP32[i11 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i11 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i11);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0;
 }
 HEAP32[i12 >> 2] = i1;
 STACKTOP = i13;
 return;
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri(i1, i3, i2, i4, i6, i7, i8, i9, i5, i11) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i5 = i5 | 0;
 i11 = i11 | 0;
 var i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i12;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20620) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i5 >> 2] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(49, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i10, i2);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i5 >> 2] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(49, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  }
  HEAP32[i6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i9 >> 2] >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20612) | 0;
  if (i3) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i5 >> 2] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(49, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i10, i2);
   i1 = HEAP32[i10 >> 2] | 0;
   HEAP8[i4 >> 0] = i1;
   HEAP8[i4 + 1 >> 0] = i1 >> 8;
   HEAP8[i4 + 2 >> 0] = i1 >> 16;
   HEAP8[i4 + 3 >> 0] = i1 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
   i1 = i5 + 8 + 3 | 0;
   if ((HEAP8[i1 >> 0] | 0) < 0) {
    HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
    HEAP32[i5 + 4 >> 2] = 0;
   } else {
    HEAP32[i5 >> 2] = 0;
    HEAP8[i1 >> 0] = 0;
   }
   __THREW__ = 0;
   invoke_vii(49, i5 | 0, 0);
   i4 = __THREW__;
   __THREW__ = 0;
   if (i4 & 1) {
    i4 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i4);
   };
   HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
   HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
   HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i10 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  }
  HEAP32[i6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i9 >> 2] >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i11 >> 2] = i1;
 STACKTOP = i12;
 return;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri(i1, i2, i3, i6, i7, i8, i9, i5, i4, i11) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i11 = i11 | 0;
 var i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i12;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20620) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
  i1 = HEAP32[i10 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
  i1 = i4 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i4 >> 2] >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP32[i4 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i4 | 0, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  };
  HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  i1 = i5 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP32[i5 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i5 | 0, 0);
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i4 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i4);
  };
  HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  HEAP32[i6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i9 >> 2] >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20612) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
  i1 = HEAP32[i10 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
  i1 = i4 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i4 >> 2] >> 2] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP32[i4 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i4 | 0, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  };
  HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  i1 = i5 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i5 >> 2] >> 2] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP32[i5 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i5 | 0, 0);
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i4 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i4);
  };
  HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  HEAP32[i6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP32[i7 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 8 + 3 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP32[HEAP32[i9 >> 2] >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP32[i9 >> 2] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(49, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i11 >> 2] = i1;
 STACKTOP = i12;
 return;
}

function ___intscan(i13, i4, i6, i1, i2) {
 i13 = i13 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i14 = 0, i15 = 0;
 L1 : do if (i4 >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  i2 = 0;
  i1 = 0;
 } else {
  i15 = i13 + 4 | 0;
  i14 = i13 + 100 | 0;
  do {
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
  } while ((_isspace(i3) | 0) != 0);
  L11 : do switch (i3 | 0) {
  case 43:
  case 45:
   {
    i3 = ((i3 | 0) == 45) << 31 >> 31;
    i5 = HEAP32[i15 >> 2] | 0;
    if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i5 + 1;
     i12 = i3;
     i3 = HEAPU8[i5 >> 0] | 0;
     break L11;
    } else {
     i12 = i3;
     i3 = ___shgetc(i13) | 0;
     break L11;
    }
   }
  default:
   i12 = 0;
  } while (0);
  i5 = (i4 | 0) == 0;
  do if ((i4 | 16 | 0) == 16 & (i3 | 0) == 48) {
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
   if ((i3 | 32 | 0) != 120) if (i5) {
    i4 = 8;
    i10 = 46;
    break;
   } else {
    i10 = 32;
    break;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
    HEAP32[i15 >> 2] = i3 + 1;
    i3 = HEAPU8[i3 >> 0] | 0;
   } else i3 = ___shgetc(i13) | 0;
   if ((HEAPU8[10149 + i3 >> 0] | 0) > 15) {
    i1 = (HEAP32[i14 >> 2] | 0) == 0;
    if (!i1) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    if (!i6) {
     ___shlim(i13, 0);
     i2 = 0;
     i1 = 0;
     break L1;
    }
    if (i1) {
     i2 = 0;
     i1 = 0;
     break L1;
    }
    HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    i2 = 0;
    i1 = 0;
    break L1;
   } else {
    i4 = 16;
    i10 = 46;
   }
  } else {
   i4 = i5 ? 10 : i4;
   if ((HEAPU8[10149 + i3 >> 0] | 0) >>> 0 < i4 >>> 0) i10 = 32; else {
    if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
    ___shlim(i13, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    i2 = 0;
    i1 = 0;
    break L1;
   }
  } while (0);
  if ((i10 | 0) == 32) if ((i4 | 0) == 10) {
   i4 = i3 + -48 | 0;
   if (i4 >>> 0 < 10) {
    i3 = 0;
    i5 = i4;
    do {
     i3 = (i3 * 10 | 0) + i5 | 0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i5 = i4 + -48 | 0;
    } while (i5 >>> 0 < 10 & i3 >>> 0 < 429496729);
    i6 = 0;
   } else {
    i4 = i3;
    i3 = 0;
    i6 = 0;
   }
   i5 = i4 + -48 | 0;
   if (i5 >>> 0 < 10) {
    i9 = i5;
    while (1) {
     i5 = ___muldi3(i3 | 0, i6 | 0, 10, 0) | 0;
     i7 = tempRet0;
     i8 = ((i9 | 0) < 0) << 31 >> 31;
     i11 = ~i8;
     if (i7 >>> 0 > i11 >>> 0 | (i7 | 0) == (i11 | 0) & i5 >>> 0 > ~i9 >>> 0) {
      i5 = i4;
      i4 = i9;
      break;
     }
     i3 = _i64Add(i5 | 0, i7 | 0, i9 | 0, i8 | 0) | 0;
     i6 = tempRet0;
     i4 = HEAP32[i15 >> 2] | 0;
     if (i4 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i4 + 1;
      i4 = HEAPU8[i4 >> 0] | 0;
     } else i4 = ___shgetc(i13) | 0;
     i7 = i4 + -48 | 0;
     if (i7 >>> 0 < 10 & (i6 >>> 0 < 429496729 | (i6 | 0) == 429496729 & i3 >>> 0 < 2576980378)) i9 = i7; else {
      i5 = i4;
      i4 = i7;
      break;
     }
    }
    if (i4 >>> 0 > 9) {
     i5 = i12;
     i4 = i6;
    } else {
     i4 = 10;
     i10 = 72;
    }
   } else {
    i5 = i12;
    i4 = i6;
   }
  } else i10 = 46;
  L63 : do if ((i10 | 0) == 46) {
   if (!(i4 + -1 & i4)) {
    i10 = HEAP8[10405 + ((i4 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    i6 = HEAP8[10149 + i3 >> 0] | 0;
    i5 = i6 & 255;
    if (i5 >>> 0 < i4 >>> 0) {
     i3 = 0;
     i7 = i5;
     do {
      i3 = i7 | i3 << i10;
      i5 = HEAP32[i15 >> 2] | 0;
      if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
       HEAP32[i15 >> 2] = i5 + 1;
       i5 = HEAPU8[i5 >> 0] | 0;
      } else i5 = ___shgetc(i13) | 0;
      i6 = HEAP8[10149 + i5 >> 0] | 0;
      i7 = i6 & 255;
     } while (i3 >>> 0 < 134217728 & i7 >>> 0 < i4 >>> 0);
     i7 = 0;
    } else {
     i5 = i3;
     i7 = 0;
     i3 = 0;
    }
    i8 = _bitshift64Lshr(-1, -1, i10 | 0) | 0;
    i9 = tempRet0;
    if ((i6 & 255) >>> 0 >= i4 >>> 0 | (i7 >>> 0 > i9 >>> 0 | (i7 | 0) == (i9 | 0) & i3 >>> 0 > i8 >>> 0)) {
     i6 = i7;
     i10 = 72;
     break;
    } else i5 = i7;
    while (1) {
     i3 = _bitshift64Shl(i3 | 0, i5 | 0, i10 | 0) | 0;
     i7 = tempRet0;
     i3 = i6 & 255 | i3;
     i5 = HEAP32[i15 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i5 + 1;
      i5 = HEAPU8[i5 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i6 = HEAP8[10149 + i5 >> 0] | 0;
     if ((i6 & 255) >>> 0 >= i4 >>> 0 | (i7 >>> 0 > i9 >>> 0 | (i7 | 0) == (i9 | 0) & i3 >>> 0 > i8 >>> 0)) {
      i6 = i7;
      i10 = 72;
      break L63;
     } else i5 = i7;
    }
   }
   i6 = HEAP8[10149 + i3 >> 0] | 0;
   i5 = i6 & 255;
   if (i5 >>> 0 < i4 >>> 0) {
    i3 = 0;
    i7 = i5;
    do {
     i3 = i7 + (Math_imul(i3, i4) | 0) | 0;
     i5 = HEAP32[i15 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i5 + 1;
      i5 = HEAPU8[i5 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i6 = HEAP8[10149 + i5 >> 0] | 0;
     i7 = i6 & 255;
    } while (i3 >>> 0 < 119304647 & i7 >>> 0 < i4 >>> 0);
    i7 = 0;
   } else {
    i5 = i3;
    i3 = 0;
    i7 = 0;
   }
   if ((i6 & 255) >>> 0 < i4 >>> 0) {
    i10 = ___udivdi3(-1, -1, i4 | 0, 0) | 0;
    i11 = tempRet0;
    i9 = i7;
    while (1) {
     if (i9 >>> 0 > i11 >>> 0 | (i9 | 0) == (i11 | 0) & i3 >>> 0 > i10 >>> 0) {
      i6 = i9;
      i10 = 72;
      break L63;
     }
     i7 = ___muldi3(i3 | 0, i9 | 0, i4 | 0, 0) | 0;
     i8 = tempRet0;
     i6 = i6 & 255;
     if (i8 >>> 0 > 4294967295 | (i8 | 0) == -1 & i7 >>> 0 > ~i6 >>> 0) {
      i6 = i9;
      i10 = 72;
      break L63;
     }
     i3 = _i64Add(i6 | 0, 0, i7 | 0, i8 | 0) | 0;
     i7 = tempRet0;
     i5 = HEAP32[i15 >> 2] | 0;
     if (i5 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
      HEAP32[i15 >> 2] = i5 + 1;
      i5 = HEAPU8[i5 >> 0] | 0;
     } else i5 = ___shgetc(i13) | 0;
     i6 = HEAP8[10149 + i5 >> 0] | 0;
     if ((i6 & 255) >>> 0 >= i4 >>> 0) {
      i6 = i7;
      i10 = 72;
      break;
     } else i9 = i7;
    }
   } else {
    i6 = i7;
    i10 = 72;
   }
  } while (0);
  if ((i10 | 0) == 72) if ((HEAPU8[10149 + i5 >> 0] | 0) >>> 0 < i4 >>> 0) {
   do {
    i3 = HEAP32[i15 >> 2] | 0;
    if (i3 >>> 0 < (HEAP32[i14 >> 2] | 0) >>> 0) {
     HEAP32[i15 >> 2] = i3 + 1;
     i3 = HEAPU8[i3 >> 0] | 0;
    } else i3 = ___shgetc(i13) | 0;
   } while ((HEAPU8[10149 + i3 >> 0] | 0) >>> 0 < i4 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   i5 = (i1 & 1 | 0) == 0 & 0 == 0 ? i12 : 0;
   i4 = i2;
   i3 = i1;
  } else {
   i5 = i12;
   i4 = i6;
  }
  if (HEAP32[i14 >> 2] | 0) HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + -1;
  if (!(i4 >>> 0 < i2 >>> 0 | (i4 | 0) == (i2 | 0) & i3 >>> 0 < i1 >>> 0)) {
   if (!((i1 & 1 | 0) != 0 | 0 != 0 | (i5 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    i1 = _i64Add(i1 | 0, i2 | 0, -1, -1) | 0;
    i2 = tempRet0;
    break;
   }
   if (i4 >>> 0 > i2 >>> 0 | (i4 | 0) == (i2 | 0) & i3 >>> 0 > i1 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    break;
   }
  }
  i1 = ((i5 | 0) < 0) << 31 >> 31;
  i1 = _i64Subtract(i3 ^ i5 | 0, i4 ^ i1 | 0, i5 | 0, i1 | 0) | 0;
  i2 = tempRet0;
 } while (0);
 tempRet0 = i2;
 return i1 | 0;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri(i1, i2, i3, i6, i7, i8, i9, i5, i4, i11) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 i11 = i11 | 0;
 var i10 = 0, i12 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i12;
 if (i1) {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20604) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
  i1 = HEAP32[i10 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
  i1 = i4 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i4 >> 2] >> 0] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP8[i4 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i4 | 0, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  };
  HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  i1 = i5 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i5 | 0, 0);
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i4 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i4);
  };
  HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  HEAP8[i6 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i7 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP8[i9 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 } else {
  i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20596) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] & 127](i10, i2);
  i1 = HEAP32[i10 >> 2] | 0;
  HEAP8[i3 >> 0] = i1;
  HEAP8[i3 + 1 >> 0] = i1 >> 8;
  HEAP8[i3 + 2 >> 0] = i1 >> 16;
  HEAP8[i3 + 3 >> 0] = i1 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] & 127](i10, i2);
  i1 = i4 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i4 >> 2] >> 0] = 0;
   HEAP32[i4 + 4 >> 2] = 0;
  } else {
   HEAP8[i4 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i4 | 0, 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  };
  HEAP32[i4 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i4 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i10, i2);
  i1 = i5 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i5 >> 2] >> 0] = 0;
   HEAP32[i5 + 4 >> 2] = 0;
  } else {
   HEAP8[i5 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i5 | 0, 0);
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i4 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i4);
  };
  HEAP32[i5 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i5 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i5 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  HEAP8[i6 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 12 >> 2] & 127](i2) | 0;
  HEAP8[i7 >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 16 >> 2] & 127](i2) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 127](i10, i2);
  i1 = i8 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i8 >> 2] >> 0] = 0;
   HEAP32[i8 + 4 >> 2] = 0;
  } else {
   HEAP8[i8 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i8 | 0, 0);
  i7 = __THREW__;
  __THREW__ = 0;
  if (i7 & 1) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  };
  HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i8 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i8 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 127](i10, i2);
  i1 = i9 + 11 | 0;
  if ((HEAP8[i1 >> 0] | 0) < 0) {
   HEAP8[HEAP32[i9 >> 2] >> 0] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
  } else {
   HEAP8[i9 >> 0] = 0;
   HEAP8[i1 >> 0] = 0;
  }
  __THREW__ = 0;
  invoke_vii(47, i9 | 0, 0);
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i8 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i8);
  };
  HEAP32[i9 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i9 + 4 >> 2] = HEAP32[i10 + 4 >> 2];
  HEAP32[i9 + 8 >> 2] = HEAP32[i10 + 8 >> 2];
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i10 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i10);
  i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0;
 }
 HEAP32[i11 >> 2] = i1;
 STACKTOP = i12;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i22, i23, i2, i24, i20) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i2 = i2 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 i15 = i21;
 i13 = i21 + 208 | 0;
 i26 = i21 + 192 | 0;
 i25 = i21 + 180 | 0;
 i14 = i21 + 176 | 0;
 i10 = i21 + 16 | 0;
 i11 = i21 + 8 | 0;
 i12 = i21 + 4 | 0;
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __THREW__ = 0;
 i1 = invoke_ii(65, i2 | 0) | 0;
 i9 = __THREW__;
 __THREW__ = 0;
 do if (i9 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  i27 = 36;
 } else {
  HEAP32[i25 >> 2] = i1;
  __THREW__ = 0;
  i2 = invoke_iii(15, i25 | 0, 18916) | 0;
  i9 = __THREW__;
  __THREW__ = 0;
  if (!(i9 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] | 0, i2 | 0, 13558, 13584, i13 | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   HEAP32[i25 >> 2] = 0;
   HEAP32[i25 + 4 >> 2] = 0;
   HEAP32[i25 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i25 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i9 = i25 + 11 | 0;
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i25 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __THREW__ = 0;
   invoke_viii(6, i25 | 0, i1 | 0, 0);
   i8 = __THREW__;
   __THREW__ = 0;
   if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i25 >> 2] | 0 : i25;
    HEAP32[i14 >> 2] = i1;
    HEAP32[i11 >> 2] = i10;
    HEAP32[i12 >> 2] = 0;
    i7 = i25 + 4 | 0;
    i8 = i25 + 8 | 0;
    i3 = HEAP32[i22 >> 2] | 0;
    L21 : while (1) {
     if (i3) {
      i2 = HEAP32[i3 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
       i6 = __THREW__;
       __THREW__ = 0;
       if (i6 & 1) {
        i27 = 38;
        break;
       }
      } else i2 = HEAP32[i2 >> 2] | 0;
      if ((i2 | 0) == -1) {
       HEAP32[i22 >> 2] = 0;
       i6 = 0;
       i4 = 1;
      } else {
       i6 = i3;
       i4 = 0;
      }
     } else {
      i6 = 0;
      i4 = 1;
     }
     i3 = HEAP32[i23 >> 2] | 0;
     do if (i3) {
      i2 = HEAP32[i3 + 12 >> 2] | 0;
      if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
       i5 = __THREW__;
       __THREW__ = 0;
       if (i5 & 1) {
        i27 = 38;
        break L21;
       }
      } else i2 = HEAP32[i2 >> 2] | 0;
      if ((i2 | 0) != -1) if (i4) break; else {
       i27 = 48;
       break L21;
      } else {
       HEAP32[i23 >> 2] = 0;
       i27 = 26;
       break;
      }
     } else i27 = 26; while (0);
     if ((i27 | 0) == 26) {
      i27 = 0;
      if (i4) {
       i3 = 0;
       i27 = 48;
       break;
      } else i3 = 0;
     }
     i2 = HEAP8[i9 >> 0] | 0;
     i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
     if ((HEAP32[i14 >> 2] | 0) == (i1 + i2 | 0)) {
      __THREW__ = 0;
      invoke_viii(6, i25 | 0, i2 << 1 | 0, 0);
      i5 = __THREW__;
      __THREW__ = 0;
      if (i5 & 1) {
       i27 = 40;
       break;
      }
      if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
      __THREW__ = 0;
      invoke_viii(6, i25 | 0, i1 | 0, 0);
      i5 = __THREW__;
      __THREW__ = 0;
      if (i5 & 1) {
       i27 = 40;
       break;
      }
      i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i25 >> 2] | 0 : i25;
      HEAP32[i14 >> 2] = i1 + i2;
     }
     i4 = i6 + 12 | 0;
     i2 = HEAP32[i4 >> 2] | 0;
     i5 = i6 + 16 | 0;
     if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i28 = __THREW__;
      __THREW__ = 0;
      if (i28 & 1) {
       i27 = 38;
       break;
      }
     } else i2 = HEAP32[i2 >> 2] | 0;
     if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, 16, i1, i14, i12, 0, i26, i10, i11, i13) | 0) {
      i27 = 48;
      break;
     }
     i2 = HEAP32[i4 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0) | 0;
      i28 = __THREW__;
      __THREW__ = 0;
      if (i28 & 1) {
       i27 = 38;
       break;
      } else {
       i3 = i6;
       continue;
      }
     } else {
      HEAP32[i4 >> 2] = i2 + 4;
      i3 = i6;
      continue;
     }
    }
    if ((i27 | 0) == 38) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i27 | 0) == 40) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i27 | 0) == 48) {
     __THREW__ = 0;
     invoke_viii(6, i25 | 0, (HEAP32[i14 >> 2] | 0) - i1 | 0, 0);
     i28 = __THREW__;
     __THREW__ = 0;
     L62 : do if ((!(i28 & 1) ? (i16 = HEAP8[i9 >> 0] | 0, i17 = HEAP32[i25 >> 2] | 0, __THREW__ = 0, i18 = invoke_i(1) | 0, i28 = __THREW__, __THREW__ = 0, !(i28 & 1)) : 0) ? (__THREW__ = 0, HEAP32[i15 >> 2] = i20, i19 = invoke_iiiii(7, (i16 << 24 >> 24 < 0 ? i17 : i25) | 0, i18 | 0, 13591, i15 | 0) | 0, i28 = __THREW__, __THREW__ = 0, !(i28 & 1)) : 0) {
      if ((i19 | 0) != 1) HEAP32[i24 >> 2] = 4;
      if (i6) {
       i1 = HEAP32[i6 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
        i28 = __THREW__;
        __THREW__ = 0;
        if (i28 & 1) break;
       } else i1 = HEAP32[i1 >> 2] | 0;
       if ((i1 | 0) == -1) {
        HEAP32[i22 >> 2] = 0;
        i2 = 1;
       } else i2 = 0;
      } else i2 = 1;
      do if (i3) {
       i1 = HEAP32[i3 + 12 >> 2] | 0;
       if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i28 = __THREW__;
        __THREW__ = 0;
        if (i28 & 1) break L62;
       } else i1 = HEAP32[i1 >> 2] | 0;
       if ((i1 | 0) != -1) if (i2) break; else {
        i27 = 67;
        break;
       } else {
        HEAP32[i23 >> 2] = 0;
        i27 = 65;
        break;
       }
      } else i27 = 65; while (0);
      if ((i27 | 0) == 65 ? i2 : 0) i27 = 67;
      if ((i27 | 0) == 67) HEAP32[i24 >> 2] = HEAP32[i24 >> 2] | 2;
      i28 = HEAP32[i22 >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
      STACKTOP = i21;
      return i28 | 0;
     } while (0);
     i1 = ___cxa_find_matching_catch_2() | 0;
    }
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
   break;
  }
  i27 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  i1 = i27;
  i27 = 36;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv(i1, i22, i23, i2, i24, i20) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i2 = i2 | 0;
 i24 = i24 | 0;
 i20 = i20 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i15 = i21;
 i13 = i21 + 204 | 0;
 i26 = i21 + 192 | 0;
 i25 = i21 + 180 | 0;
 i14 = i21 + 176 | 0;
 i10 = i21 + 16 | 0;
 i11 = i21 + 8 | 0;
 i12 = i21 + 4 | 0;
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 __THREW__ = 0;
 i1 = invoke_ii(65, i2 | 0) | 0;
 i9 = __THREW__;
 __THREW__ = 0;
 do if (i9 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  i27 = 35;
 } else {
  HEAP32[i25 >> 2] = i1;
  __THREW__ = 0;
  i2 = invoke_iii(15, i25 | 0, 18884) | 0;
  i9 = __THREW__;
  __THREW__ = 0;
  if (!(i9 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] | 0, i2 | 0, 13558, 13584, i13 | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   HEAP32[i25 >> 2] = 0;
   HEAP32[i25 + 4 >> 2] = 0;
   HEAP32[i25 + 8 >> 2] = 0;
   i1 = 0;
   while (1) {
    if ((i1 | 0) == 3) break;
    HEAP32[i25 + (i1 << 2) >> 2] = 0;
    i1 = i1 + 1 | 0;
   }
   i9 = i25 + 11 | 0;
   if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i25 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
   __THREW__ = 0;
   invoke_viii(6, i25 | 0, i1 | 0, 0);
   i8 = __THREW__;
   __THREW__ = 0;
   if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i25 >> 2] | 0 : i25;
    HEAP32[i14 >> 2] = i2;
    HEAP32[i11 >> 2] = i10;
    HEAP32[i12 >> 2] = 0;
    i7 = i25 + 4 | 0;
    i8 = i25 + 8 | 0;
    i1 = HEAP32[i22 >> 2] | 0;
    L21 : while (1) {
     if (i1) {
      if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
       i6 = __THREW__;
       __THREW__ = 0;
       if (i6 & 1) {
        i27 = 37;
        break;
       }
       if ((i3 | 0) == -1) {
        HEAP32[i22 >> 2] = 0;
        i1 = 0;
       }
      }
     } else i1 = 0;
     i4 = (i1 | 0) == 0;
     i3 = HEAP32[i23 >> 2] | 0;
     do if (i3) {
      if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else {
       i27 = 47;
       break L21;
      }
      __THREW__ = 0;
      i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i6 = __THREW__;
      __THREW__ = 0;
      if (i6 & 1) {
       i27 = 37;
       break L21;
      }
      if ((i5 | 0) != -1) if (i4) break; else {
       i27 = 47;
       break L21;
      } else {
       HEAP32[i23 >> 2] = 0;
       i27 = 25;
       break;
      }
     } else i27 = 25; while (0);
     if ((i27 | 0) == 25) {
      i27 = 0;
      if (i4) {
       i3 = 0;
       i27 = 47;
       break;
      } else i3 = 0;
     }
     i4 = HEAP8[i9 >> 0] | 0;
     i4 = i4 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i4 & 255;
     if ((HEAP32[i14 >> 2] | 0) == (i2 + i4 | 0)) {
      __THREW__ = 0;
      invoke_viii(6, i25 | 0, i4 << 1 | 0, 0);
      i6 = __THREW__;
      __THREW__ = 0;
      if (i6 & 1) {
       i27 = 39;
       break;
      }
      if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
      __THREW__ = 0;
      invoke_viii(6, i25 | 0, i2 | 0, 0);
      i6 = __THREW__;
      __THREW__ = 0;
      if (i6 & 1) {
       i27 = 39;
       break;
      }
      i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i25 >> 2] | 0 : i25;
      HEAP32[i14 >> 2] = i2 + i4;
     }
     i5 = i1 + 12 | 0;
     i4 = HEAP32[i5 >> 2] | 0;
     i6 = i1 + 16 | 0;
     if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
      __THREW__ = 0;
      i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i28 = __THREW__;
      __THREW__ = 0;
      if (i28 & 1) {
       i27 = 37;
       break;
      }
     } else i4 = HEAPU8[i4 >> 0] | 0;
     if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, 16, i2, i14, i12, 0, i26, i10, i11, i13) | 0) {
      i27 = 47;
      break;
     }
     i3 = HEAP32[i5 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
      i28 = __THREW__;
      __THREW__ = 0;
      if (i28 & 1) {
       i27 = 37;
       break;
      } else continue;
     } else {
      HEAP32[i5 >> 2] = i3 + 1;
      continue;
     }
    }
    if ((i27 | 0) == 37) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i27 | 0) == 39) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i27 | 0) == 47) {
     __THREW__ = 0;
     invoke_viii(6, i25 | 0, (HEAP32[i14 >> 2] | 0) - i2 | 0, 0);
     i28 = __THREW__;
     __THREW__ = 0;
     L60 : do if ((!(i28 & 1) ? (i16 = HEAP8[i9 >> 0] | 0, i17 = HEAP32[i25 >> 2] | 0, __THREW__ = 0, i18 = invoke_i(1) | 0, i28 = __THREW__, __THREW__ = 0, !(i28 & 1)) : 0) ? (__THREW__ = 0, HEAP32[i15 >> 2] = i20, i19 = invoke_iiiii(7, (i16 << 24 >> 24 < 0 ? i17 : i25) | 0, i18 | 0, 13591, i15 | 0) | 0, i28 = __THREW__, __THREW__ = 0, !(i28 & 1)) : 0) {
      if ((i19 | 0) != 1) HEAP32[i24 >> 2] = 4;
      if (i1) {
       if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
        i28 = __THREW__;
        __THREW__ = 0;
        if (i28 & 1) break;
        if ((i2 | 0) == -1) {
         HEAP32[i22 >> 2] = 0;
         i1 = 0;
        }
       }
      } else i1 = 0;
      i2 = (i1 | 0) == 0;
      L73 : do if (i3) {
       do if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
        i28 = __THREW__;
        __THREW__ = 0;
        if (i28 & 1) break L60;
        if ((i1 | 0) != -1) break;
        HEAP32[i23 >> 2] = 0;
        i27 = 63;
        break L73;
       } while (0);
       if (!i2) i27 = 64;
      } else i27 = 63; while (0);
      if ((i27 | 0) == 63 ? i2 : 0) i27 = 64;
      if ((i27 | 0) == 64) HEAP32[i24 >> 2] = HEAP32[i24 >> 2] | 2;
      i28 = HEAP32[i22 >> 2] | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
      STACKTOP = i21;
      return i28 | 0;
     } while (0);
     i1 = ___cxa_find_matching_catch_2() | 0;
    }
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
   break;
  }
  i27 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  i1 = i27;
  i27 = 35;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE(i14, i15, i16, i17, i18, i19, i1) {
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i20 = 0, i21 = 0, i22 = 0, i23 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i22 = i21;
 i20 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18916) | 0;
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18924) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i22, i12);
 HEAP32[i19 >> 2] = i17;
 i1 = HEAP8[i14 >> 0] | 0;
 L1 : do switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   __THREW__ = 0;
   i1 = invoke_iii(HEAP32[(HEAP32[i20 >> 2] | 0) + 44 >> 2] | 0, i20 | 0, i1 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   if (i13 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L1;
   } else {
    i4 = HEAP32[i19 >> 2] | 0;
    HEAP32[i19 >> 2] = i4 + 4;
    HEAP32[i4 >> 2] = i1;
    i4 = i14 + 1 | 0;
    i11 = 5;
    break L1;
   }
  }
 default:
  {
   i4 = i14;
   i11 = 5;
  }
 } while (0);
 L6 : do if ((i11 | 0) == 5) {
  i13 = i16;
  L8 : do if ((i13 - i4 | 0) > 1 ? (HEAP8[i4 >> 0] | 0) == 48 : 0) {
   i1 = i4 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     i2 = i4;
     i11 = 20;
     break L8;
    }
   }
   __THREW__ = 0;
   i2 = invoke_iii(HEAP32[(HEAP32[i20 >> 2] | 0) + 44 >> 2] | 0, i20 | 0, 48) | 0;
   i10 = __THREW__;
   __THREW__ = 0;
   if (!(i10 & 1) ? (i5 = HEAP32[i19 >> 2] | 0, HEAP32[i19 >> 2] = i5 + 4, HEAP32[i5 >> 2] = i2, i5 = i4 + 2 | 0, __THREW__ = 0, i3 = invoke_iii(HEAP32[(HEAP32[i20 >> 2] | 0) + 44 >> 2] | 0, i20 | 0, HEAP8[i1 >> 0] | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i2 = HEAP32[i19 >> 2] | 0;
    HEAP32[i19 >> 2] = i2 + 4;
    HEAP32[i2 >> 2] = i3;
    i2 = i5;
    while (1) {
     if (i2 >>> 0 >= i16 >>> 0) {
      i4 = i5;
      i11 = 25;
      break L8;
     }
     i1 = HEAP8[i2 >> 0] | 0;
     __THREW__ = 0;
     i3 = invoke_i(1) | 0;
     i11 = __THREW__;
     __THREW__ = 0;
     if (i11 & 1) break;
     __THREW__ = 0;
     i1 = invoke_iii(16, i1 << 24 >> 24 | 0, i3 | 0) | 0;
     i11 = __THREW__;
     __THREW__ = 0;
     if (i11 & 1) break;
     if (!i1) {
      i4 = i5;
      i11 = 25;
      break L8;
     }
     i2 = i2 + 1 | 0;
    }
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L6;
   }
  } else {
   i2 = i4;
   i11 = 20;
  } while (0);
  L21 : do if ((i11 | 0) == 20) {
   while (1) {
    if (i2 >>> 0 >= i16 >>> 0) {
     i11 = 25;
     break L21;
    }
    i1 = HEAP8[i2 >> 0] | 0;
    __THREW__ = 0;
    i3 = invoke_i(1) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) break;
    __THREW__ = 0;
    i1 = invoke_iii(17, i1 << 24 >> 24 | 0, i3 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) break;
    if (!i1) {
     i11 = 25;
     break L21;
    }
    i2 = i2 + 1 | 0;
    i11 = 20;
   }
   i1 = ___cxa_find_matching_catch_2() | 0;
   break L6;
  } while (0);
  L29 : do if ((i11 | 0) == 25) {
   i9 = i22 + 11 | 0;
   i8 = HEAP8[i9 >> 0] | 0;
   i10 = i22 + 4 | 0;
   L31 : do if ((i8 << 24 >> 24 < 0 ? HEAP32[i10 >> 2] | 0 : i8 & 255) | 0) {
    L35 : do if ((i4 | 0) != (i2 | 0)) {
     i1 = i2;
     i3 = i4;
     while (1) {
      i1 = i1 + -1 | 0;
      if (i3 >>> 0 >= i1 >>> 0) break L35;
      i8 = HEAP8[i3 >> 0] | 0;
      HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
      HEAP8[i1 >> 0] = i8;
      i3 = i3 + 1 | 0;
     }
    } while (0);
    __THREW__ = 0;
    i8 = invoke_ii(HEAP32[(HEAP32[i12 >> 2] | 0) + 16 >> 2] | 0, i12 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) break L29;
    i7 = i4;
    i3 = 0;
    i5 = 0;
    while (1) {
     if (i7 >>> 0 >= i2 >>> 0) break;
     i1 = HEAP8[i9 >> 0] | 0;
     i6 = i1 << 24 >> 24 < 0;
     i23 = HEAP8[(i6 ? HEAP32[i22 >> 2] | 0 : i22) + i3 >> 0] | 0;
     if (i23 << 24 >> 24 > 0 & (i5 | 0) == (i23 << 24 >> 24 | 0)) {
      i5 = HEAP32[i19 >> 2] | 0;
      HEAP32[i19 >> 2] = i5 + 4;
      HEAP32[i5 >> 2] = i8;
      i3 = (i3 >>> 0 < ((i6 ? HEAP32[i10 >> 2] | 0 : i1 & 255) + -1 | 0) >>> 0 & 1) + i3 | 0;
      i5 = 0;
     }
     __THREW__ = 0;
     i1 = invoke_iii(HEAP32[(HEAP32[i20 >> 2] | 0) + 44 >> 2] | 0, i20 | 0, HEAP8[i7 >> 0] | 0) | 0;
     i23 = __THREW__;
     __THREW__ = 0;
     if (i23 & 1) {
      i11 = 40;
      break;
     }
     i23 = HEAP32[i19 >> 2] | 0;
     HEAP32[i19 >> 2] = i23 + 4;
     HEAP32[i23 >> 2] = i1;
     i7 = i7 + 1 | 0;
     i5 = i5 + 1 | 0;
    }
    if ((i11 | 0) == 40) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L6;
    }
    i1 = i17 + (i4 - i14 << 2) | 0;
    i4 = HEAP32[i19 >> 2] | 0;
    if ((i1 | 0) == (i4 | 0)) i3 = i20; else {
     i3 = i4;
     while (1) {
      i3 = i3 + -4 | 0;
      if (i1 >>> 0 >= i3 >>> 0) {
       i3 = i20;
       i1 = i4;
       break L31;
      }
      i23 = HEAP32[i1 >> 2] | 0;
      HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
      HEAP32[i3 >> 2] = i23;
      i1 = i1 + 4 | 0;
     }
    }
   } else {
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[i20 >> 2] | 0) + 48 >> 2] | 0, i20 | 0, i4 | 0, i2 | 0, HEAP32[i19 >> 2] | 0) | 0;
    i23 = __THREW__;
    __THREW__ = 0;
    if (i23 & 1) break L29;
    i1 = (HEAP32[i19 >> 2] | 0) + (i2 - i4 << 2) | 0;
    HEAP32[i19 >> 2] = i1;
    i3 = i20;
   } while (0);
   while (1) {
    if (i2 >>> 0 >= i16 >>> 0) break;
    i1 = HEAP8[i2 >> 0] | 0;
    if (i1 << 24 >> 24 == 46) {
     i11 = 45;
     break;
    }
    __THREW__ = 0;
    i1 = invoke_iii(HEAP32[(HEAP32[i3 >> 2] | 0) + 44 >> 2] | 0, i20 | 0, i1 | 0) | 0;
    i23 = __THREW__;
    __THREW__ = 0;
    if (i23 & 1) {
     i11 = 15;
     break;
    }
    i10 = HEAP32[i19 >> 2] | 0;
    i23 = i10 + 4 | 0;
    HEAP32[i19 >> 2] = i23;
    HEAP32[i10 >> 2] = i1;
    i2 = i2 + 1 | 0;
    i1 = i23;
   }
   if ((i11 | 0) == 15) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L6;
   }
   if ((i11 | 0) == 45) {
    __THREW__ = 0;
    i1 = invoke_ii(HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] | 0, i12 | 0) | 0;
    i23 = __THREW__;
    __THREW__ = 0;
    if (i23 & 1) break;
    i12 = HEAP32[i19 >> 2] | 0;
    i23 = i12 + 4 | 0;
    HEAP32[i19 >> 2] = i23;
    HEAP32[i12 >> 2] = i1;
    i2 = i2 + 1 | 0;
    i1 = i23;
   }
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[i20 >> 2] | 0) + 48 >> 2] | 0, i20 | 0, i2 | 0, i16 | 0, i1 | 0) | 0;
   i23 = __THREW__;
   __THREW__ = 0;
   if (!(i23 & 1)) {
    i23 = (HEAP32[i19 >> 2] | 0) + (i13 - i2 << 2) | 0;
    HEAP32[i19 >> 2] = i23;
    HEAP32[i18 >> 2] = (i15 | 0) == (i16 | 0) ? i23 : i17 + (i15 - i14 << 2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
    STACKTOP = i21;
    return;
   }
  } while (0);
  i1 = ___cxa_find_matching_catch_2() | 0;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i22);
 ___resumeException(i1 | 0);
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i13, i14, i15, i16, i17, i18, i1) {
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i18 = i18 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i21 = i20;
 i19 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18884) | 0;
 i12 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18900) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i21, i12);
 HEAP32[i18 >> 2] = i16;
 i1 = HEAP8[i13 >> 0] | 0;
 L1 : do switch (i1 << 24 >> 24) {
 case 43:
 case 45:
  {
   __THREW__ = 0;
   i1 = invoke_iii(HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] | 0, i19 | 0, i1 | 0) | 0;
   i11 = __THREW__;
   __THREW__ = 0;
   if (i11 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L1;
   } else {
    i4 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i1;
    i4 = i13 + 1 | 0;
    i10 = 5;
    break L1;
   }
  }
 default:
  {
   i4 = i13;
   i10 = 5;
  }
 } while (0);
 L6 : do if ((i10 | 0) == 5) {
  i11 = i15;
  L8 : do if ((i11 - i4 | 0) > 1 ? (HEAP8[i4 >> 0] | 0) == 48 : 0) {
   i1 = i4 + 1 | 0;
   switch (HEAP8[i1 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     i1 = i4;
     i10 = 20;
     break L8;
    }
   }
   __THREW__ = 0;
   i2 = invoke_iii(HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] | 0, i19 | 0, 48) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (!(i9 & 1) ? (i5 = HEAP32[i18 >> 2] | 0, HEAP32[i18 >> 2] = i5 + 1, HEAP8[i5 >> 0] = i2, i5 = i4 + 2 | 0, __THREW__ = 0, i3 = invoke_iii(HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] | 0, i19 | 0, HEAP8[i1 >> 0] | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
    i1 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
    i1 = i5;
    while (1) {
     if (i1 >>> 0 >= i15 >>> 0) {
      i4 = i5;
      i10 = 25;
      break L8;
     }
     i2 = HEAP8[i1 >> 0] | 0;
     __THREW__ = 0;
     i3 = invoke_i(1) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) break;
     __THREW__ = 0;
     i2 = invoke_iii(16, i2 << 24 >> 24 | 0, i3 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) break;
     if (!i2) {
      i4 = i5;
      i10 = 25;
      break L8;
     }
     i1 = i1 + 1 | 0;
    }
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L6;
   }
  } else {
   i1 = i4;
   i10 = 20;
  } while (0);
  L21 : do if ((i10 | 0) == 20) {
   while (1) {
    if (i1 >>> 0 >= i15 >>> 0) {
     i10 = 25;
     break L21;
    }
    i2 = HEAP8[i1 >> 0] | 0;
    __THREW__ = 0;
    i3 = invoke_i(1) | 0;
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) break;
    __THREW__ = 0;
    i2 = invoke_iii(17, i2 << 24 >> 24 | 0, i3 | 0) | 0;
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) break;
    if (!i2) {
     i10 = 25;
     break L21;
    }
    i1 = i1 + 1 | 0;
    i10 = 20;
   }
   i1 = ___cxa_find_matching_catch_2() | 0;
   break L6;
  } while (0);
  L29 : do if ((i10 | 0) == 25) {
   i8 = i21 + 11 | 0;
   i7 = HEAP8[i8 >> 0] | 0;
   i9 = i21 + 4 | 0;
   L31 : do if ((i7 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i7 & 255) | 0) {
    L35 : do if ((i4 | 0) != (i1 | 0)) {
     i2 = i1;
     i3 = i4;
     while (1) {
      i2 = i2 + -1 | 0;
      if (i3 >>> 0 >= i2 >>> 0) break L35;
      i7 = HEAP8[i3 >> 0] | 0;
      HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
      HEAP8[i2 >> 0] = i7;
      i3 = i3 + 1 | 0;
     }
    } while (0);
    __THREW__ = 0;
    i7 = invoke_ii(HEAP32[(HEAP32[i12 >> 2] | 0) + 16 >> 2] | 0, i12 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) break L29;
    i6 = i4;
    i2 = 0;
    i3 = 0;
    while (1) {
     if (i6 >>> 0 >= i1 >>> 0) break;
     i5 = HEAP8[((HEAP8[i8 >> 0] | 0) < 0 ? HEAP32[i21 >> 2] | 0 : i21) + i2 >> 0] | 0;
     if (i5 << 24 >> 24 > 0 & (i3 | 0) == (i5 << 24 >> 24 | 0)) {
      i3 = HEAP32[i18 >> 2] | 0;
      HEAP32[i18 >> 2] = i3 + 1;
      HEAP8[i3 >> 0] = i7;
      i3 = HEAP8[i8 >> 0] | 0;
      i2 = (i2 >>> 0 < ((i3 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i3 & 255) + -1 | 0) >>> 0 & 1) + i2 | 0;
      i3 = 0;
     }
     __THREW__ = 0;
     i5 = invoke_iii(HEAP32[(HEAP32[i19 >> 2] | 0) + 28 >> 2] | 0, i19 | 0, HEAP8[i6 >> 0] | 0) | 0;
     i22 = __THREW__;
     __THREW__ = 0;
     if (i22 & 1) {
      i10 = 40;
      break;
     }
     i22 = HEAP32[i18 >> 2] | 0;
     HEAP32[i18 >> 2] = i22 + 1;
     HEAP8[i22 >> 0] = i5;
     i6 = i6 + 1 | 0;
     i3 = i3 + 1 | 0;
    }
    if ((i10 | 0) == 40) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L6;
    }
    i3 = i16 + (i4 - i13) | 0;
    i2 = HEAP32[i18 >> 2] | 0;
    if ((i3 | 0) == (i2 | 0)) i3 = i19; else while (1) {
     i2 = i2 + -1 | 0;
     if (i3 >>> 0 >= i2 >>> 0) {
      i3 = i19;
      break L31;
     }
     i22 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i22;
     i3 = i3 + 1 | 0;
    }
   } else {
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[i19 >> 2] | 0) + 32 >> 2] | 0, i19 | 0, i4 | 0, i1 | 0, HEAP32[i18 >> 2] | 0) | 0;
    i22 = __THREW__;
    __THREW__ = 0;
    if (i22 & 1) break L29;
    HEAP32[i18 >> 2] = (HEAP32[i18 >> 2] | 0) + (i1 - i4);
    i3 = i19;
   } while (0);
   while (1) {
    if (i1 >>> 0 >= i15 >>> 0) break;
    i2 = HEAP8[i1 >> 0] | 0;
    if (i2 << 24 >> 24 == 46) {
     i10 = 45;
     break;
    }
    __THREW__ = 0;
    i2 = invoke_iii(HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] | 0, i19 | 0, i2 | 0) | 0;
    i22 = __THREW__;
    __THREW__ = 0;
    if (i22 & 1) {
     i10 = 15;
     break;
    }
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 1;
    HEAP8[i22 >> 0] = i2;
    i1 = i1 + 1 | 0;
   }
   if ((i10 | 0) == 15) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L6;
   }
   if ((i10 | 0) == 45) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] | 0, i12 | 0) | 0;
    i22 = __THREW__;
    __THREW__ = 0;
    if (i22 & 1) break;
    i22 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = i22 + 1;
    HEAP8[i22 >> 0] = i2;
    i1 = i1 + 1 | 0;
   }
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[i19 >> 2] | 0) + 32 >> 2] | 0, i19 | 0, i1 | 0, i15 | 0, HEAP32[i18 >> 2] | 0) | 0;
   i22 = __THREW__;
   __THREW__ = 0;
   if (!(i22 & 1)) {
    i22 = (HEAP32[i18 >> 2] | 0) + (i11 - i1) | 0;
    HEAP32[i18 >> 2] = i22;
    HEAP32[i17 >> 2] = (i14 | 0) == (i15 | 0) ? i22 : i16 + (i14 - i13) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
    STACKTOP = i20;
    return;
   }
  } while (0);
  i1 = ___cxa_find_matching_catch_2() | 0;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 ___resumeException(i1 | 0);
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i11, i18, i19, i13, i20, i14, i1, i15) {
 i11 = i11 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 i13 = i13 | 0;
 i20 = i20 | 0;
 i14 = i14 | 0;
 i1 = i1 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i16 = 0, i17 = 0, i21 = 0, i22 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i22 + 12 | 0;
 i9 = i22 + 8 | 0;
 i16 = i22 + 4 | 0;
 i17 = i22;
 i2 = __ZNKSt3__28ios_base6getlocEv(i13) | 0;
 HEAP32[i10 >> 2] = i2;
 __THREW__ = 0;
 i12 = invoke_iii(15, i10 | 0, 18916) | 0;
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) {
  i22 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i2) | 0;
  ___resumeException(i22 | 0);
 }
 __ZNSt3__214__shared_count16__release_sharedEv(i2) | 0;
 HEAP32[i20 >> 2] = 0;
 i2 = 0;
 L4 : while (1) {
  i8 = (i1 | 0) != (i15 | 0);
  i3 = i2;
  while (1) {
   i2 = HEAP32[i18 >> 2] | 0;
   if (!(i8 & (i3 | 0) == 0)) break L4;
   i4 = i2;
   if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i18 >> 2] = 0;
     i2 = 0;
     i6 = 1;
     i7 = 0;
    } else {
     i6 = 0;
     i7 = i4;
    }
   } else {
    i2 = 0;
    i6 = 1;
    i7 = i4;
   }
   i5 = HEAP32[i19 >> 2] | 0;
   i3 = i5;
   do if (i5) {
    i4 = HEAP32[i5 + 12 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i4 = HEAP32[i4 >> 2] | 0;
    if ((i4 | 0) != -1) if (i6) break; else {
     i21 = 19;
     break L4;
    } else {
     HEAP32[i19 >> 2] = 0;
     i3 = 0;
     i21 = 17;
     break;
    }
   } else i21 = 17; while (0);
   if ((i21 | 0) == 17) {
    i21 = 0;
    if (i6) {
     i21 = 19;
     break L4;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 52 >> 2] & 63](i12, HEAP32[i1 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    i21 = 22;
    break;
   }
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 63](i12, 8192, HEAP32[i1 >> 2] | 0) | 0) {
    i21 = 30;
    break;
   }
   i4 = i2 + 12 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   i5 = i2 + 16 | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = HEAP32[i3 >> 2] | 0;
   i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, i3) | 0;
   if ((i7 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 28 >> 2] & 31](i12, HEAP32[i1 >> 2] | 0) | 0)) {
    i21 = 58;
    break;
   }
   HEAP32[i20 >> 2] = 4;
   i3 = 4;
  }
  L36 : do if ((i21 | 0) == 22) {
   i21 = 0;
   i6 = i1 + 4 | 0;
   if ((i6 | 0) == (i15 | 0)) {
    i21 = 23;
    break L4;
   }
   i4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 52 >> 2] & 63](i12, HEAP32[i6 >> 2] | 0, 0) | 0;
   switch (i4 << 24 >> 24) {
   case 48:
   case 69:
    {
     i1 = i1 + 8 | 0;
     if ((i1 | 0) == (i15 | 0)) {
      i21 = 28;
      break L4;
     }
     i5 = i4;
     i2 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 52 >> 2] & 63](i12, HEAP32[i1 >> 2] | 0, 0) | 0;
     i1 = i6;
     break;
    }
   default:
    {
     i5 = 0;
     i2 = i4;
    }
   }
   i8 = HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i16 >> 2] = i7;
   HEAP32[i17 >> 2] = i3;
   HEAP32[i9 >> 2] = HEAP32[i16 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i18 >> 2] = FUNCTION_TABLE_iiiiiiiii[i8 & 15](i11, i9, i10, i13, i20, i14, i2, i5) | 0;
   i1 = i1 + 8 | 0;
  } else if ((i21 | 0) == 30) {
   while (1) {
    i21 = 0;
    i1 = i1 + 4 | 0;
    if ((i1 | 0) == (i15 | 0)) {
     i1 = i15;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 63](i12, 8192, HEAP32[i1 >> 2] | 0) | 0) i21 = 30; else break;
   }
   i3 = i5;
   i6 = i5;
   while (1) {
    if (i2) {
     i4 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) == -1) {
      HEAP32[i18 >> 2] = 0;
      i5 = 1;
      i2 = 0;
     } else i5 = 0;
    } else {
     i5 = 1;
     i2 = 0;
    }
    do if (i6) {
     i4 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) i4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] & 127](i6) | 0; else i4 = HEAP32[i4 >> 2] | 0;
     if ((i4 | 0) != -1) if (i5 ^ (i3 | 0) == 0) {
      i7 = i3;
      i6 = i3;
      break;
     } else break L36; else {
      HEAP32[i19 >> 2] = 0;
      i3 = 0;
      i21 = 45;
      break;
     }
    } else i21 = 45; while (0);
    if ((i21 | 0) == 45) {
     i21 = 0;
     if (i5) break L36; else {
      i7 = i3;
      i6 = 0;
     }
    }
    i4 = i2 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i5 = i2 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i3 = HEAP32[i3 >> 2] | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 63](i12, 8192, i3) | 0)) break L36;
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i4 >> 2] = i3 + 4;
     i3 = i7;
     continue;
    }
   }
  } else if ((i21 | 0) == 58) {
   i21 = 0;
   i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0; else HEAP32[i4 >> 2] = i3 + 4;
   i1 = i1 + 4 | 0;
  } while (0);
  i2 = HEAP32[i20 >> 2] | 0;
 }
 if ((i21 | 0) == 19) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 23) HEAP32[i20 >> 2] = 4; else if ((i21 | 0) == 28) HEAP32[i20 >> 2] = 4;
 if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i18 >> 2] = 0;
   i2 = 0;
   i4 = 1;
  } else i4 = 0;
 } else {
  i2 = 0;
  i4 = 1;
 }
 i1 = HEAP32[i19 >> 2] | 0;
 do if (i1) {
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i3 >> 2] | 0;
  if ((i1 | 0) != -1) if (i4) break; else {
   i21 = 78;
   break;
  } else {
   HEAP32[i19 >> 2] = 0;
   i21 = 76;
   break;
  }
 } else i21 = 76; while (0);
 if ((i21 | 0) == 76 ? i4 : 0) i21 = 78;
 if ((i21 | 0) == 78) HEAP32[i20 >> 2] = HEAP32[i20 >> 2] | 2;
 STACKTOP = i22;
 return i2 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i15, i16, i1, i18, i13, i19, i14) {
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 i13 = i13 | 0;
 i19 = i19 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i17 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i2 = i20;
 i4 = (i18 - i1 | 0) / 12 | 0;
 do if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if ((i3 | 0) == 0 ? (__THREW__ = 0, invoke_v(3), i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   break;
  }
  i2 = i3;
  i17 = i3;
  i7 = 6;
 } else {
  i17 = 0;
  i7 = 6;
 } while (0);
 if ((i7 | 0) == 6) {
  i6 = i1;
  i7 = i2;
  i3 = 0;
  while (1) {
   if ((i6 | 0) == (i18 | 0)) break;
   i5 = HEAP8[i6 + 8 + 3 >> 0] | 0;
   if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
   if (!i5) {
    HEAP8[i7 >> 0] = 2;
    i3 = i3 + 1 | 0;
    i4 = i4 + -1 | 0;
   } else HEAP8[i7 >> 0] = 1;
   i6 = i6 + 12 | 0;
   i7 = i7 + 1 | 0;
  }
  i12 = 0;
  i10 = i3;
  L21 : while (1) {
   i3 = HEAP32[i15 >> 2] | 0;
   do if (i3) {
    i5 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i11 = __THREW__;
     __THREW__ = 0;
     if (i11 & 1) {
      i7 = 43;
      break L21;
     }
    } else i3 = HEAP32[i5 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i15 >> 2] = 0;
     i7 = 1;
     break;
    } else {
     i7 = (HEAP32[i15 >> 2] | 0) == 0;
     break;
    }
   } else i7 = 1; while (0);
   i5 = HEAP32[i16 >> 2] | 0;
   if (i5) {
    i3 = HEAP32[i5 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] | 0, i5 | 0) | 0;
     i11 = __THREW__;
     __THREW__ = 0;
     if (i11 & 1) {
      i7 = 43;
      break;
     }
    } else i3 = HEAP32[i3 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i16 >> 2] = 0;
     i5 = 0;
     i3 = 1;
    } else i3 = 0;
   } else {
    i5 = 0;
    i3 = 1;
   }
   i6 = HEAP32[i15 >> 2] | 0;
   if (!((i4 | 0) != 0 & (i7 ^ i3))) {
    i7 = 30;
    break;
   }
   i3 = HEAP32[i6 + 12 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) {
     i7 = 43;
     break;
    }
   } else i3 = HEAP32[i3 >> 2] | 0;
   if (!i14) {
    __THREW__ = 0;
    i3 = invoke_iii(HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] | 0, i13 | 0, i3 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) {
     i7 = 49;
     break;
    }
   }
   i11 = i12 + 1 | 0;
   i8 = i1;
   i7 = 0;
   i9 = i2;
   while (1) {
    if ((i8 | 0) == (i18 | 0)) break;
    do if ((HEAP8[i9 >> 0] | 0) == 1) {
     i6 = i8 + 8 + 3 | 0;
     if ((HEAP8[i6 >> 0] | 0) < 0) i5 = HEAP32[i8 >> 2] | 0; else i5 = i8;
     i5 = HEAP32[i5 + (i12 << 2) >> 2] | 0;
     if (!i14) {
      __THREW__ = 0;
      i5 = invoke_iii(HEAP32[(HEAP32[i13 >> 2] | 0) + 28 >> 2] | 0, i13 | 0, i5 | 0) | 0;
      i21 = __THREW__;
      __THREW__ = 0;
      if (i21 & 1) {
       i7 = 59;
       break L21;
      }
     }
     if ((i3 | 0) != (i5 | 0)) {
      HEAP8[i9 >> 0] = 0;
      i5 = i7;
      i6 = i10;
      i4 = i4 + -1 | 0;
      break;
     }
     i5 = HEAP8[i6 >> 0] | 0;
     if (i5 << 24 >> 24 < 0) i5 = HEAP32[i8 + 4 >> 2] | 0; else i5 = i5 & 255;
     if ((i5 | 0) == (i11 | 0)) {
      HEAP8[i9 >> 0] = 2;
      i5 = 1;
      i6 = i10 + 1 | 0;
      i4 = i4 + -1 | 0;
     } else {
      i5 = 1;
      i6 = i10;
     }
    } else {
     i5 = i7;
     i6 = i10;
    } while (0);
    i8 = i8 + 12 | 0;
    i7 = i5;
    i9 = i9 + 1 | 0;
    i10 = i6;
   }
   if (!i7) {
    i12 = i11;
    continue;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   i5 = i3 + 12 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] | 0, i3 | 0) | 0;
    i21 = __THREW__;
    __THREW__ = 0;
    if (i21 & 1) {
     i7 = 73;
     break;
    }
   } else HEAP32[i5 >> 2] = i6 + 4;
   if ((i10 + i4 | 0) >>> 0 > 1) {
    i6 = i1;
    i7 = i2;
    i3 = i10;
   } else {
    i12 = i11;
    continue;
   }
   while (1) {
    if ((i6 | 0) == (i18 | 0)) {
     i12 = i11;
     i10 = i3;
     continue L21;
    }
    if ((HEAP8[i7 >> 0] | 0) == 2) {
     i5 = HEAP8[i6 + 8 + 3 >> 0] | 0;
     if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
     if ((i5 | 0) != (i11 | 0)) {
      HEAP8[i7 >> 0] = 0;
      i3 = i3 + -1 | 0;
     }
    }
    i6 = i6 + 12 | 0;
    i7 = i7 + 1 | 0;
   }
  }
  if ((i7 | 0) == 30) {
   do if (i6) {
    i3 = HEAP32[i6 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
     i21 = __THREW__;
     __THREW__ = 0;
     if (i21 & 1) break;
    } else i3 = HEAP32[i3 >> 2] | 0;
    if ((i3 | 0) == -1) {
     HEAP32[i15 >> 2] = 0;
     i4 = 1;
     i7 = 37;
     break;
    } else {
     i4 = (HEAP32[i15 >> 2] | 0) == 0;
     i7 = 37;
     break;
    }
   } else {
    i4 = 1;
    i7 = 37;
   } while (0);
   L102 : do if ((i7 | 0) == 37) {
    do if (i5) {
     i3 = HEAP32[i5 + 12 >> 2] | 0;
     if ((i3 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i3 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] | 0, i5 | 0) | 0;
      i21 = __THREW__;
      __THREW__ = 0;
      if (i21 & 1) break L102;
     } else i3 = HEAP32[i3 >> 2] | 0;
     if ((i3 | 0) != -1) if (i4) break; else {
      i7 = 83;
      break;
     } else {
      HEAP32[i16 >> 2] = 0;
      i7 = 81;
      break;
     }
    } else i7 = 81; while (0);
    if ((i7 | 0) == 81) if (i4) i7 = 83;
    if ((i7 | 0) == 83) HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 2;
    while (1) {
     if ((i1 | 0) == (i18 | 0)) {
      i7 = 88;
      break;
     }
     if ((HEAP8[i2 >> 0] | 0) == 2) break;
     i1 = i1 + 12 | 0;
     i2 = i2 + 1 | 0;
    }
    if ((i7 | 0) == 88) {
     HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 4;
     i1 = i18;
    }
    if (i17 | 0) _free(i17);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  } else if ((i7 | 0) == 43) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i7 | 0) == 49) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i7 | 0) == 59) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i7 | 0) == 73) i1 = ___cxa_find_matching_catch_2() | 0;
  if (i17) _free(i17);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i11, i19, i20, i13, i21, i14, i2, i15) {
 i11 = i11 | 0;
 i19 = i19 | 0;
 i20 = i20 | 0;
 i13 = i13 | 0;
 i21 = i21 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i15 = i15 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i16 = 0, i17 = 0, i18 = 0, i22 = 0, i23 = 0;
 i23 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i10 = i23 + 12 | 0;
 i9 = i23 + 8 | 0;
 i17 = i23 + 4 | 0;
 i18 = i23;
 i1 = __ZNKSt3__28ios_base6getlocEv(i13) | 0;
 HEAP32[i10 >> 2] = i1;
 __THREW__ = 0;
 i12 = invoke_iii(15, i10 | 0, 18884) | 0;
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) {
  i23 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i23 | 0);
 }
 __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
 HEAP32[i21 >> 2] = 0;
 i8 = i12 + 8 | 0;
 i1 = 0;
 L4 : while (1) {
  i7 = (i2 | 0) != (i15 | 0);
  i3 = i1;
  while (1) {
   i1 = HEAP32[i19 >> 2] | 0;
   if (!(i7 & (i3 | 0) == 0)) break L4;
   i3 = i1;
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
     HEAP32[i19 >> 2] = 0;
     i1 = 0;
     i3 = 0;
    }
   } else i1 = 0;
   i6 = (i1 | 0) == 0;
   i5 = HEAP32[i20 >> 2] | 0;
   i4 = i5;
   do if (i5) {
    if ((HEAP32[i5 + 12 >> 2] | 0) == (HEAP32[i5 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) == -1 : 0) {
     HEAP32[i20 >> 2] = 0;
     i4 = 0;
     i22 = 14;
     break;
    }
    if (!i6) {
     i22 = 15;
     break L4;
    }
   } else i22 = 14; while (0);
   if ((i22 | 0) == 14) {
    i22 = 0;
    if (i6) {
     i22 = 15;
     break L4;
    } else i5 = 0;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 63](i12, HEAP8[i2 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    i22 = 18;
    break;
   }
   i3 = HEAP8[i2 >> 0] | 0;
   if (i3 << 24 >> 24 > -1 ? (i16 = HEAP32[i8 >> 2] | 0, HEAP16[i16 + (i3 << 24 >> 24 << 1) >> 1] & 8192) : 0) {
    i22 = 27;
    break;
   }
   i4 = i1 + 12 | 0;
   i3 = HEAP32[i4 >> 2] | 0;
   i5 = i1 + 16 | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
   i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, i3 & 255) | 0;
   if (i6 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i12 >> 2] | 0) + 12 >> 2] & 31](i12, HEAP8[i2 >> 0] | 0) | 0) << 24 >> 24) {
    i22 = 54;
    break;
   }
   HEAP32[i21 >> 2] = 4;
   i3 = 4;
  }
  L32 : do if ((i22 | 0) == 18) {
   i22 = 0;
   i7 = i2 + 1 | 0;
   if ((i7 | 0) == (i15 | 0)) {
    i22 = 19;
    break L4;
   }
   i5 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 63](i12, HEAP8[i7 >> 0] | 0, 0) | 0;
   switch (i5 << 24 >> 24) {
   case 48:
   case 69:
    {
     i2 = i2 + 2 | 0;
     if ((i2 | 0) == (i15 | 0)) {
      i22 = 24;
      break L4;
     }
     i6 = i5;
     i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i12 >> 2] | 0) + 36 >> 2] & 63](i12, HEAP8[i2 >> 0] | 0, 0) | 0;
     i2 = i7;
     break;
    }
   default:
    {
     i6 = 0;
     i1 = i5;
    }
   }
   i7 = HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[i17 >> 2] = i3;
   HEAP32[i18 >> 2] = i4;
   HEAP32[i9 >> 2] = HEAP32[i17 >> 2];
   HEAP32[i10 >> 2] = HEAP32[i18 >> 2];
   HEAP32[i19 >> 2] = FUNCTION_TABLE_iiiiiiiii[i7 & 15](i11, i9, i10, i13, i21, i14, i1, i6) | 0;
   i1 = i2 + 2 | 0;
  } else if ((i22 | 0) == 27) {
   while (1) {
    i22 = 0;
    i2 = i2 + 1 | 0;
    if ((i2 | 0) == (i15 | 0)) {
     i2 = i15;
     break;
    }
    i3 = HEAP8[i2 >> 0] | 0;
    if (i3 << 24 >> 24 <= -1) break;
    if (!(HEAP16[i16 + (i3 << 24 >> 24 << 1) >> 1] & 8192)) break; else i22 = 27;
   }
   i3 = i5;
   while (1) {
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
      HEAP32[i19 >> 2] = 0;
      i1 = 0;
     }
    } else i1 = 0;
    i4 = (i1 | 0) == 0;
    do if (i5) {
     if ((HEAP32[i5 + 12 >> 2] | 0) != (HEAP32[i5 + 16 >> 2] | 0)) if (i4) {
      i7 = i3;
      break;
     } else {
      i1 = i2;
      break L32;
     }
     if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0) != -1) if (i4 ^ (i3 | 0) == 0) {
      i7 = i3;
      i5 = i3;
      break;
     } else {
      i1 = i2;
      break L32;
     } else {
      HEAP32[i20 >> 2] = 0;
      i3 = 0;
      i22 = 40;
      break;
     }
    } else i22 = 40; while (0);
    if ((i22 | 0) == 40) {
     i22 = 0;
     if (i4) {
      i1 = i2;
      break L32;
     } else {
      i7 = i3;
      i5 = 0;
     }
    }
    i4 = i1 + 12 | 0;
    i3 = HEAP32[i4 >> 2] | 0;
    i6 = i1 + 16 | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i3 = HEAPU8[i3 >> 0] | 0;
    if ((i3 & 255) << 24 >> 24 <= -1) {
     i1 = i2;
     break L32;
    }
    if (!(HEAP16[(HEAP32[i8 >> 2] | 0) + (i3 << 24 >> 24 << 1) >> 1] & 8192)) {
     i1 = i2;
     break L32;
    }
    i3 = HEAP32[i4 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i3 = i7;
     continue;
    } else {
     HEAP32[i4 >> 2] = i3 + 1;
     i3 = i7;
     continue;
    }
   }
  } else if ((i22 | 0) == 54) {
   i22 = 0;
   i3 = HEAP32[i4 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i5 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0; else HEAP32[i4 >> 2] = i3 + 1;
   i1 = i2 + 1 | 0;
  } while (0);
  i2 = i1;
  i1 = HEAP32[i21 >> 2] | 0;
 }
 if ((i22 | 0) == 15) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 19) HEAP32[i21 >> 2] = 4; else if ((i22 | 0) == 24) HEAP32[i21 >> 2] = 4;
 if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i19 >> 2] = 0;
   i1 = 0;
  }
 } else i1 = 0;
 i2 = (i1 | 0) == 0;
 i3 = HEAP32[i20 >> 2] | 0;
 do if (i3) {
  if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0) == -1 : 0) {
   HEAP32[i20 >> 2] = 0;
   i22 = 69;
   break;
  }
  if (!i2) i22 = 70;
 } else i22 = 69; while (0);
 if ((i22 | 0) == 69 ? i2 : 0) i22 = 70;
 if ((i22 | 0) == 70) HEAP32[i21 >> 2] = HEAP32[i21 >> 2] | 2;
 STACKTOP = i23;
 return i1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i13 = i22 + 200 | 0;
 i14 = i22 + 196 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i20 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 337 | 0;
 i11 = i22 + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i1;
  HEAP32[i20 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i4 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i23 >> 2] = 0;
     i7 = 0;
     i5 = 1;
    } else {
     i7 = i4;
     i5 = 0;
    }
   } else {
    i7 = 0;
    i5 = 1;
   }
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i28 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i5) break; else {
     i28 = 39;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 20;
     break;
    }
   } else i28 = 20; while (0);
   if ((i28 | 0) == 20) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 39;
     break;
    } else i4 = 0;
   }
   i2 = HEAP8[i10 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i1 + i2;
   }
   i5 = i7 + 12 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = i7 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i17, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i27, i18, i20, i16, i12) | 0) {
    i28 = 39;
    break;
   }
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    } else {
     i4 = i7;
     continue;
    }
   } else {
    HEAP32[i5 >> 2] = i2 + 4;
    i4 = i7;
    continue;
   }
  }
  if ((i28 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 39) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i19 = HEAP32[i20 >> 2] | 0, (i19 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i20 >> 2] = i19 + 4;
    HEAP32[i19 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(3, i1 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i29 & 1)) {
    HEAPF32[i21 >> 2] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i20 >> 2] | 0, i25);
    if (i7) {
     i1 = HEAP32[i7 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i4) {
     i1 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i28 = 57;
      break;
     } else {
      HEAP32[i24 >> 2] = 0;
      i28 = 55;
      break;
     }
    } else i28 = 55; while (0);
    if ((i28 | 0) == 55 ? i2 : 0) i28 = 57;
    if ((i28 | 0) == 57) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i13 = i22 + 200 | 0;
 i14 = i22 + 196 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i20 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 337 | 0;
 i11 = i22 + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i1;
  HEAP32[i20 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i4 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i23 >> 2] = 0;
     i7 = 0;
     i5 = 1;
    } else {
     i7 = i4;
     i5 = 0;
    }
   } else {
    i7 = 0;
    i5 = 1;
   }
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i28 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i5) break; else {
     i28 = 39;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 20;
     break;
    }
   } else i28 = 20; while (0);
   if ((i28 | 0) == 20) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 39;
     break;
    } else i4 = 0;
   }
   i2 = HEAP8[i10 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i1 + i2;
   }
   i5 = i7 + 12 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = i7 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i17, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i27, i18, i20, i16, i12) | 0) {
    i28 = 39;
    break;
   }
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    } else {
     i4 = i7;
     continue;
    }
   } else {
    HEAP32[i5 >> 2] = i2 + 4;
    i4 = i7;
    continue;
   }
  }
  if ((i28 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 39) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i19 = HEAP32[i20 >> 2] | 0, (i19 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i20 >> 2] = i19 + 4;
    HEAP32[i19 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(1, i1 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i29 & 1)) {
    HEAPF64[i21 >> 3] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i20 >> 2] | 0, i25);
    if (i7) {
     i1 = HEAP32[i7 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i4) {
     i1 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i28 = 57;
      break;
     } else {
      HEAP32[i24 >> 2] = 0;
      i28 = 55;
      break;
     }
    } else i28 = 55; while (0);
    if ((i28 | 0) == 55 ? i2 : 0) i28 = 57;
    if ((i28 | 0) == 57) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 i12 = i22 + 208 | 0;
 i13 = i22 + 200 | 0;
 i14 = i22 + 196 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i20 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 337 | 0;
 i11 = i22 + 336 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i1;
  HEAP32[i20 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i4 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i23 >> 2] = 0;
     i7 = 0;
     i5 = 1;
    } else {
     i7 = i4;
     i5 = 0;
    }
   } else {
    i7 = 0;
    i5 = 1;
   }
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i28 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i5) break; else {
     i28 = 39;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 20;
     break;
    }
   } else i28 = 20; while (0);
   if ((i28 | 0) == 20) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 39;
     break;
    } else i4 = 0;
   }
   i2 = HEAP8[i10 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i28 = 31;
     break;
    }
    i1 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i1 + i2;
   }
   i5 = i7 + 12 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = i7 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i2, i17, i11, i1, i15, HEAP32[i13 >> 2] | 0, HEAP32[i14 >> 2] | 0, i27, i18, i20, i16, i12) | 0) {
    i28 = 39;
    break;
   }
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 40 >> 2] | 0, i7 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 29;
     break;
    } else {
     i4 = i7;
     continue;
    }
   } else {
    HEAP32[i5 >> 2] = i2 + 4;
    i4 = i7;
    continue;
   }
  }
  if ((i28 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 39) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i19 = HEAP32[i20 >> 2] | 0, (i19 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i20 >> 2] = i19 + 4;
    HEAP32[i19 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(2, i1 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i29 & 1)) {
    HEAPF64[i21 >> 3] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i20 >> 2] | 0, i25);
    if (i7) {
     i1 = HEAP32[i7 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i7 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i7 >> 2] | 0) + 36 >> 2] | 0, i7 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i4) {
     i1 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i28 = 57;
      break;
     } else {
      HEAP32[i24 >> 2] = 0;
      i28 = 55;
      break;
     }
    } else i28 = 55; while (0);
    if ((i28 | 0) == 55 ? i2 : 0) i28 = 57;
    if ((i28 | 0) == 57) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i15, i16, i1, i18, i13, i19, i14) {
 i15 = i15 | 0;
 i16 = i16 | 0;
 i1 = i1 | 0;
 i18 = i18 | 0;
 i13 = i13 | 0;
 i19 = i19 | 0;
 i14 = i14 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i17 = 0, i20 = 0, i21 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i2 = i20;
 i4 = (i18 - i1 | 0) / 12 | 0;
 do if (i4 >>> 0 > 100) {
  i3 = _malloc(i4) | 0;
  if ((i3 | 0) == 0 ? (__THREW__ = 0, invoke_v(3), i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   break;
  }
  i2 = i3;
  i17 = i3;
  i6 = 6;
 } else {
  i17 = 0;
  i6 = 6;
 } while (0);
 if ((i6 | 0) == 6) {
  i6 = i1;
  i7 = i2;
  i3 = 0;
  while (1) {
   if ((i6 | 0) == (i18 | 0)) break;
   i5 = HEAP8[i6 + 11 >> 0] | 0;
   if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
   if (!i5) {
    HEAP8[i7 >> 0] = 2;
    i3 = i3 + 1 | 0;
    i4 = i4 + -1 | 0;
   } else HEAP8[i7 >> 0] = 1;
   i6 = i6 + 12 | 0;
   i7 = i7 + 1 | 0;
  }
  i12 = 0;
  i10 = i3;
  L21 : while (1) {
   i3 = HEAP32[i15 >> 2] | 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i11 = __THREW__;
     __THREW__ = 0;
     if (i11 & 1) {
      i6 = 39;
      break L21;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i15 >> 2] = 0;
      i3 = 0;
      break;
     } else {
      i3 = HEAP32[i15 >> 2] | 0;
      break;
     }
    }
   } else i3 = 0; while (0);
   i6 = (i3 | 0) == 0;
   i3 = HEAP32[i16 >> 2] | 0;
   if (i3) if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) {
     i6 = 39;
     break;
    }
    if ((i5 | 0) == -1) {
     HEAP32[i16 >> 2] = 0;
     i5 = 0;
    } else i5 = i3;
   } else i5 = i3; else i5 = 0;
   i7 = (i5 | 0) == 0;
   i3 = HEAP32[i15 >> 2] | 0;
   if (!((i4 | 0) != 0 & (i6 ^ i7))) {
    i6 = 28;
    break;
   }
   i5 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) {
     i6 = 39;
     break;
    }
   } else i3 = HEAPU8[i5 >> 0] | 0;
   i3 = i3 & 255;
   if (!i14) {
    __THREW__ = 0;
    i3 = invoke_iii(HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] | 0, i13 | 0, i3 | 0) | 0;
    i11 = __THREW__;
    __THREW__ = 0;
    if (i11 & 1) {
     i6 = 45;
     break;
    }
   }
   i11 = i12 + 1 | 0;
   i8 = i1;
   i7 = 0;
   i9 = i2;
   while (1) {
    if ((i8 | 0) == (i18 | 0)) break;
    do if ((HEAP8[i9 >> 0] | 0) == 1) {
     i6 = i8 + 11 | 0;
     if ((HEAP8[i6 >> 0] | 0) < 0) i5 = HEAP32[i8 >> 2] | 0; else i5 = i8;
     i5 = HEAP8[i5 + i12 >> 0] | 0;
     if (!i14) {
      __THREW__ = 0;
      i5 = invoke_iii(HEAP32[(HEAP32[i13 >> 2] | 0) + 12 >> 2] | 0, i13 | 0, i5 | 0) | 0;
      i21 = __THREW__;
      __THREW__ = 0;
      if (i21 & 1) {
       i6 = 55;
       break L21;
      }
     }
     if (i3 << 24 >> 24 != i5 << 24 >> 24) {
      HEAP8[i9 >> 0] = 0;
      i5 = i7;
      i6 = i10;
      i4 = i4 + -1 | 0;
      break;
     }
     i5 = HEAP8[i6 >> 0] | 0;
     if (i5 << 24 >> 24 < 0) i5 = HEAP32[i8 + 4 >> 2] | 0; else i5 = i5 & 255;
     if ((i5 | 0) == (i11 | 0)) {
      HEAP8[i9 >> 0] = 2;
      i5 = 1;
      i6 = i10 + 1 | 0;
      i4 = i4 + -1 | 0;
     } else {
      i5 = 1;
      i6 = i10;
     }
    } else {
     i5 = i7;
     i6 = i10;
    } while (0);
    i8 = i8 + 12 | 0;
    i7 = i5;
    i9 = i9 + 1 | 0;
    i10 = i6;
   }
   if (!i7) {
    i12 = i11;
    continue;
   }
   i3 = HEAP32[i15 >> 2] | 0;
   i5 = i3 + 12 | 0;
   i6 = HEAP32[i5 >> 2] | 0;
   if ((i6 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] | 0, i3 | 0) | 0;
    i21 = __THREW__;
    __THREW__ = 0;
    if (i21 & 1) {
     i6 = 69;
     break;
    }
   } else HEAP32[i5 >> 2] = i6 + 1;
   if ((i10 + i4 | 0) >>> 0 > 1) {
    i6 = i1;
    i7 = i2;
    i3 = i10;
   } else {
    i12 = i11;
    continue;
   }
   while (1) {
    if ((i6 | 0) == (i18 | 0)) {
     i12 = i11;
     i10 = i3;
     continue L21;
    }
    if ((HEAP8[i7 >> 0] | 0) == 2) {
     i5 = HEAP8[i6 + 11 >> 0] | 0;
     if (i5 << 24 >> 24 < 0) i5 = HEAP32[i6 + 4 >> 2] | 0; else i5 = i5 & 255;
     if ((i5 | 0) != (i11 | 0)) {
      HEAP8[i7 >> 0] = 0;
      i3 = i3 + -1 | 0;
     }
    }
    i6 = i6 + 12 | 0;
    i7 = i7 + 1 | 0;
   }
  }
  if ((i6 | 0) == 28) {
   do if (i3) if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i21 = __THREW__;
    __THREW__ = 0;
    if (!(i21 & 1)) if ((i3 | 0) == -1) {
     HEAP32[i15 >> 2] = 0;
     i3 = 0;
     i6 = 34;
     break;
    } else {
     i3 = HEAP32[i15 >> 2] | 0;
     i6 = 34;
     break;
    }
   } else i6 = 34; else {
    i3 = 0;
    i6 = 34;
   } while (0);
   L96 : do if ((i6 | 0) == 34) {
    i4 = (i3 | 0) == 0;
    do if (!i7) {
     if ((HEAP32[i5 + 12 >> 2] | 0) == (HEAP32[i5 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i3 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] | 0, i5 | 0) | 0;
      i21 = __THREW__;
      __THREW__ = 0;
      if (i21 & 1) break L96;
      if ((i3 | 0) == -1) {
       HEAP32[i16 >> 2] = 0;
       i6 = 78;
       break;
      }
     }
     if (!i4) i6 = 79;
    } else i6 = 78; while (0);
    if ((i6 | 0) == 78) if (i4) i6 = 79;
    if ((i6 | 0) == 79) HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 2;
    while (1) {
     if ((i1 | 0) == (i18 | 0)) {
      i6 = 84;
      break;
     }
     if ((HEAP8[i2 >> 0] | 0) == 2) break;
     i1 = i1 + 12 | 0;
     i2 = i2 + 1 | 0;
    }
    if ((i6 | 0) == 84) {
     HEAP32[i19 >> 2] = HEAP32[i19 >> 2] | 4;
     i1 = i18;
    }
    if (i17 | 0) _free(i17);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  } else if ((i6 | 0) == 39) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i6 | 0) == 45) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i6 | 0) == 55) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i6 | 0) == 69) i1 = ___cxa_find_matching_catch_2() | 0;
  if (i17) _free(i17);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i6 = 0;
     i4 = 1;
    } else {
     i6 = i3;
     i4 = 0;
    }
   } else {
    i6 = 0;
    i4 = 1;
   }
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i5 = __THREW__;
     __THREW__ = 0;
     if (i5 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i4) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 39;
     break;
    } else i3 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i4 = i6 + 12 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   i5 = i6 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i15, i16, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else {
     i3 = i6;
     continue;
    }
   } else {
    HEAP32[i4 >> 2] = i2 + 4;
    i3 = i6;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(11, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    HEAP16[i18 >> 1] = i1;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i6) {
     i1 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i6 = 0;
     i4 = 1;
    } else {
     i6 = i3;
     i4 = 0;
    }
   } else {
    i6 = 0;
    i4 = 1;
   }
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i5 = __THREW__;
     __THREW__ = 0;
     if (i5 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i4) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 39;
     break;
    } else i3 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i4 = i6 + 12 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   i5 = i6 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i15, i16, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else {
     i3 = i6;
     continue;
    }
   } else {
    HEAP32[i4 >> 2] = i2 + 4;
    i3 = i6;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(10, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i1;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i6) {
     i1 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i6 = 0;
     i4 = 1;
    } else {
     i6 = i3;
     i4 = 0;
    }
   } else {
    i6 = 0;
    i4 = 1;
   }
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i5 = __THREW__;
     __THREW__ = 0;
     if (i5 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i4) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 39;
     break;
    } else i3 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i4 = i6 + 12 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   i5 = i6 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i15, i16, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else {
     i3 = i6;
     continue;
    }
   } else {
    HEAP32[i4 >> 2] = i2 + 4;
    i3 = i6;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(9, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i1;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i6) {
     i1 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i6 = 0;
     i4 = 1;
    } else {
     i6 = i3;
     i4 = 0;
    }
   } else {
    i6 = 0;
    i4 = 1;
   }
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i5 = __THREW__;
     __THREW__ = 0;
     if (i5 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i4) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 39;
     break;
    } else i3 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i5 = __THREW__;
    __THREW__ = 0;
    if (i5 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i4 = i6 + 12 | 0;
   i2 = HEAP32[i4 >> 2] | 0;
   i5 = i6 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i15, i16, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i4 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i5 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 40 >> 2] | 0, i6 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else {
     i3 = i6;
     continue;
    }
   } else {
    HEAP32[i4 >> 2] = i2 + 4;
    i3 = i6;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(13, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i1;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i6) {
     i1 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i6 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i16 = i19 + 8 | 0;
 i17 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i17 >> 2] = i16;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i3 = 0;
     i5 = 1;
    } else i5 = 0;
   } else {
    i3 = 0;
    i5 = 1;
   }
   i4 = HEAP32[i21 >> 2] | 0;
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i5) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i5) {
     i4 = 0;
     i25 = 39;
     break;
    } else i4 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i5 = i3 + 12 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = i3 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i16, i17, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] | 0, i3 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i2 + 4;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i15 = HEAP32[i17 >> 2] | 0, (i15 - i16 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i17 >> 2] = i15 + 4;
    HEAP32[i15 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(8, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i2 = tempRet0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    i26 = i18;
    HEAP32[i26 >> 2] = i1;
    HEAP32[i26 + 4 >> 2] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i22);
    if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i4) {
     i1 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 i10 = i19 + 200 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i16 = i19 + 8 | 0;
 i17 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i1;
  HEAP32[i17 >> 2] = i16;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i3 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i3) {
    i2 = HEAP32[i3 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i20 >> 2] = 0;
     i3 = 0;
     i5 = 1;
    } else i5 = 0;
   } else {
    i3 = 0;
    i5 = 1;
   }
   i4 = HEAP32[i21 >> 2] | 0;
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i2 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 29;
      break L11;
     }
    } else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) != -1) if (i5) break; else {
     i25 = 39;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 20;
     break;
    }
   } else i25 = 20; while (0);
   if ((i25 | 0) == 20) {
    i25 = 0;
    if (i5) {
     i4 = 0;
     i25 = 39;
     break;
    } else i4 = 0;
   }
   i2 = HEAP8[i9 >> 0] | 0;
   i2 = i2 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i2 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i1 + i2 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 31;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 31;
     break;
    }
    i1 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i1 + i2;
   }
   i5 = i3 + 12 | 0;
   i2 = HEAP32[i5 >> 2] | 0;
   i6 = i3 + 16 | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    }
   } else i2 = HEAP32[i2 >> 2] | 0;
   if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i2, i14, i1, i12, i13, HEAP32[i11 >> 2] | 0, i23, i16, i17, i10) | 0) {
    i25 = 39;
    break;
   }
   i2 = HEAP32[i5 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] | 0, i3 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 29;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i2 + 4;
    continue;
   }
  }
  if ((i25 | 0) == 29) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 39) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i15 = HEAP32[i17 >> 2] | 0, (i15 - i16 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i17 >> 2] = i15 + 4;
    HEAP32[i15 >> 2] = i26;
   }
   __THREW__ = 0;
   i1 = invoke_iiiii(12, i1 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i2 = tempRet0;
   i26 = __THREW__;
   __THREW__ = 0;
   L56 : do if (!(i26 & 1)) {
    i26 = i18;
    HEAP32[i26 >> 2] = i1;
    HEAP32[i26 + 4 >> 2] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i22);
    if (i3) {
     i1 = HEAP32[i3 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i2 = 1;
     } else i2 = 0;
    } else i2 = 1;
    do if (i4) {
     i1 = HEAP32[i4 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L56;
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i25 = 57;
      break;
     } else {
      HEAP32[i21 >> 2] = 0;
      i25 = 55;
      break;
     }
    } else i25 = 55; while (0);
    if ((i25 | 0) == 55 ? i2 : 0) i25 = 57;
    if ((i25 | 0) == 57) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i13 = i22 + 199 | 0;
 i14 = i22 + 198 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i19 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 197 | 0;
 i11 = i22 + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i2;
  HEAP32[i19 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i1 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 28;
      break;
     }
     if ((i4 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i5 = (i1 | 0) == 0;
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i5) break; else {
     i28 = 38;
     break L11;
    }
    __THREW__ = 0;
    i6 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 28;
     break L11;
    }
    if ((i6 | 0) != -1) if (i5) break; else {
     i28 = 38;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 19;
     break;
    }
   } else i28 = 19; while (0);
   if ((i28 | 0) == 19) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 38;
     break;
    } else i4 = 0;
   }
   i5 = HEAP8[i10 >> 0] | 0;
   i5 = i5 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i5 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i2 + i5 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i5 << 1 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i2 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i2 + i5;
   }
   i6 = i1 + 12 | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   i7 = i1 + 16 | 0;
   if ((i5 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    }
   } else i5 = HEAPU8[i5 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i5 & 255, i17, i11, i2, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i27, i18, i19, i16, i12) | 0) {
    i28 = 38;
    break;
   }
   i4 = HEAP32[i6 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i6 >> 2] = i4 + 1;
    continue;
   }
  }
  if ((i28 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 38) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i20 = HEAP32[i19 >> 2] | 0, (i20 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i19 >> 2] = i20 + 4;
    HEAP32[i20 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(3, i2 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i29 & 1)) {
    HEAPF32[i21 >> 2] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i19 >> 2] | 0, i25);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i23 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i24 >> 2] = 0;
       i28 = 53;
       break;
      }
     }
     if (!i2) i28 = 54;
    } else i28 = 53; while (0);
    if ((i28 | 0) == 53 ? i2 : 0) i28 = 54;
    if ((i28 | 0) == 54) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i13 = i22 + 199 | 0;
 i14 = i22 + 198 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i19 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 197 | 0;
 i11 = i22 + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i2;
  HEAP32[i19 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i1 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 28;
      break;
     }
     if ((i4 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i5 = (i1 | 0) == 0;
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i5) break; else {
     i28 = 38;
     break L11;
    }
    __THREW__ = 0;
    i6 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 28;
     break L11;
    }
    if ((i6 | 0) != -1) if (i5) break; else {
     i28 = 38;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 19;
     break;
    }
   } else i28 = 19; while (0);
   if ((i28 | 0) == 19) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 38;
     break;
    } else i4 = 0;
   }
   i5 = HEAP8[i10 >> 0] | 0;
   i5 = i5 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i5 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i2 + i5 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i5 << 1 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i2 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i2 + i5;
   }
   i6 = i1 + 12 | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   i7 = i1 + 16 | 0;
   if ((i5 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    }
   } else i5 = HEAPU8[i5 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i5 & 255, i17, i11, i2, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i27, i18, i19, i16, i12) | 0) {
    i28 = 38;
    break;
   }
   i4 = HEAP32[i6 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i6 >> 2] = i4 + 1;
    continue;
   }
  }
  if ((i28 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 38) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i20 = HEAP32[i19 >> 2] | 0, (i20 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i19 >> 2] = i20 + 4;
    HEAP32[i20 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(1, i2 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i29 & 1)) {
    HEAPF64[i21 >> 3] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i19 >> 2] | 0, i25);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i23 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i24 >> 2] = 0;
       i28 = 53;
       break;
      }
     }
     if (!i2) i28 = 54;
    } else i28 = 53; while (0);
    if ((i28 | 0) == 53 ? i2 : 0) i28 = 54;
    if ((i28 | 0) == 54) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i23, i24, i2, i25, i21) {
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i2 = i2 | 0;
 i25 = i25 | 0;
 i21 = i21 | 0;
 var d3 = 0.0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i22 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i22 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i12 = i22 + 200 | 0;
 i13 = i22 + 199 | 0;
 i14 = i22 + 198 | 0;
 i27 = i22 + 184 | 0;
 i26 = i22 + 172 | 0;
 i15 = i22 + 168 | 0;
 i18 = i22 + 8 | 0;
 i19 = i22 + 4 | 0;
 i16 = i22;
 i17 = i22 + 197 | 0;
 i11 = i22 + 196 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i27, i2, i12, i13, i14);
 HEAP32[i26 >> 2] = 0;
 HEAP32[i26 + 4 >> 2] = 0;
 HEAP32[i26 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i26 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i10 = i26 + 11 | 0;
 if ((HEAP8[i10 >> 0] | 0) < 0) i1 = (HEAP32[i26 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i26 | 0, i1 | 0, 0);
 i9 = __THREW__;
 __THREW__ = 0;
 if (i9 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
  HEAP32[i15 >> 2] = i2;
  HEAP32[i19 >> 2] = i18;
  HEAP32[i16 >> 2] = 0;
  HEAP8[i17 >> 0] = 1;
  HEAP8[i11 >> 0] = 69;
  i8 = i26 + 4 | 0;
  i9 = i26 + 8 | 0;
  i1 = HEAP32[i23 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i28 = 28;
      break;
     }
     if ((i4 | 0) == -1) {
      HEAP32[i23 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i5 = (i1 | 0) == 0;
   i4 = HEAP32[i24 >> 2] | 0;
   do if (i4) {
    if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i5) break; else {
     i28 = 38;
     break L11;
    }
    __THREW__ = 0;
    i6 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 28;
     break L11;
    }
    if ((i6 | 0) != -1) if (i5) break; else {
     i28 = 38;
     break L11;
    } else {
     HEAP32[i24 >> 2] = 0;
     i28 = 19;
     break;
    }
   } else i28 = 19; while (0);
   if ((i28 | 0) == 19) {
    i28 = 0;
    if (i5) {
     i4 = 0;
     i28 = 38;
     break;
    } else i4 = 0;
   }
   i5 = HEAP8[i10 >> 0] | 0;
   i5 = i5 << 24 >> 24 < 0 ? HEAP32[i8 >> 2] | 0 : i5 & 255;
   if ((HEAP32[i15 >> 2] | 0) == (i2 + i5 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i5 << 1 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    if ((HEAP8[i10 >> 0] | 0) < 0) i2 = (HEAP32[i9 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i26 | 0, i2 | 0, 0);
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i28 = 30;
     break;
    }
    i2 = (HEAP8[i10 >> 0] | 0) < 0 ? HEAP32[i26 >> 2] | 0 : i26;
    HEAP32[i15 >> 2] = i2 + i5;
   }
   i6 = i1 + 12 | 0;
   i5 = HEAP32[i6 >> 2] | 0;
   i7 = i1 + 16 | 0;
   if ((i5 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    }
   } else i5 = HEAPU8[i5 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i5 & 255, i17, i11, i2, i15, HEAP8[i13 >> 0] | 0, HEAP8[i14 >> 0] | 0, i27, i18, i19, i16, i12) | 0) {
    i28 = 38;
    break;
   }
   i4 = HEAP32[i6 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i7 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i29 = __THREW__;
    __THREW__ = 0;
    if (i29 & 1) {
     i28 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i6 >> 2] = i4 + 1;
    continue;
   }
  }
  if ((i28 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i28 | 0) == 38) {
   i29 = HEAP8[i27 + 11 >> 0] | 0;
   if (!((HEAP8[i17 >> 0] | 0) == 0 ? 1 : ((i29 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i29 & 255) | 0) == 0) ? (i20 = HEAP32[i19 >> 2] | 0, (i20 - i18 | 0) < 160) : 0) {
    i29 = HEAP32[i16 >> 2] | 0;
    HEAP32[i19 >> 2] = i20 + 4;
    HEAP32[i20 >> 2] = i29;
   }
   __THREW__ = 0;
   d3 = +invoke_diii(2, i2 | 0, HEAP32[i15 >> 2] | 0, i25 | 0);
   i29 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i29 & 1)) {
    HEAPF64[i21 >> 3] = d3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i27, i18, HEAP32[i19 >> 2] | 0, i25);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i23 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i29 = __THREW__;
      __THREW__ = 0;
      if (i29 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i24 >> 2] = 0;
       i28 = 53;
       break;
      }
     }
     if (!i2) i28 = 54;
    } else i28 = 53; while (0);
    if ((i28 | 0) == 53 ? i2 : 0) i28 = 54;
    if ((i28 | 0) == 54) HEAP32[i25 >> 2] = HEAP32[i25 >> 2] | 2;
    i29 = HEAP32[i23 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    STACKTOP = i22;
    return i29 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNSt3__26locale5__impC2Ej(i4, i1) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 HEAP32[i4 + 4 >> 2] = i1 + -1;
 HEAP32[i4 >> 2] = 8368;
 i6 = i4 + 8 | 0;
 __THREW__ = 0;
 invoke_vii(51, i6 | 0, 28);
 i5 = __THREW__;
 __THREW__ = 0;
 if (i5 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i5 = i4 + 144 | 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i5 + 4 >> 2] = 0;
  HEAP32[i5 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viii(3, i5 | 0, 13594, 1);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
   i1 = HEAP32[i6 >> 2] | 0;
   i2 = i4 + 12 | 0;
   i3 = HEAP32[i2 >> 2] | 0;
   while (1) {
    if ((i3 | 0) == (i1 | 0)) break;
    i8 = i3 + -4 | 0;
    HEAP32[i2 >> 2] = i8;
    i3 = i8;
   }
   HEAP32[4195] = 0;
   HEAP32[4194] = 6032;
   __THREW__ = 0;
   invoke_vii(52, i4 | 0, 16776);
   i8 = __THREW__;
   __THREW__ = 0;
   do if ((((((((((((((!(i8 & 1) ? (HEAP32[4197] = 0, HEAP32[4196] = 6064, __THREW__ = 0, invoke_vii(53, i4 | 0, 16784), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4199] = 0, HEAP32[4198] = 8388, HEAP32[4200] = 0, HEAP8[16804] = 0, HEAP32[4200] = __ZNSt3__25ctypeIcE13classic_tableEv() | 0, __THREW__ = 0, invoke_vii(54, i4 | 0, 16792), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4203] = 0, HEAP32[4202] = 8584, __THREW__ = 0, invoke_vii(55, i4 | 0, 16808), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4205] = 0, HEAP32[4204] = 8652, __THREW__ = 0, invoke_vii(56, i4 | 0, 16816), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (__THREW__ = 0, invoke_vii(57, 16824, 1), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (__THREW__ = 0, invoke_vii(58, i4 | 0, 16824), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4211] = 0, HEAP32[4210] = 8700, __THREW__ = 0, invoke_vii(59, i4 | 0, 16840), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4213] = 0, HEAP32[4212] = 8748, __THREW__ = 0, invoke_vii(60, i4 | 0, 16848), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (__ZNSt3__28numpunctIcEC2Ej(16856, 1), __THREW__ = 0, invoke_vii(61, i4 | 0, 16856), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (__ZNSt3__28numpunctIwEC2Ej(16880, 1), __THREW__ = 0, invoke_vii(62, i4 | 0, 16880), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4229] = 0, HEAP32[4228] = 6096, __THREW__ = 0, invoke_vii(63, i4 | 0, 16912), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4231] = 0, HEAP32[4230] = 6160, __THREW__ = 0, invoke_vii(64, i4 | 0, 16920), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4233] = 0, HEAP32[4232] = 6224, __THREW__ = 0, invoke_vii(65, i4 | 0, 16928), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) ? (HEAP32[4235] = 0, HEAP32[4234] = 6276, __THREW__ = 0, invoke_vii(66, i4 | 0, 16936), i8 = __THREW__, __THREW__ = 0, !(i8 & 1)) : 0) {
    HEAP32[4237] = 0;
    HEAP32[4236] = 7824;
    __THREW__ = 0;
    invoke_vii(67, i4 | 0, 16944);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4239] = 0;
    HEAP32[4238] = 7880;
    __THREW__ = 0;
    invoke_vii(68, i4 | 0, 16952);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4241] = 0;
    HEAP32[4240] = 7936;
    __THREW__ = 0;
    invoke_vii(69, i4 | 0, 16960);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4243] = 0;
    HEAP32[4242] = 7992;
    __THREW__ = 0;
    invoke_vii(70, i4 | 0, 16968);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4245] = 0;
    HEAP32[4244] = 8048;
    __THREW__ = 0;
    invoke_vii(71, i4 | 0, 16976);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4247] = 0;
    HEAP32[4246] = 8076;
    __THREW__ = 0;
    invoke_vii(72, i4 | 0, 16984);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4249] = 0;
    HEAP32[4248] = 8104;
    __THREW__ = 0;
    invoke_vii(73, i4 | 0, 16992);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4251] = 0;
    HEAP32[4250] = 8132;
    __THREW__ = 0;
    invoke_vii(74, i4 | 0, 17e3);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4253] = 0;
    HEAP32[4252] = 6328;
    HEAP32[4254] = 6376;
    __THREW__ = 0;
    invoke_vii(75, i4 | 0, 17008);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4257] = 0;
    HEAP32[4256] = 6412;
    HEAP32[4258] = 6460;
    __THREW__ = 0;
    invoke_vii(76, i4 | 0, 17024);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4261] = 0;
    HEAP32[4260] = 8564;
    __THREW__ = 0;
    i1 = invoke_i(1) | 0;
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[4262] = i1;
    HEAP32[4260] = 7776;
    __THREW__ = 0;
    invoke_vii(77, i4 | 0, 17040);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4265] = 0;
    HEAP32[4264] = 8564;
    __THREW__ = 0;
    i1 = invoke_i(1) | 0;
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[4266] = i1;
    HEAP32[4264] = 7800;
    __THREW__ = 0;
    invoke_vii(78, i4 | 0, 17056);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4269] = 0;
    HEAP32[4268] = 8160;
    __THREW__ = 0;
    invoke_vii(79, i4 | 0, 17072);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    HEAP32[4271] = 0;
    HEAP32[4270] = 8192;
    __THREW__ = 0;
    invoke_vii(80, i4 | 0, 17080);
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) {
     i7 = 42;
     break;
    }
    return;
   } else i7 = 42; while (0);
   if ((i7 | 0) == 42) i1 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
  }
  __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i6);
 }
 ___resumeException(i1 | 0);
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i16 = i19 + 8 | 0;
 i17 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i17 >> 2] = i16;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i3 = (i1 | 0) == 0;
   i4 = HEAP32[i21 >> 2] | 0;
   do if (i4) {
    if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i3) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i3) {
     i4 = 0;
     i25 = 38;
     break;
    } else i4 = 0;
   }
   i3 = HEAP8[i9 >> 0] | 0;
   i3 = i3 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i3 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i3 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i3 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i3;
   }
   i5 = i1 + 12 | 0;
   i3 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i3 = HEAPU8[i3 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i3 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i16, i17, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i15 = HEAP32[i17 >> 2] | 0, (i15 - i16 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i17 >> 2] = i15 + 4;
    HEAP32[i15 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(8, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i3 = tempRet0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    i26 = i18;
    HEAP32[i26 >> 2] = i2;
    HEAP32[i26 + 4 >> 2] = i3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i16 = i19 + 8 | 0;
 i17 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i17 >> 2] = i16;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i3 = (i1 | 0) == 0;
   i4 = HEAP32[i21 >> 2] | 0;
   do if (i4) {
    if ((HEAP32[i4 + 12 >> 2] | 0) != (HEAP32[i4 + 16 >> 2] | 0)) if (i3) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i3) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i3) {
     i4 = 0;
     i25 = 38;
     break;
    } else i4 = 0;
   }
   i3 = HEAP8[i9 >> 0] | 0;
   i3 = i3 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i3 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i3 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i3 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i3;
   }
   i5 = i1 + 12 | 0;
   i3 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i3 = HEAPU8[i3 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i3 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i16, i17, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i15 = HEAP32[i17 >> 2] | 0, (i15 - i16 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i17 >> 2] = i15 + 4;
    HEAP32[i15 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(12, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i3 = tempRet0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    i26 = i18;
    HEAP32[i26 >> 2] = i2;
    HEAP32[i26 + 4 >> 2] = i3;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i16, HEAP32[i17 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i4) {
     if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] | 0, i4 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i4 = (i1 | 0) == 0;
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i4) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 38;
     break;
    } else i3 = 0;
   }
   i4 = HEAP8[i9 >> 0] | 0;
   i4 = i4 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i4 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i4 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i4 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i4;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i4 = HEAPU8[i4 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i15, i16, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(11, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    HEAP16[i18 >> 1] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i3) {
     if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i4 = (i1 | 0) == 0;
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i4) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 38;
     break;
    } else i3 = 0;
   }
   i4 = HEAP8[i9 >> 0] | 0;
   i4 = i4 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i4 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i4 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i4 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i4;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i4 = HEAPU8[i4 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i15, i16, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(10, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i3) {
     if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i4 = (i1 | 0) == 0;
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i4) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 38;
     break;
    } else i3 = 0;
   }
   i4 = HEAP8[i9 >> 0] | 0;
   i4 = i4 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i4 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i4 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i4 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i4;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i4 = HEAPU8[i4 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i15, i16, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(9, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i3) {
     if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i20, i21, i2, i22, i18) {
 i1 = i1 | 0;
 i20 = i20 | 0;
 i21 = i21 | 0;
 i2 = i2 | 0;
 i22 = i22 | 0;
 i18 = i18 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i19 = 0, i23 = 0, i24 = 0, i25 = 0, i26 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i19 + 198 | 0;
 i11 = i19 + 196 | 0;
 i23 = i19 + 184 | 0;
 i24 = i19 + 172 | 0;
 i12 = i19 + 168 | 0;
 i15 = i19 + 8 | 0;
 i16 = i19 + 4 | 0;
 i13 = i19;
 i14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i2) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i23, i2, i10, i11);
 HEAP32[i24 >> 2] = 0;
 HEAP32[i24 + 4 >> 2] = 0;
 HEAP32[i24 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i24 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = i24 + 11 | 0;
 if ((HEAP8[i9 >> 0] | 0) < 0) i1 = (HEAP32[i24 + 8 >> 2] & 2147483647) + -1 | 0; else i1 = 10;
 __THREW__ = 0;
 invoke_viii(6, i24 | 0, i1 | 0, 0);
 i8 = __THREW__;
 __THREW__ = 0;
 if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
  HEAP32[i12 >> 2] = i2;
  HEAP32[i16 >> 2] = i15;
  HEAP32[i13 >> 2] = 0;
  i7 = i24 + 4 | 0;
  i8 = i24 + 8 | 0;
  i1 = HEAP32[i20 >> 2] | 0;
  L11 : while (1) {
   if (i1) {
    if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     i3 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
     i6 = __THREW__;
     __THREW__ = 0;
     if (i6 & 1) {
      i25 = 28;
      break;
     }
     if ((i3 | 0) == -1) {
      HEAP32[i20 >> 2] = 0;
      i1 = 0;
     }
    }
   } else i1 = 0;
   i4 = (i1 | 0) == 0;
   i3 = HEAP32[i21 >> 2] | 0;
   do if (i3) {
    if ((HEAP32[i3 + 12 >> 2] | 0) != (HEAP32[i3 + 16 >> 2] | 0)) if (i4) break; else {
     i25 = 38;
     break L11;
    }
    __THREW__ = 0;
    i5 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 28;
     break L11;
    }
    if ((i5 | 0) != -1) if (i4) break; else {
     i25 = 38;
     break L11;
    } else {
     HEAP32[i21 >> 2] = 0;
     i25 = 19;
     break;
    }
   } else i25 = 19; while (0);
   if ((i25 | 0) == 19) {
    i25 = 0;
    if (i4) {
     i3 = 0;
     i25 = 38;
     break;
    } else i3 = 0;
   }
   i4 = HEAP8[i9 >> 0] | 0;
   i4 = i4 << 24 >> 24 < 0 ? HEAP32[i7 >> 2] | 0 : i4 & 255;
   if ((HEAP32[i12 >> 2] | 0) == (i2 + i4 | 0)) {
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i4 << 1 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    if ((HEAP8[i9 >> 0] | 0) < 0) i2 = (HEAP32[i8 >> 2] & 2147483647) + -1 | 0; else i2 = 10;
    __THREW__ = 0;
    invoke_viii(6, i24 | 0, i2 | 0, 0);
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i25 = 30;
     break;
    }
    i2 = (HEAP8[i9 >> 0] | 0) < 0 ? HEAP32[i24 >> 2] | 0 : i24;
    HEAP32[i12 >> 2] = i2 + i4;
   }
   i5 = i1 + 12 | 0;
   i4 = HEAP32[i5 >> 2] | 0;
   i6 = i1 + 16 | 0;
   if ((i4 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    i4 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    }
   } else i4 = HEAPU8[i4 >> 0] | 0;
   if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i4 & 255, i14, i2, i12, i13, HEAP8[i11 >> 0] | 0, i23, i15, i16, i10) | 0) {
    i25 = 38;
    break;
   }
   i3 = HEAP32[i5 >> 2] | 0;
   if ((i3 | 0) == (HEAP32[i6 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] | 0, i1 | 0) | 0;
    i26 = __THREW__;
    __THREW__ = 0;
    if (i26 & 1) {
     i25 = 28;
     break;
    } else continue;
   } else {
    HEAP32[i5 >> 2] = i3 + 1;
    continue;
   }
  }
  if ((i25 | 0) == 28) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 30) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i25 | 0) == 38) {
   i26 = HEAP8[i23 + 11 >> 0] | 0;
   if ((i26 << 24 >> 24 < 0 ? HEAP32[i23 + 4 >> 2] | 0 : i26 & 255) | 0 ? (i17 = HEAP32[i16 >> 2] | 0, (i17 - i15 | 0) < 160) : 0) {
    i26 = HEAP32[i13 >> 2] | 0;
    HEAP32[i16 >> 2] = i17 + 4;
    HEAP32[i17 >> 2] = i26;
   }
   __THREW__ = 0;
   i2 = invoke_iiiii(13, i2 | 0, HEAP32[i12 >> 2] | 0, i22 | 0, i14 | 0) | 0;
   i26 = __THREW__;
   __THREW__ = 0;
   L54 : do if (!(i26 & 1)) {
    HEAP32[i18 >> 2] = i2;
    __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i23, i15, HEAP32[i16 >> 2] | 0, i22);
    if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i2 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break;
      if ((i2 | 0) == -1) {
       HEAP32[i20 >> 2] = 0;
       i1 = 0;
      }
     }
    } else i1 = 0;
    i2 = (i1 | 0) == 0;
    do if (i3) {
     if ((HEAP32[i3 + 12 >> 2] | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] | 0, i3 | 0) | 0;
      i26 = __THREW__;
      __THREW__ = 0;
      if (i26 & 1) break L54;
      if ((i1 | 0) == -1) {
       HEAP32[i21 >> 2] = 0;
       i25 = 53;
       break;
      }
     }
     if (!i2) i25 = 54;
    } else i25 = 53; while (0);
    if ((i25 | 0) == 53 ? i2 : 0) i25 = 54;
    if ((i25 | 0) == 54) HEAP32[i22 >> 2] = HEAP32[i22 >> 2] | 2;
    i26 = HEAP32[i20 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
    STACKTOP = i19;
    return i26 | 0;
   } while (0);
   i1 = ___cxa_find_matching_catch_2() | 0;
  }
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i23);
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe(i1, i22, i10, i24, i25, d6) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i10 = i10 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 d6 = +d6;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i23 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 1008 | 0;
 i13 = i21 + 8 | 0;
 i2 = i21;
 i1 = i21 + 896 | 0;
 i7 = i21 + 888 | 0;
 i3 = i21 + 488 | 0;
 i29 = i21 + 480 | 0;
 i14 = i21 + 892 | 0;
 i15 = i21 + 476 | 0;
 i16 = i21 + 472 | 0;
 i26 = i21 + 460 | 0;
 i27 = i21 + 448 | 0;
 i28 = i21 + 436 | 0;
 i12 = i21 + 432 | 0;
 i5 = i21 + 32 | 0;
 i17 = i21 + 24 | 0;
 i18 = i21 + 16 | 0;
 i19 = i21 + 20 | 0;
 HEAP32[i7 >> 2] = i1;
 HEAPF64[i13 >> 3] = d6;
 i1 = _snprintf(i1, 100, 15115, i13) | 0;
 do if (i1 >>> 0 > 99) {
  __THREW__ = 0;
  i1 = invoke_i(1) | 0;
  i20 = __THREW__;
  __THREW__ = 0;
  if (!(i20 & 1) ? (__THREW__ = 0, HEAPF64[i2 >> 3] = d6, i4 = invoke_iiiii(14, i7 | 0, i1 | 0, 15115, i2 | 0) | 0, i20 = __THREW__, __THREW__ = 0, !(i20 & 1)) : 0) {
   i1 = HEAP32[i7 >> 2] | 0;
   if (!i1) {
    __THREW__ = 0;
    invoke_v(3);
    i20 = __THREW__;
    __THREW__ = 0;
    if (i20 & 1) {
     i2 = 0;
     i1 = 0;
     i20 = 8;
     break;
    }
    i1 = HEAP32[i7 >> 2] | 0;
   }
   i3 = _malloc(i4 << 2) | 0;
   i2 = i3;
   if (!i3) {
    __THREW__ = 0;
    invoke_v(3);
    i20 = __THREW__;
    __THREW__ = 0;
    if (i20 & 1) i20 = 8; else {
     i3 = 0;
     i9 = i4;
     i11 = i2;
     i20 = 11;
    }
   } else {
    i9 = i4;
    i11 = i2;
    i20 = 11;
   }
  } else {
   i2 = 0;
   i1 = 0;
   i20 = 8;
  }
 } else {
  i9 = i1;
  i11 = 0;
  i1 = 0;
  i20 = 11;
 } while (0);
 if ((i20 | 0) == 11) {
  __THREW__ = 0;
  i2 = invoke_ii(65, i24 | 0) | 0;
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i2 = i11;
   i20 = 8;
  } else {
   HEAP32[i29 >> 2] = i2;
   __THREW__ = 0;
   i8 = invoke_iii(15, i29 | 0, 18916) | 0;
   i4 = __THREW__;
   __THREW__ = 0;
   do if (i4 & 1) i3 = ___cxa_find_matching_catch_2() | 0; else {
    i4 = HEAP32[i7 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 48 >> 2] | 0, i8 | 0, i4 | 0, i4 + i9 | 0, i3 | 0) | 0;
    i4 = __THREW__;
    __THREW__ = 0;
    if (i4 & 1) {
     i3 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    if (!i9) i7 = 0; else i7 = (HEAP8[HEAP32[i7 >> 2] >> 0] | 0) == 45;
    HEAP32[i26 >> 2] = 0;
    HEAP32[i26 + 4 >> 2] = 0;
    HEAP32[i26 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i26 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    HEAP32[i27 >> 2] = 0;
    HEAP32[i27 + 4 >> 2] = 0;
    HEAP32[i27 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i27 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    HEAP32[i28 >> 2] = 0;
    HEAP32[i28 + 4 >> 2] = 0;
    HEAP32[i28 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i28 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __THREW__ = 0;
    invoke_viiiiiiiiii(4, i10 | 0, i7 | 0, i29 | 0, i14 | 0, i15 | 0, i16 | 0, i26 | 0, i27 | 0, i28 | 0, i12 | 0);
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) i3 = ___cxa_find_matching_catch_2() | 0; else {
     i4 = HEAP32[i12 >> 2] | 0;
     if ((i9 | 0) > (i4 | 0)) {
      i10 = HEAP8[i28 + 8 + 3 >> 0] | 0;
      i2 = HEAP8[i27 + 8 + 3 >> 0] | 0;
      i2 = (i10 << 24 >> 24 < 0 ? HEAP32[i28 + 4 >> 2] | 0 : i10 & 255) + (i9 - i4 << 1 | 1) + (i2 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i2 & 255) | 0;
     } else {
      i10 = HEAP8[i28 + 8 + 3 >> 0] | 0;
      i2 = HEAP8[i27 + 8 + 3 >> 0] | 0;
      i2 = (i10 << 24 >> 24 < 0 ? HEAP32[i28 + 4 >> 2] | 0 : i10 & 255) + 2 + (i2 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i2 & 255) | 0;
     }
     i2 = i2 + i4 | 0;
     do if (i2 >>> 0 > 100) {
      i5 = _malloc(i2 << 2) | 0;
      i2 = i5;
      if (!i5) {
       __THREW__ = 0;
       invoke_v(3);
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i3 = ___cxa_find_matching_catch_2() | 0;
        break;
       } else {
        i5 = 0;
        i4 = HEAP32[i12 >> 2] | 0;
        i20 = 37;
        break;
       }
      } else i20 = 37;
     } else {
      i2 = 0;
      i20 = 37;
     } while (0);
     if ((i20 | 0) == 37) {
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(2, i5 | 0, i17 | 0, i18 | 0, HEAP32[i24 + 4 >> 2] | 0, i3 | 0, i3 + (i9 << 2) | 0, i8 | 0, i7 | 0, i14 | 0, HEAP32[i15 >> 2] | 0, HEAP32[i16 >> 2] | 0, i26 | 0, i27 | 0, i28 | 0, i4 | 0);
      i16 = __THREW__;
      __THREW__ = 0;
      if (!(i16 & 1) ? (HEAP32[i19 >> 2] = HEAP32[i22 >> 2], i22 = HEAP32[i17 >> 2] | 0, i23 = HEAP32[i18 >> 2] | 0, __THREW__ = 0, HEAP32[i13 >> 2] = HEAP32[i19 >> 2], i23 = invoke_iiiiiii(40, i13 | 0, i5 | 0, i22 | 0, i23 | 0, i24 | 0, i25 | 0) | 0, i25 = __THREW__, __THREW__ = 0, !(i25 & 1)) : 0) {
       if (i2 | 0) _free(i2);
       __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i28);
       __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
       __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i29 >> 2] | 0) | 0;
       if (i11 | 0) _free(i11);
       if (i1 | 0) _free(i1);
       STACKTOP = i21;
       return i23 | 0;
      }
      i3 = ___cxa_find_matching_catch_2() | 0;
     }
     if (i2 | 0) _free(i2);
    }
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i28);
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i27);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    i2 = HEAP32[i29 >> 2] | 0;
   } while (0);
   __ZNSt3__214__shared_count16__release_sharedEv(i2) | 0;
   i2 = i11;
  }
 }
 if ((i20 | 0) == 8) i3 = ___cxa_find_matching_catch_2() | 0;
 if (i2 | 0) _free(i2);
 if (i1 | 0) _free(i1);
 ___resumeException(i3 | 0);
 return 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce(i1, i22, i10, i24, i25, d6) {
 i1 = i1 | 0;
 i22 = i22 | 0;
 i10 = i10 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 d6 = +d6;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i23 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0;
 i21 = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 i13 = i21 + 8 | 0;
 i2 = i21;
 i1 = i21 + 284 | 0;
 i7 = i21 + 72 | 0;
 i3 = i21 + 184 | 0;
 i29 = i21 + 68 | 0;
 i14 = i21 + 180 | 0;
 i15 = i21 + 177 | 0;
 i16 = i21 + 176 | 0;
 i26 = i21 + 56 | 0;
 i27 = i21 + 44 | 0;
 i28 = i21 + 32 | 0;
 i12 = i21 + 28 | 0;
 i5 = i21 + 76 | 0;
 i17 = i21 + 24 | 0;
 i18 = i21 + 16 | 0;
 i19 = i21 + 20 | 0;
 HEAP32[i7 >> 2] = i1;
 HEAPF64[i13 >> 3] = d6;
 i1 = _snprintf(i1, 100, 15115, i13) | 0;
 do if (i1 >>> 0 > 99) {
  __THREW__ = 0;
  i1 = invoke_i(1) | 0;
  i20 = __THREW__;
  __THREW__ = 0;
  if (!(i20 & 1) ? (__THREW__ = 0, HEAPF64[i2 >> 3] = d6, i4 = invoke_iiiii(14, i7 | 0, i1 | 0, 15115, i2 | 0) | 0, i20 = __THREW__, __THREW__ = 0, !(i20 & 1)) : 0) {
   i1 = HEAP32[i7 >> 2] | 0;
   if (!i1) {
    __THREW__ = 0;
    invoke_v(3);
    i20 = __THREW__;
    __THREW__ = 0;
    if (i20 & 1) {
     i2 = 0;
     i1 = 0;
     i20 = 8;
     break;
    }
    i1 = HEAP32[i7 >> 2] | 0;
   }
   i3 = _malloc(i4) | 0;
   i2 = i3;
   if (!i3) {
    __THREW__ = 0;
    invoke_v(3);
    i20 = __THREW__;
    __THREW__ = 0;
    if (i20 & 1) i20 = 8; else {
     i3 = 0;
     i9 = i4;
     i11 = i2;
     i20 = 11;
    }
   } else {
    i9 = i4;
    i11 = i2;
    i20 = 11;
   }
  } else {
   i2 = 0;
   i1 = 0;
   i20 = 8;
  }
 } else {
  i9 = i1;
  i11 = 0;
  i1 = 0;
  i20 = 11;
 } while (0);
 if ((i20 | 0) == 11) {
  __THREW__ = 0;
  i2 = invoke_ii(65, i24 | 0) | 0;
  i8 = __THREW__;
  __THREW__ = 0;
  if (i8 & 1) {
   i2 = i11;
   i20 = 8;
  } else {
   HEAP32[i29 >> 2] = i2;
   __THREW__ = 0;
   i8 = invoke_iii(15, i29 | 0, 18884) | 0;
   i4 = __THREW__;
   __THREW__ = 0;
   do if (i4 & 1) i3 = ___cxa_find_matching_catch_2() | 0; else {
    i4 = HEAP32[i7 >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[i8 >> 2] | 0) + 32 >> 2] | 0, i8 | 0, i4 | 0, i4 + i9 | 0, i3 | 0) | 0;
    i4 = __THREW__;
    __THREW__ = 0;
    if (i4 & 1) {
     i3 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    if (!i9) i7 = 0; else i7 = (HEAP8[HEAP32[i7 >> 2] >> 0] | 0) == 45;
    HEAP32[i26 >> 2] = 0;
    HEAP32[i26 + 4 >> 2] = 0;
    HEAP32[i26 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i26 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    HEAP32[i27 >> 2] = 0;
    HEAP32[i27 + 4 >> 2] = 0;
    HEAP32[i27 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i27 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    HEAP32[i28 >> 2] = 0;
    HEAP32[i28 + 4 >> 2] = 0;
    HEAP32[i28 + 8 >> 2] = 0;
    i2 = 0;
    while (1) {
     if ((i2 | 0) == 3) break;
     HEAP32[i28 + (i2 << 2) >> 2] = 0;
     i2 = i2 + 1 | 0;
    }
    __THREW__ = 0;
    invoke_viiiiiiiiii(3, i10 | 0, i7 | 0, i29 | 0, i14 | 0, i15 | 0, i16 | 0, i26 | 0, i27 | 0, i28 | 0, i12 | 0);
    i10 = __THREW__;
    __THREW__ = 0;
    if (i10 & 1) i3 = ___cxa_find_matching_catch_2() | 0; else {
     i4 = HEAP32[i12 >> 2] | 0;
     if ((i9 | 0) > (i4 | 0)) {
      i10 = HEAP8[i28 + 11 >> 0] | 0;
      i2 = HEAP8[i27 + 11 >> 0] | 0;
      i2 = (i10 << 24 >> 24 < 0 ? HEAP32[i28 + 4 >> 2] | 0 : i10 & 255) + (i9 - i4 << 1 | 1) + (i2 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i2 & 255) | 0;
     } else {
      i10 = HEAP8[i28 + 11 >> 0] | 0;
      i2 = HEAP8[i27 + 11 >> 0] | 0;
      i2 = (i10 << 24 >> 24 < 0 ? HEAP32[i28 + 4 >> 2] | 0 : i10 & 255) + 2 + (i2 << 24 >> 24 < 0 ? HEAP32[i27 + 4 >> 2] | 0 : i2 & 255) | 0;
     }
     i2 = i2 + i4 | 0;
     do if (i2 >>> 0 > 100) {
      i5 = _malloc(i2) | 0;
      i2 = i5;
      if (!i5) {
       __THREW__ = 0;
       invoke_v(3);
       i10 = __THREW__;
       __THREW__ = 0;
       if (i10 & 1) {
        i3 = ___cxa_find_matching_catch_2() | 0;
        break;
       } else {
        i5 = 0;
        i4 = HEAP32[i12 >> 2] | 0;
        i20 = 37;
        break;
       }
      } else i20 = 37;
     } else {
      i2 = 0;
      i20 = 37;
     } while (0);
     if ((i20 | 0) == 37) {
      __THREW__ = 0;
      invoke_viiiiiiiiiiiiiii(1, i5 | 0, i17 | 0, i18 | 0, HEAP32[i24 + 4 >> 2] | 0, i3 | 0, i3 + i9 | 0, i8 | 0, i7 | 0, i14 | 0, HEAP8[i15 >> 0] | 0, HEAP8[i16 >> 0] | 0, i26 | 0, i27 | 0, i28 | 0, i4 | 0);
      i16 = __THREW__;
      __THREW__ = 0;
      if (!(i16 & 1) ? (HEAP32[i19 >> 2] = HEAP32[i22 >> 2], i22 = HEAP32[i17 >> 2] | 0, i23 = HEAP32[i18 >> 2] | 0, __THREW__ = 0, HEAP32[i13 >> 2] = HEAP32[i19 >> 2], i23 = invoke_iiiiiii(39, i13 | 0, i5 | 0, i22 | 0, i23 | 0, i24 | 0, i25 | 0) | 0, i25 = __THREW__, __THREW__ = 0, !(i25 & 1)) : 0) {
       if (i2 | 0) _free(i2);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i28);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
       __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i29 >> 2] | 0) | 0;
       if (i11 | 0) _free(i11);
       if (i1 | 0) _free(i1);
       STACKTOP = i21;
       return i23 | 0;
      }
      i3 = ___cxa_find_matching_catch_2() | 0;
     }
     if (i2 | 0) _free(i2);
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i28);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i27);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
    i2 = HEAP32[i29 >> 2] | 0;
   } while (0);
   __ZNSt3__214__shared_count16__release_sharedEv(i2) | 0;
   i2 = i11;
  }
 }
 if ((i20 | 0) == 8) i3 = ___cxa_find_matching_catch_2() | 0;
 if (i2 | 0) _free(i2);
 if (i1 | 0) _free(i1);
 ___resumeException(i3 | 0);
 return 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i5, i6, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 i8 = i16 + 424 | 0;
 i11 = i16;
 i1 = i16 + 24 | 0;
 i18 = i16 + 16 | 0;
 i10 = i16 + 12 | 0;
 i17 = i16 + 8 | 0;
 i7 = i16 + 564 | 0;
 i3 = i16 + 4 | 0;
 i9 = i16 + 464 | 0;
 HEAP32[i18 >> 2] = i1;
 i20 = i18 + 4 | 0;
 HEAP32[i20 >> 2] = 122;
 i4 = i1 + 400 | 0;
 __THREW__ = 0;
 i2 = invoke_ii(65, i6 | 0) | 0;
 i22 = __THREW__;
 __THREW__ = 0;
 if (!(i22 & 1)) {
  HEAP32[i17 >> 2] = i2;
  __THREW__ = 0;
  i2 = invoke_iii(15, i17 | 0, 18916) | 0;
  i22 = __THREW__;
  __THREW__ = 0;
  if (i22 & 1) i2 = ___cxa_find_matching_catch_2() | 0; else {
   HEAP8[i7 >> 0] = 0;
   HEAP32[i3 >> 2] = HEAP32[i14 >> 2];
   i1 = HEAP32[i6 + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
   i1 = invoke_iiiiiiiiiiii(2, i13 | 0, i8 | 0, i5 | 0, i17 | 0, i1 | 0, i15 | 0, i7 | 0, i2 | 0, i18 | 0, i10 | 0, i4 | 0) | 0;
   i22 = __THREW__;
   __THREW__ = 0;
   L7 : do if (i22 & 1) i21 = 11; else {
    L9 : do if (i1) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 48 >> 2] | 0, i2 | 0, 15009, 15019, i8 | 0) | 0;
     i22 = __THREW__;
     __THREW__ = 0;
     if (i22 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
      i1 = (HEAP32[i10 >> 2] | 0) - (HEAP32[i18 >> 2] | 0) | 0;
      if ((i1 | 0) > 392) {
       i1 = _malloc((i1 >> 2) + 2 | 0) | 0;
       i2 = i1;
       if (!i1) {
        __THREW__ = 0;
        invoke_v(3);
        i22 = __THREW__;
        __THREW__ = 0;
        if (!(i22 & 1)) {
         i1 = 0;
         i21 = 16;
        }
       } else i21 = 16;
      } else {
       i1 = i9;
       i2 = 0;
       i21 = 16;
      }
      do if ((i21 | 0) == 16) {
       if (HEAP8[i7 >> 0] | 0) {
        HEAP8[i1 >> 0] = 45;
        i1 = i1 + 1 | 0;
       }
       i6 = i8 + 40 | 0;
       i7 = i8;
       i5 = HEAP32[i18 >> 2] | 0;
       while (1) {
        if (i5 >>> 0 >= (HEAP32[i10 >> 2] | 0) >>> 0) break;
        i4 = HEAP32[i5 >> 2] | 0;
        i3 = i8;
        while (1) {
         if ((i3 | 0) == (i6 | 0)) {
          i3 = i6;
          break;
         }
         if ((HEAP32[i3 >> 2] | 0) == (i4 | 0)) break;
         i3 = i3 + 4 | 0;
        }
        HEAP8[i1 >> 0] = HEAP8[15009 + (i3 - i7 >> 2) >> 0] | 0;
        i5 = i5 + 4 | 0;
        i1 = i1 + 1 | 0;
       }
       HEAP8[i1 >> 0] = 0;
       HEAP32[i11 >> 2] = i12;
       if ((_sscanf(i9, 14894, i11) | 0) != 1 ? (__THREW__ = 0, invoke_vi(123, 14898), i22 = __THREW__, __THREW__ = 0, i22 & 1) : 0) break;
       if (i2 | 0) _free(i2);
       break L9;
      } while (0);
      i1 = ___cxa_find_matching_catch_2() | 0;
      if (i2 | 0) _free(i2);
     }
     break L7;
    } while (0);
    i1 = HEAP32[i13 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i22 = __THREW__;
      __THREW__ = 0;
      if (i22 & 1) {
       i21 = 11;
       break L7;
      }
     } else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i13 >> 2] = 0;
      i3 = 1;
      break;
     } else {
      i3 = (HEAP32[i13 >> 2] | 0) == 0;
      break;
     }
    } else i3 = 1; while (0);
    i2 = HEAP32[i14 >> 2] | 0;
    do if (i2) {
     i1 = HEAP32[i2 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] | 0, i2 | 0) | 0;
      i22 = __THREW__;
      __THREW__ = 0;
      if (i22 & 1) {
       i21 = 11;
       break L7;
      }
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i3) break; else {
      i21 = 46;
      break;
     } else {
      HEAP32[i14 >> 2] = 0;
      i21 = 44;
      break;
     }
    } else i21 = 44; while (0);
    if ((i21 | 0) == 44 ? i3 : 0) i21 = 46;
    if ((i21 | 0) == 46) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
    i2 = HEAP32[i13 >> 2] | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i17 >> 2] | 0) | 0;
    i1 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = 0;
    if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i20 >> 2] | 0, i1 | 0), i22 = __THREW__, __THREW__ = 0, i22 & 1) : 0) {
     i22 = ___cxa_find_matching_catch_3(0) | 0;
     ___clang_call_terminate(i22);
    }
    STACKTOP = i16;
    return i2 | 0;
   } while (0);
   if ((i21 | 0) == 11) i1 = ___cxa_find_matching_catch_2() | 0;
   i2 = i1;
  }
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i17 >> 2] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = 0;
  if (!i1) i19 = i2; else {
   i3 = HEAP32[i20 >> 2] | 0;
   i21 = 54;
  }
 } else {
  i2 = ___cxa_find_matching_catch_2() | 0;
  HEAP32[i18 >> 2] = 0;
  i3 = 122;
  i21 = 54;
 }
 if ((i21 | 0) == 54) {
  __THREW__ = 0;
  invoke_vi(i3 | 0, i1 | 0);
  i22 = __THREW__;
  __THREW__ = 0;
  if (i22 & 1) {
   i22 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i22);
  } else i19 = i2;
 }
 ___resumeException(i19 | 0);
 return 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe(i1, i13, i14, i5, i6, i15, i12) {
 i1 = i1 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 i8 = i16 + 24 | 0;
 i11 = i16;
 i1 = i16 + 140 | 0;
 i18 = i16 + 16 | 0;
 i10 = i16 + 12 | 0;
 i17 = i16 + 8 | 0;
 i7 = i16 + 136 | 0;
 i3 = i16 + 4 | 0;
 i9 = i16 + 36 | 0;
 HEAP32[i18 >> 2] = i1;
 i19 = i18 + 4 | 0;
 HEAP32[i19 >> 2] = 122;
 i4 = i1 + 100 | 0;
 __THREW__ = 0;
 i2 = invoke_ii(65, i6 | 0) | 0;
 i22 = __THREW__;
 __THREW__ = 0;
 if (!(i22 & 1)) {
  HEAP32[i17 >> 2] = i2;
  __THREW__ = 0;
  i2 = invoke_iii(15, i17 | 0, 18884) | 0;
  i22 = __THREW__;
  __THREW__ = 0;
  if (i22 & 1) i2 = ___cxa_find_matching_catch_2() | 0; else {
   HEAP8[i7 >> 0] = 0;
   HEAP32[i3 >> 2] = HEAP32[i14 >> 2];
   i1 = HEAP32[i6 + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
   i1 = invoke_iiiiiiiiiiii(1, i13 | 0, i8 | 0, i5 | 0, i17 | 0, i1 | 0, i15 | 0, i7 | 0, i2 | 0, i18 | 0, i10 | 0, i4 | 0) | 0;
   i22 = __THREW__;
   __THREW__ = 0;
   L7 : do if (i22 & 1) i21 = 11; else {
    L9 : do if (i1) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[i2 >> 2] | 0) + 32 >> 2] | 0, i2 | 0, 14883, 14893, i8 | 0) | 0;
     i22 = __THREW__;
     __THREW__ = 0;
     if (i22 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
      i1 = (HEAP32[i10 >> 2] | 0) - (HEAP32[i18 >> 2] | 0) | 0;
      if ((i1 | 0) > 98) {
       i1 = _malloc(i1 + 2 | 0) | 0;
       i2 = i1;
       if (!i1) {
        __THREW__ = 0;
        invoke_v(3);
        i22 = __THREW__;
        __THREW__ = 0;
        if (!(i22 & 1)) {
         i1 = 0;
         i21 = 16;
        }
       } else i21 = 16;
      } else {
       i1 = i9;
       i2 = 0;
       i21 = 16;
      }
      do if ((i21 | 0) == 16) {
       if (HEAP8[i7 >> 0] | 0) {
        HEAP8[i1 >> 0] = 45;
        i1 = i1 + 1 | 0;
       }
       i6 = i8 + 10 | 0;
       i7 = i8;
       i5 = HEAP32[i18 >> 2] | 0;
       while (1) {
        if (i5 >>> 0 >= (HEAP32[i10 >> 2] | 0) >>> 0) break;
        i4 = HEAP8[i5 >> 0] | 0;
        i3 = i8;
        while (1) {
         if ((i3 | 0) == (i6 | 0)) {
          i3 = i6;
          break;
         }
         if ((HEAP8[i3 >> 0] | 0) == i4 << 24 >> 24) break;
         i3 = i3 + 1 | 0;
        }
        HEAP8[i1 >> 0] = HEAP8[14883 + (i3 - i7) >> 0] | 0;
        i5 = i5 + 1 | 0;
        i1 = i1 + 1 | 0;
       }
       HEAP8[i1 >> 0] = 0;
       HEAP32[i11 >> 2] = i12;
       if ((_sscanf(i9, 14894, i11) | 0) != 1 ? (__THREW__ = 0, invoke_vi(123, 14898), i22 = __THREW__, __THREW__ = 0, i22 & 1) : 0) break;
       if (i2 | 0) _free(i2);
       break L9;
      } while (0);
      i1 = ___cxa_find_matching_catch_2() | 0;
      if (i2 | 0) _free(i2);
     }
     break L7;
    } while (0);
    i1 = HEAP32[i13 >> 2] | 0;
    do if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i22 = __THREW__;
      __THREW__ = 0;
      if (i22 & 1) {
       i21 = 11;
       break L7;
      }
      if ((i1 | 0) == -1) {
       HEAP32[i13 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i13 >> 2] | 0;
       break;
      }
     }
    } else i1 = 0; while (0);
    i2 = (i1 | 0) == 0;
    i1 = HEAP32[i14 >> 2] | 0;
    do if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i22 = __THREW__;
      __THREW__ = 0;
      if (i22 & 1) {
       i21 = 11;
       break L7;
      }
      if ((i1 | 0) == -1) {
       HEAP32[i14 >> 2] = 0;
       i21 = 43;
       break;
      }
     }
     if (!i2) i21 = 44;
    } else i21 = 43; while (0);
    if ((i21 | 0) == 43 ? i2 : 0) i21 = 44;
    if ((i21 | 0) == 44) HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
    i2 = HEAP32[i13 >> 2] | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i17 >> 2] | 0) | 0;
    i1 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = 0;
    if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i19 >> 2] | 0, i1 | 0), i22 = __THREW__, __THREW__ = 0, i22 & 1) : 0) {
     i22 = ___cxa_find_matching_catch_3(0) | 0;
     ___clang_call_terminate(i22);
    }
    STACKTOP = i16;
    return i2 | 0;
   } while (0);
   if ((i21 | 0) == 11) i1 = ___cxa_find_matching_catch_2() | 0;
   i2 = i1;
  }
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i17 >> 2] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = 0;
  if (!i1) i20 = i2; else {
   i3 = HEAP32[i19 >> 2] | 0;
   i21 = 52;
  }
 } else {
  i2 = ___cxa_find_matching_catch_2() | 0;
  HEAP32[i18 >> 2] = 0;
  i3 = 122;
  i21 = 52;
 }
 if ((i21 | 0) == 52) {
  __THREW__ = 0;
  invoke_vi(i3 | 0, i1 | 0);
  i22 = __THREW__;
  __THREW__ = 0;
  if (i22 & 1) {
   i22 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i22);
  } else i20 = i2;
 }
 ___resumeException(i20 | 0);
 return 0;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i(i30, i31, i32, i33, i1, i23, i24, i25, i26, i27, i12, i13, i14, i29, i15) {
 i30 = i30 | 0;
 i31 = i31 | 0;
 i32 = i32 | 0;
 i33 = i33 | 0;
 i1 = i1 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i26 = i26 | 0;
 i27 = i27 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i29 = i29 | 0;
 i15 = i15 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i21 = 0, i22 = 0, i28 = 0, i34 = 0;
 HEAP32[i32 >> 2] = i30;
 i16 = i29 + 8 + 3 | 0;
 i28 = i29 + 4 | 0;
 i17 = i14 + 8 + 3 | 0;
 i18 = i14 + 4 | 0;
 i19 = (i33 & 512 | 0) == 0;
 i20 = (i15 | 0) > 0;
 i21 = i13 + 11 | 0;
 i22 = i13 + 4 | 0;
 i11 = 0;
 while (1) {
  if ((i11 | 0) == 4) break;
  L4 : do switch (HEAP8[i26 + i11 >> 0] | 0) {
  case 0:
   {
    HEAP32[i31 >> 2] = HEAP32[i32 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i31 >> 2] = HEAP32[i32 >> 2];
    i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 44 >> 2] & 31](i24, 32) | 0;
    i10 = HEAP32[i32 >> 2] | 0;
    HEAP32[i32 >> 2] = i10 + 4;
    HEAP32[i10 >> 2] = i9;
    break;
   }
  case 3:
   {
    i10 = HEAP8[i16 >> 0] | 0;
    i2 = i10 << 24 >> 24 < 0;
    if ((i2 ? HEAP32[i28 >> 2] | 0 : i10 & 255) | 0) {
     i9 = HEAP32[(i2 ? HEAP32[i29 >> 2] | 0 : i29) >> 2] | 0;
     i10 = HEAP32[i32 >> 2] | 0;
     HEAP32[i32 >> 2] = i10 + 4;
     HEAP32[i10 >> 2] = i9;
    }
    break;
   }
  case 2:
   {
    i6 = HEAP8[i17 >> 0] | 0;
    i2 = i6 << 24 >> 24 < 0;
    i6 = i2 ? HEAP32[i18 >> 2] | 0 : i6 & 255;
    if (!(i19 | (i6 | 0) == 0)) {
     i5 = i2 ? HEAP32[i14 >> 2] | 0 : i14;
     i3 = i5 + (i6 << 2) | 0;
     i4 = HEAP32[i32 >> 2] | 0;
     i2 = i4;
     while (1) {
      if ((i5 | 0) == (i3 | 0)) break;
      HEAP32[i2 >> 2] = HEAP32[i5 >> 2];
      i2 = i2 + 4 | 0;
      i5 = i5 + 4 | 0;
     }
     HEAP32[i32 >> 2] = i4 + (i6 << 2);
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i32 >> 2] | 0;
    i1 = i25 ? i1 + 4 | 0 : i1;
    i2 = i1;
    while (1) {
     if (i2 >>> 0 >= i23 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i24 >> 2] | 0) + 12 >> 2] & 63](i24, 2048, HEAP32[i2 >> 2] | 0) | 0)) break;
     i2 = i2 + 4 | 0;
    }
    if (i20) {
     i5 = i15;
     while (1) {
      i4 = (i5 | 0) > 0;
      if (!(i2 >>> 0 > i1 >>> 0 & i4)) break;
      i10 = i2 + -4 | 0;
      i8 = HEAP32[i10 >> 2] | 0;
      i9 = HEAP32[i32 >> 2] | 0;
      HEAP32[i32 >> 2] = i9 + 4;
      HEAP32[i9 >> 2] = i8;
      i5 = i5 + -1 | 0;
      i2 = i10;
     }
     if (i4) i7 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 44 >> 2] & 31](i24, 48) | 0; else i7 = 0;
     i6 = HEAP32[i32 >> 2] | 0;
     while (1) {
      i4 = i6 + 4 | 0;
      if ((i5 | 0) <= 0) break;
      HEAP32[i6 >> 2] = i7;
      i5 = i5 + -1 | 0;
      i6 = i4;
     }
     HEAP32[i32 >> 2] = i4;
     HEAP32[i6 >> 2] = i27;
    }
    if ((i2 | 0) == (i1 | 0)) {
     i9 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i24 >> 2] | 0) + 44 >> 2] & 31](i24, 48) | 0;
     i10 = HEAP32[i32 >> 2] | 0;
     i2 = i10 + 4 | 0;
     HEAP32[i32 >> 2] = i2;
     HEAP32[i10 >> 2] = i9;
    } else {
     i10 = HEAP8[i21 >> 0] | 0;
     i9 = i10 << 24 >> 24 < 0;
     i10 = i9 ? HEAP32[i22 >> 2] | 0 : i10 & 255;
     if (!i10) {
      i6 = -1;
      i4 = 0;
      i7 = 0;
     } else {
      i6 = HEAP8[(i9 ? HEAP32[i13 >> 2] | 0 : i13) >> 0] | 0;
      i4 = 0;
      i7 = 0;
     }
     while (1) {
      if ((i2 | 0) == (i1 | 0)) break;
      i5 = HEAP32[i32 >> 2] | 0;
      if ((i7 | 0) == (i6 | 0)) {
       i8 = i5 + 4 | 0;
       HEAP32[i32 >> 2] = i8;
       HEAP32[i5 >> 2] = i12;
       i4 = i4 + 1 | 0;
       if (i4 >>> 0 < i10 >>> 0) {
        i6 = HEAP8[(i9 ? HEAP32[i13 >> 2] | 0 : i13) + i4 >> 0] | 0;
        i6 = i6 << 24 >> 24 == 127 ? -1 : i6 << 24 >> 24;
        i7 = 0;
        i5 = i8;
       } else {
        i6 = i7;
        i7 = 0;
        i5 = i8;
       }
      }
      i8 = i2 + -4 | 0;
      i34 = HEAP32[i8 >> 2] | 0;
      HEAP32[i32 >> 2] = i5 + 4;
      HEAP32[i5 >> 2] = i34;
      i7 = i7 + 1 | 0;
      i2 = i8;
     }
     i2 = HEAP32[i32 >> 2] | 0;
    }
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -4 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i34 = HEAP32[i3 >> 2] | 0;
     HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i2 >> 2] = i34;
     i3 = i3 + 4 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i11 = i11 + 1 | 0;
 }
 i1 = HEAP8[i16 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 i1 = i2 ? HEAP32[i28 >> 2] | 0 : i1 & 255;
 if (i1 >>> 0 > 1) {
  i2 = i2 ? HEAP32[i29 >> 2] | 0 : i29;
  i5 = i2 + 4 | 0;
  i2 = i2 + (i1 << 2) | 0;
  i3 = HEAP32[i32 >> 2] | 0;
  i4 = i2 - i5 | 0;
  i1 = i3;
  while (1) {
   if ((i5 | 0) == (i2 | 0)) break;
   HEAP32[i1 >> 2] = HEAP32[i5 >> 2];
   i1 = i1 + 4 | 0;
   i5 = i5 + 4 | 0;
  }
  HEAP32[i32 >> 2] = i3 + (i4 >>> 2 << 2);
 }
 switch ((i33 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i31 >> 2] = HEAP32[i32 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i31 >> 2] = i30;
 }
 return;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i(i28, i29, i30, i31, i1, i21, i22, i23, i24, i25, i9, i10, i11, i27, i12) {
 i28 = i28 | 0;
 i29 = i29 | 0;
 i30 = i30 | 0;
 i31 = i31 | 0;
 i1 = i1 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 i24 = i24 | 0;
 i25 = i25 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i27 = i27 | 0;
 i12 = i12 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0, i26 = 0, i32 = 0, i33 = 0;
 HEAP32[i30 >> 2] = i28;
 i13 = i27 + 11 | 0;
 i26 = i27 + 4 | 0;
 i14 = i11 + 11 | 0;
 i15 = i11 + 4 | 0;
 i16 = (i31 & 512 | 0) == 0;
 i17 = i22 + 8 | 0;
 i18 = (i12 | 0) > 0;
 i19 = i10 + 11 | 0;
 i20 = i10 + 4 | 0;
 i8 = 0;
 while (1) {
  if ((i8 | 0) == 4) break;
  L4 : do switch (HEAP8[i24 + i8 >> 0] | 0) {
  case 0:
   {
    HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
    break;
   }
  case 1:
   {
    HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
    i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 31](i22, 32) | 0;
    i7 = HEAP32[i30 >> 2] | 0;
    HEAP32[i30 >> 2] = i7 + 1;
    HEAP8[i7 >> 0] = i6;
    break;
   }
  case 3:
   {
    i7 = HEAP8[i13 >> 0] | 0;
    i2 = i7 << 24 >> 24 < 0;
    if ((i2 ? HEAP32[i26 >> 2] | 0 : i7 & 255) | 0) {
     i6 = HEAP8[(i2 ? HEAP32[i27 >> 2] | 0 : i27) >> 0] | 0;
     i7 = HEAP32[i30 >> 2] | 0;
     HEAP32[i30 >> 2] = i7 + 1;
     HEAP8[i7 >> 0] = i6;
    }
    break;
   }
  case 2:
   {
    i3 = HEAP8[i14 >> 0] | 0;
    i2 = i3 << 24 >> 24 < 0;
    i3 = i2 ? HEAP32[i15 >> 2] | 0 : i3 & 255;
    if (!(i16 | (i3 | 0) == 0)) {
     i7 = i2 ? HEAP32[i11 >> 2] | 0 : i11;
     i4 = i7 + i3 | 0;
     i2 = HEAP32[i30 >> 2] | 0;
     i3 = i7;
     while (1) {
      if ((i3 | 0) == (i4 | 0)) break;
      HEAP8[i2 >> 0] = HEAP8[i3 >> 0] | 0;
      i2 = i2 + 1 | 0;
      i3 = i3 + 1 | 0;
     }
     HEAP32[i30 >> 2] = i2;
    }
    break;
   }
  case 4:
   {
    i3 = HEAP32[i30 >> 2] | 0;
    i1 = i23 ? i1 + 1 | 0 : i1;
    i4 = i1;
    while (1) {
     if (i4 >>> 0 >= i21 >>> 0) break;
     i2 = HEAP8[i4 >> 0] | 0;
     if (i2 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[i17 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break;
     i4 = i4 + 1 | 0;
    }
    if (i18) {
     i5 = i12;
     while (1) {
      i2 = (i5 | 0) > 0;
      if (!(i4 >>> 0 > i1 >>> 0 & i2)) break;
      i7 = i4 + -1 | 0;
      i2 = HEAP8[i7 >> 0] | 0;
      i6 = HEAP32[i30 >> 2] | 0;
      HEAP32[i30 >> 2] = i6 + 1;
      HEAP8[i6 >> 0] = i2;
      i5 = i5 + -1 | 0;
      i4 = i7;
     }
     if (i2) i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 31](i22, 48) | 0; else i6 = 0;
     i2 = i5;
     while (1) {
      i5 = HEAP32[i30 >> 2] | 0;
      HEAP32[i30 >> 2] = i5 + 1;
      if ((i2 | 0) <= 0) break;
      HEAP8[i5 >> 0] = i6;
      i2 = i2 + -1 | 0;
     }
     HEAP8[i5 >> 0] = i25;
    }
    L35 : do if ((i4 | 0) == (i1 | 0)) {
     i6 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i22 >> 2] | 0) + 28 >> 2] & 31](i22, 48) | 0;
     i7 = HEAP32[i30 >> 2] | 0;
     HEAP32[i30 >> 2] = i7 + 1;
     HEAP8[i7 >> 0] = i6;
    } else {
     i7 = HEAP8[i19 >> 0] | 0;
     i2 = i7 << 24 >> 24 < 0;
     if (!((i2 ? HEAP32[i20 >> 2] | 0 : i7 & 255) | 0)) {
      i6 = -1;
      i5 = 0;
      i7 = 0;
     } else {
      i6 = HEAP8[(i2 ? HEAP32[i10 >> 2] | 0 : i10) >> 0] | 0;
      i5 = 0;
      i7 = 0;
     }
     while (1) {
      if ((i4 | 0) == (i1 | 0)) break L35;
      if ((i7 | 0) == (i6 | 0)) {
       i6 = HEAP32[i30 >> 2] | 0;
       HEAP32[i30 >> 2] = i6 + 1;
       HEAP8[i6 >> 0] = i9;
       i5 = i5 + 1 | 0;
       i6 = HEAP8[i19 >> 0] | 0;
       i2 = i6 << 24 >> 24 < 0;
       if (i5 >>> 0 < (i2 ? HEAP32[i20 >> 2] | 0 : i6 & 255) >>> 0) {
        i6 = HEAP8[(i2 ? HEAP32[i10 >> 2] | 0 : i10) + i5 >> 0] | 0;
        i6 = i6 << 24 >> 24 == 127 ? -1 : i6 << 24 >> 24;
        i2 = 0;
       } else {
        i6 = i7;
        i2 = 0;
       }
      } else i2 = i7;
      i32 = i4 + -1 | 0;
      i33 = HEAP8[i32 >> 0] | 0;
      i7 = HEAP32[i30 >> 2] | 0;
      HEAP32[i30 >> 2] = i7 + 1;
      HEAP8[i7 >> 0] = i33;
      i7 = i2 + 1 | 0;
      i4 = i32;
     }
    } while (0);
    i2 = HEAP32[i30 >> 2] | 0;
    if ((i3 | 0) != (i2 | 0)) while (1) {
     i2 = i2 + -1 | 0;
     if (i3 >>> 0 >= i2 >>> 0) break L4;
     i33 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i33;
     i3 = i3 + 1 | 0;
    }
    break;
   }
  default:
   {}
  } while (0);
  i8 = i8 + 1 | 0;
 }
 i1 = HEAP8[i13 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 i1 = i2 ? HEAP32[i26 >> 2] | 0 : i1 & 255;
 if (i1 >>> 0 > 1) {
  i33 = i2 ? HEAP32[i27 >> 2] | 0 : i27;
  i3 = i33 + i1 | 0;
  i2 = HEAP32[i30 >> 2] | 0;
  i1 = i33;
  while (1) {
   i1 = i1 + 1 | 0;
   if ((i1 | 0) == (i3 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i2 = i2 + 1 | 0;
  }
  HEAP32[i30 >> 2] = i2;
 }
 switch ((i31 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[i29 >> 2] = HEAP32[i30 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[i29 >> 2] = i28;
 }
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i19, i3, i21, i22, i23) {
 i1 = i1 | 0;
 i19 = i19 | 0;
 i3 = i3 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 i10 = i18 + 468 | 0;
 i28 = i18 + 464 | 0;
 i15 = i18 + 472 | 0;
 i16 = i18 + 460 | 0;
 i17 = i18 + 456 | 0;
 i24 = i18 + 444 | 0;
 i25 = i18 + 432 | 0;
 i26 = i18 + 420 | 0;
 i9 = i18 + 416 | 0;
 i4 = i18 + 16 | 0;
 i11 = i18 + 8 | 0;
 i12 = i18 + 4 | 0;
 i13 = i18;
 HEAP32[i28 >> 2] = __ZNKSt3__28ios_base6getlocEv(i21) | 0;
 __THREW__ = 0;
 i14 = invoke_iii(15, i28 | 0, 18916) | 0;
 i8 = __THREW__;
 __THREW__ = 0;
 L1 : do if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i6 = i23 + 8 + 3 | 0;
  i7 = HEAP8[i6 >> 0] | 0;
  i1 = i7 << 24 >> 24 < 0;
  i8 = i23 + 4 | 0;
  do if ((i1 ? HEAP32[i8 >> 2] | 0 : i7 & 255) | 0) {
   i1 = HEAP32[(i1 ? HEAP32[i23 >> 2] | 0 : i23) >> 2] | 0;
   __THREW__ = 0;
   i2 = invoke_iii(HEAP32[(HEAP32[i14 >> 2] | 0) + 44 >> 2] | 0, i14 | 0, 45) | 0;
   i7 = __THREW__;
   __THREW__ = 0;
   if (i7 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L1;
   } else {
    i7 = (i1 | 0) == (i2 | 0);
    break;
   }
  } else i7 = 0; while (0);
  HEAP32[i24 >> 2] = 0;
  HEAP32[i24 + 4 >> 2] = 0;
  HEAP32[i24 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i24 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i25 >> 2] = 0;
  HEAP32[i25 + 4 >> 2] = 0;
  HEAP32[i25 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i25 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i26 >> 2] = 0;
  HEAP32[i26 + 4 >> 2] = 0;
  HEAP32[i26 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i26 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(4, i3 | 0, i7 | 0, i28 | 0, i15 | 0, i16 | 0, i17 | 0, i24 | 0, i25 | 0, i26 | 0, i9 | 0);
  i5 = __THREW__;
  __THREW__ = 0;
  if (i5 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
   i5 = HEAP8[i6 >> 0] | 0;
   i3 = HEAP32[i8 >> 2] | 0;
   i2 = i5 << 24 >> 24 < 0 ? i3 : i5 & 255;
   i1 = HEAP32[i9 >> 2] | 0;
   if ((i2 | 0) > (i1 | 0)) {
    i30 = HEAP8[i26 + 8 + 3 >> 0] | 0;
    i29 = HEAP8[i25 + 8 + 3 >> 0] | 0;
    i2 = (i30 << 24 >> 24 < 0 ? HEAP32[i26 + 4 >> 2] | 0 : i30 & 255) + (i2 - i1 << 1 | 1) + (i29 << 24 >> 24 < 0 ? HEAP32[i25 + 4 >> 2] | 0 : i29 & 255) | 0;
   } else {
    i30 = HEAP8[i26 + 8 + 3 >> 0] | 0;
    i2 = HEAP8[i25 + 8 + 3 >> 0] | 0;
    i2 = (i30 << 24 >> 24 < 0 ? HEAP32[i26 + 4 >> 2] | 0 : i30 & 255) + 2 + (i2 << 24 >> 24 < 0 ? HEAP32[i25 + 4 >> 2] | 0 : i2 & 255) | 0;
   }
   i2 = i2 + i1 | 0;
   do if (i2 >>> 0 > 100) {
    i4 = _malloc(i2 << 2) | 0;
    i2 = i4;
    if (!i4) {
     __THREW__ = 0;
     invoke_v(3);
     i30 = __THREW__;
     __THREW__ = 0;
     if (i30 & 1) {
      i1 = ___cxa_find_matching_catch_2() | 0;
      break;
     } else {
      i4 = 0;
      i5 = HEAP8[i6 >> 0] | 0;
      i3 = HEAP32[i8 >> 2] | 0;
      i1 = HEAP32[i9 >> 2] | 0;
      i27 = 26;
      break;
     }
    } else i27 = 26;
   } else {
    i2 = 0;
    i27 = 26;
   } while (0);
   if ((i27 | 0) == 26) {
    i30 = i5 << 24 >> 24 < 0;
    i29 = i30 ? HEAP32[i23 >> 2] | 0 : i23;
    __THREW__ = 0;
    invoke_viiiiiiiiiiiiiii(2, i4 | 0, i11 | 0, i12 | 0, HEAP32[i21 + 4 >> 2] | 0, i29 | 0, i29 + ((i30 ? i3 : i5 & 255) << 2) | 0, i14 | 0, i7 | 0, i15 | 0, HEAP32[i16 >> 2] | 0, HEAP32[i17 >> 2] | 0, i24 | 0, i25 | 0, i26 | 0, i1 | 0);
    i30 = __THREW__;
    __THREW__ = 0;
    if (!(i30 & 1) ? (HEAP32[i13 >> 2] = HEAP32[i19 >> 2], i30 = HEAP32[i11 >> 2] | 0, i20 = HEAP32[i12 >> 2] | 0, __THREW__ = 0, HEAP32[i10 >> 2] = HEAP32[i13 >> 2], i20 = invoke_iiiiiii(40, i10 | 0, i4 | 0, i30 | 0, i20 | 0, i21 | 0, i22 | 0) | 0, i30 = __THREW__, __THREW__ = 0, !(i30 & 1)) : 0) {
     if (i2 | 0) _free(i2);
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i25);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i28 >> 2] | 0) | 0;
     STACKTOP = i18;
     return i20 | 0;
    }
    i1 = ___cxa_find_matching_catch_2() | 0;
   }
   if (i2 | 0) _free(i2);
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i26);
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i25);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 } while (0);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i28 >> 2] | 0) | 0;
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i19, i3, i21, i22, i23) {
 i1 = i1 | 0;
 i19 = i19 | 0;
 i3 = i3 | 0;
 i21 = i21 | 0;
 i22 = i22 | 0;
 i23 = i23 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i20 = 0, i24 = 0, i25 = 0, i26 = 0, i27 = 0, i28 = 0, i29 = 0, i30 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i10 = i18 + 56 | 0;
 i28 = i18 + 52 | 0;
 i15 = i18 + 164 | 0;
 i16 = i18 + 161 | 0;
 i17 = i18 + 160 | 0;
 i24 = i18 + 40 | 0;
 i25 = i18 + 28 | 0;
 i26 = i18 + 16 | 0;
 i9 = i18 + 12 | 0;
 i4 = i18 + 60 | 0;
 i11 = i18 + 8 | 0;
 i12 = i18 + 4 | 0;
 i13 = i18;
 HEAP32[i28 >> 2] = __ZNKSt3__28ios_base6getlocEv(i21) | 0;
 __THREW__ = 0;
 i14 = invoke_iii(15, i28 | 0, 18884) | 0;
 i8 = __THREW__;
 __THREW__ = 0;
 L1 : do if (i8 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
  i6 = i23 + 11 | 0;
  i7 = HEAP8[i6 >> 0] | 0;
  i1 = i7 << 24 >> 24 < 0;
  i8 = i23 + 4 | 0;
  do if ((i1 ? HEAP32[i8 >> 2] | 0 : i7 & 255) | 0) {
   i1 = HEAP8[(i1 ? HEAP32[i23 >> 2] | 0 : i23) >> 0] | 0;
   __THREW__ = 0;
   i2 = invoke_iii(HEAP32[(HEAP32[i14 >> 2] | 0) + 28 >> 2] | 0, i14 | 0, 45) | 0;
   i7 = __THREW__;
   __THREW__ = 0;
   if (i7 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break L1;
   } else {
    i7 = i1 << 24 >> 24 == i2 << 24 >> 24;
    break;
   }
  } else i7 = 0; while (0);
  HEAP32[i24 >> 2] = 0;
  HEAP32[i24 + 4 >> 2] = 0;
  HEAP32[i24 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i24 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i25 >> 2] = 0;
  HEAP32[i25 + 4 >> 2] = 0;
  HEAP32[i25 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i25 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i26 >> 2] = 0;
  HEAP32[i26 + 4 >> 2] = 0;
  HEAP32[i26 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i26 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  __THREW__ = 0;
  invoke_viiiiiiiiii(3, i3 | 0, i7 | 0, i28 | 0, i15 | 0, i16 | 0, i17 | 0, i24 | 0, i25 | 0, i26 | 0, i9 | 0);
  i5 = __THREW__;
  __THREW__ = 0;
  if (i5 & 1) i1 = ___cxa_find_matching_catch_2() | 0; else {
   i5 = HEAP8[i6 >> 0] | 0;
   i3 = HEAP32[i8 >> 2] | 0;
   i2 = i5 << 24 >> 24 < 0 ? i3 : i5 & 255;
   i1 = HEAP32[i9 >> 2] | 0;
   if ((i2 | 0) > (i1 | 0)) {
    i30 = HEAP8[i26 + 11 >> 0] | 0;
    i29 = HEAP8[i25 + 11 >> 0] | 0;
    i2 = (i30 << 24 >> 24 < 0 ? HEAP32[i26 + 4 >> 2] | 0 : i30 & 255) + (i2 - i1 << 1 | 1) + (i29 << 24 >> 24 < 0 ? HEAP32[i25 + 4 >> 2] | 0 : i29 & 255) | 0;
   } else {
    i30 = HEAP8[i26 + 11 >> 0] | 0;
    i2 = HEAP8[i25 + 11 >> 0] | 0;
    i2 = (i30 << 24 >> 24 < 0 ? HEAP32[i26 + 4 >> 2] | 0 : i30 & 255) + 2 + (i2 << 24 >> 24 < 0 ? HEAP32[i25 + 4 >> 2] | 0 : i2 & 255) | 0;
   }
   i2 = i2 + i1 | 0;
   do if (i2 >>> 0 > 100) {
    i4 = _malloc(i2) | 0;
    i2 = i4;
    if (!i4) {
     __THREW__ = 0;
     invoke_v(3);
     i30 = __THREW__;
     __THREW__ = 0;
     if (i30 & 1) {
      i1 = ___cxa_find_matching_catch_2() | 0;
      break;
     } else {
      i4 = 0;
      i5 = HEAP8[i6 >> 0] | 0;
      i3 = HEAP32[i8 >> 2] | 0;
      i1 = HEAP32[i9 >> 2] | 0;
      i27 = 26;
      break;
     }
    } else i27 = 26;
   } else {
    i2 = 0;
    i27 = 26;
   } while (0);
   if ((i27 | 0) == 26) {
    i30 = i5 << 24 >> 24 < 0;
    i29 = i30 ? HEAP32[i23 >> 2] | 0 : i23;
    __THREW__ = 0;
    invoke_viiiiiiiiiiiiiii(1, i4 | 0, i11 | 0, i12 | 0, HEAP32[i21 + 4 >> 2] | 0, i29 | 0, i29 + (i30 ? i3 : i5 & 255) | 0, i14 | 0, i7 | 0, i15 | 0, HEAP8[i16 >> 0] | 0, HEAP8[i17 >> 0] | 0, i24 | 0, i25 | 0, i26 | 0, i1 | 0);
    i30 = __THREW__;
    __THREW__ = 0;
    if (!(i30 & 1) ? (HEAP32[i13 >> 2] = HEAP32[i19 >> 2], i30 = HEAP32[i11 >> 2] | 0, i20 = HEAP32[i12 >> 2] | 0, __THREW__ = 0, HEAP32[i10 >> 2] = HEAP32[i13 >> 2], i20 = invoke_iiiiiii(39, i10 | 0, i4 | 0, i30 | 0, i20 | 0, i21 | 0, i22 | 0) | 0, i30 = __THREW__, __THREW__ = 0, !(i30 & 1)) : 0) {
     if (i2 | 0) _free(i2);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i28 >> 2] | 0) | 0;
     STACKTOP = i18;
     return i20 | 0;
    }
    i1 = ___cxa_find_matching_catch_2() | 0;
   }
   if (i2 | 0) _free(i2);
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i26);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i25);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i24);
 } while (0);
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i28 >> 2] | 0) | 0;
 ___resumeException(i1 | 0);
 return 0;
}

function _try_realloc_chunk(i14, i11) {
 i14 = i14 | 0;
 i11 = i11 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0;
 i12 = i14 + 4 | 0;
 i13 = HEAP32[i12 >> 2] | 0;
 i1 = i13 & -8;
 i8 = i14 + i1 | 0;
 i6 = HEAP32[4338] | 0;
 i2 = i13 & 3;
 if (!((i2 | 0) != 1 & i14 >>> 0 >= i6 >>> 0 & i14 >>> 0 < i8 >>> 0)) _abort();
 i3 = HEAP32[i8 + 4 >> 2] | 0;
 if (!(i3 & 1)) _abort();
 if (!i2) {
  if (i11 >>> 0 < 256) {
   i14 = 0;
   return i14 | 0;
  }
  if (i1 >>> 0 >= (i11 + 4 | 0) >>> 0 ? (i1 - i11 | 0) >>> 0 <= HEAP32[4454] << 1 >>> 0 : 0) return i14 | 0;
  i14 = 0;
  return i14 | 0;
 }
 if (i1 >>> 0 >= i11 >>> 0) {
  i1 = i1 - i11 | 0;
  if (i1 >>> 0 <= 15) return i14 | 0;
  i10 = i14 + i11 | 0;
  HEAP32[i12 >> 2] = i13 & 1 | i11 | 2;
  HEAP32[i10 + 4 >> 2] = i1 | 3;
  i13 = i10 + i1 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i10, i1);
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[4340] | 0)) {
  i1 = (HEAP32[4337] | 0) + i1 | 0;
  if (i1 >>> 0 <= i11 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i10 = i1 - i11 | 0;
  i9 = i14 + i11 | 0;
  HEAP32[i12 >> 2] = i13 & 1 | i11 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 1;
  HEAP32[4340] = i9;
  HEAP32[4337] = i10;
  return i14 | 0;
 }
 if ((i8 | 0) == (HEAP32[4339] | 0)) {
  i2 = (HEAP32[4336] | 0) + i1 | 0;
  if (i2 >>> 0 < i11 >>> 0) {
   i14 = 0;
   return i14 | 0;
  }
  i1 = i2 - i11 | 0;
  if (i1 >>> 0 > 15) {
   i2 = i14 + i11 | 0;
   i10 = i2 + i1 | 0;
   HEAP32[i12 >> 2] = i13 & 1 | i11 | 2;
   HEAP32[i2 + 4 >> 2] = i1 | 1;
   HEAP32[i10 >> 2] = i1;
   i13 = i10 + 4 | 0;
   HEAP32[i13 >> 2] = HEAP32[i13 >> 2] & -2;
  } else {
   HEAP32[i12 >> 2] = i13 & 1 | i2 | 2;
   i2 = i14 + i2 + 4 | 0;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
   i2 = 0;
   i1 = 0;
  }
  HEAP32[4336] = i1;
  HEAP32[4339] = i2;
  return i14 | 0;
 }
 if (i3 & 2 | 0) {
  i14 = 0;
  return i14 | 0;
 }
 i9 = (i3 & -8) + i1 | 0;
 if (i9 >>> 0 < i11 >>> 0) {
  i14 = 0;
  return i14 | 0;
 }
 i10 = i9 - i11 | 0;
 i4 = i3 >>> 3;
 do if (i3 >>> 0 >= 256) {
  i5 = HEAP32[i8 + 24 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  do if ((i3 | 0) == (i8 | 0)) {
   i3 = i8 + 16 | 0;
   i2 = i3 + 4 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (!i1) {
    i1 = HEAP32[i3 >> 2] | 0;
    if (!i1) {
     i7 = 0;
     break;
    } else i2 = i3;
   }
   while (1) {
    i3 = i1 + 20 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (i4 | 0) {
     i1 = i4;
     i2 = i3;
     continue;
    }
    i3 = i1 + 16 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if (!i4) break; else {
     i1 = i4;
     i2 = i3;
    }
   }
   if (i2 >>> 0 < i6 >>> 0) _abort(); else {
    HEAP32[i2 >> 2] = 0;
    i7 = i1;
    break;
   }
  } else {
   i4 = HEAP32[i8 + 8 >> 2] | 0;
   if (i4 >>> 0 < i6 >>> 0) _abort();
   i1 = i4 + 12 | 0;
   if ((HEAP32[i1 >> 2] | 0) != (i8 | 0)) _abort();
   i2 = i3 + 8 | 0;
   if ((HEAP32[i2 >> 2] | 0) == (i8 | 0)) {
    HEAP32[i1 >> 2] = i3;
    HEAP32[i2 >> 2] = i4;
    i7 = i3;
    break;
   } else _abort();
  } while (0);
  if (i5 | 0) {
   i1 = HEAP32[i8 + 28 >> 2] | 0;
   i2 = 17640 + (i1 << 2) | 0;
   if ((i8 | 0) == (HEAP32[i2 >> 2] | 0)) {
    HEAP32[i2 >> 2] = i7;
    if (!i7) {
     HEAP32[4335] = HEAP32[4335] & ~(1 << i1);
     break;
    }
   } else {
    if (i5 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort();
    i1 = i5 + 16 | 0;
    if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) HEAP32[i1 >> 2] = i7; else HEAP32[i5 + 20 >> 2] = i7;
    if (!i7) break;
   }
   i3 = HEAP32[4338] | 0;
   if (i7 >>> 0 < i3 >>> 0) _abort();
   HEAP32[i7 + 24 >> 2] = i5;
   i1 = i8 + 16 | 0;
   i2 = HEAP32[i1 >> 2] | 0;
   do if (i2 | 0) if (i2 >>> 0 < i3 >>> 0) _abort(); else {
    HEAP32[i7 + 16 >> 2] = i2;
    HEAP32[i2 + 24 >> 2] = i7;
    break;
   } while (0);
   i1 = HEAP32[i1 + 4 >> 2] | 0;
   if (i1 | 0) if (i1 >>> 0 < (HEAP32[4338] | 0) >>> 0) _abort(); else {
    HEAP32[i7 + 20 >> 2] = i1;
    HEAP32[i1 + 24 >> 2] = i7;
    break;
   }
  }
 } else {
  i2 = HEAP32[i8 + 8 >> 2] | 0;
  i3 = HEAP32[i8 + 12 >> 2] | 0;
  i1 = 17376 + (i4 << 1 << 2) | 0;
  if ((i2 | 0) != (i1 | 0)) {
   if (i2 >>> 0 < i6 >>> 0) _abort();
   if ((HEAP32[i2 + 12 >> 2] | 0) != (i8 | 0)) _abort();
  }
  if ((i3 | 0) == (i2 | 0)) {
   HEAP32[4334] = HEAP32[4334] & ~(1 << i4);
   break;
  }
  if ((i3 | 0) != (i1 | 0)) {
   if (i3 >>> 0 < i6 >>> 0) _abort();
   i1 = i3 + 8 | 0;
   if ((HEAP32[i1 >> 2] | 0) == (i8 | 0)) i5 = i1; else _abort();
  } else i5 = i3 + 8 | 0;
  HEAP32[i2 + 12 >> 2] = i3;
  HEAP32[i5 >> 2] = i2;
 } while (0);
 if (i10 >>> 0 < 16) {
  HEAP32[i12 >> 2] = i9 | i13 & 1 | 2;
  i13 = i14 + i9 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  return i14 | 0;
 } else {
  i9 = i14 + i11 | 0;
  HEAP32[i12 >> 2] = i13 & 1 | i11 | 2;
  HEAP32[i9 + 4 >> 2] = i10 | 3;
  i13 = i9 + i10 + 4 | 0;
  HEAP32[i13 >> 2] = HEAP32[i13 >> 2] | 1;
  _dispose_chunk(i9, i10);
  return i14 | 0;
 }
 return 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE(i1, i12, i13, i7, i6, i14, i10) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i11 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 i3 = i15 + 424 | 0;
 i1 = i15 + 24 | 0;
 i18 = i15 + 16 | 0;
 i9 = i15 + 8 | 0;
 i16 = i15 + 4 | 0;
 i8 = i15 + 428 | 0;
 i4 = i15;
 HEAP32[i18 >> 2] = i1;
 i20 = i18 + 4 | 0;
 HEAP32[i20 >> 2] = 122;
 i5 = i1 + 400 | 0;
 __THREW__ = 0;
 i2 = invoke_ii(65, i6 | 0) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (!(i11 & 1)) {
  HEAP32[i16 >> 2] = i2;
  __THREW__ = 0;
  i2 = invoke_iii(15, i16 | 0, 18916) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) i2 = ___cxa_find_matching_catch_2() | 0; else {
   HEAP8[i8 >> 0] = 0;
   i11 = HEAP32[i13 >> 2] | 0;
   HEAP32[i4 >> 2] = i11;
   i1 = HEAP32[i6 + 4 >> 2] | 0;
   i6 = i11;
   __THREW__ = 0;
   HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
   i1 = invoke_iiiiiiiiiiii(2, i12 | 0, i3 | 0, i7 | 0, i16 | 0, i1 | 0, i14 | 0, i8 | 0, i2 | 0, i18 | 0, i9 | 0, i5 | 0) | 0;
   i7 = __THREW__;
   __THREW__ = 0;
   L7 : do if (i7 & 1) i19 = 13; else {
    if (i1) {
     i1 = i10 + 8 + 3 | 0;
     if ((HEAP8[i1 >> 0] | 0) < 0) {
      HEAP32[HEAP32[i10 >> 2] >> 2] = 0;
      HEAP32[i10 + 4 >> 2] = 0;
     } else {
      HEAP32[i10 >> 2] = 0;
      HEAP8[i1 >> 0] = 0;
     }
     if (HEAP8[i8 >> 0] | 0) {
      __THREW__ = 0;
      i1 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] | 0, i2 | 0, 45) | 0;
      i8 = __THREW__;
      __THREW__ = 0;
      if (i8 & 1) {
       i19 = 13;
       break;
      }
      __THREW__ = 0;
      invoke_vii(48, i10 | 0, i1 | 0);
      i8 = __THREW__;
      __THREW__ = 0;
      if (i8 & 1) {
       i19 = 13;
       break;
      }
     }
     __THREW__ = 0;
     i4 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 44 >> 2] | 0, i2 | 0, 48) | 0;
     i8 = __THREW__;
     __THREW__ = 0;
     if (i8 & 1) {
      i19 = 13;
      break;
     }
     i2 = HEAP32[i9 >> 2] | 0;
     i3 = i2 + -4 | 0;
     i1 = HEAP32[i18 >> 2] | 0;
     while (1) {
      if (i1 >>> 0 >= i3 >>> 0) break;
      if ((HEAP32[i1 >> 2] | 0) != (i4 | 0)) break;
      i1 = i1 + 4 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(32, i10 | 0, i1 | 0, i2 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i1 = ___cxa_find_matching_catch_2() | 0;
      break;
     }
    }
    i1 = HEAP32[i12 >> 2] | 0;
    do if (i1) {
     i2 = HEAP32[i1 + 12 >> 2] | 0;
     if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i19 = 13;
       break L7;
      }
     } else i1 = HEAP32[i2 >> 2] | 0;
     if ((i1 | 0) == -1) {
      HEAP32[i12 >> 2] = 0;
      i2 = 1;
      break;
     } else {
      i2 = (HEAP32[i12 >> 2] | 0) == 0;
      break;
     }
    } else i2 = 1; while (0);
    do if (i11) {
     i1 = HEAP32[i6 + 12 >> 2] | 0;
     if ((i1 | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i11 = __THREW__;
      __THREW__ = 0;
      if (i11 & 1) {
       i19 = 13;
       break L7;
      }
     } else i1 = HEAP32[i1 >> 2] | 0;
     if ((i1 | 0) != -1) if (i2) break; else {
      i19 = 36;
      break;
     } else {
      HEAP32[i13 >> 2] = 0;
      i19 = 34;
      break;
     }
    } else i19 = 34; while (0);
    if ((i19 | 0) == 34 ? i2 : 0) i19 = 36;
    if ((i19 | 0) == 36) HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
    i2 = HEAP32[i12 >> 2] | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
    i1 = HEAP32[i18 >> 2] | 0;
    HEAP32[i18 >> 2] = 0;
    if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i20 >> 2] | 0, i1 | 0), i20 = __THREW__, __THREW__ = 0, i20 & 1) : 0) {
     i20 = ___cxa_find_matching_catch_3(0) | 0;
     ___clang_call_terminate(i20);
    }
    STACKTOP = i15;
    return i2 | 0;
   } while (0);
   if ((i19 | 0) == 13) i1 = ___cxa_find_matching_catch_2() | 0;
   i2 = i1;
  }
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
  i1 = HEAP32[i18 >> 2] | 0;
  HEAP32[i18 >> 2] = 0;
  if (!i1) i17 = i2; else i19 = 43;
 } else {
  i2 = ___cxa_find_matching_catch_2() | 0;
  HEAP32[i18 >> 2] = 0;
  i19 = 43;
 }
 if ((i19 | 0) == 43) {
  __THREW__ = 0;
  invoke_vi(HEAP32[i20 >> 2] | 0, i1 | 0);
  i20 = __THREW__;
  __THREW__ = 0;
  if (i20 & 1) {
   i20 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i20);
  } else i17 = i2;
 }
 ___resumeException(i17 | 0);
 return 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE(i1, i12, i13, i7, i6, i14, i10) {
 i1 = i1 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i7 = i7 | 0;
 i6 = i6 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i8 = 0, i9 = 0, i11 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i20 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 i3 = i15 + 24 | 0;
 i1 = i15 + 32 | 0;
 i17 = i15 + 16 | 0;
 i9 = i15 + 8 | 0;
 i16 = i15 + 4 | 0;
 i8 = i15 + 28 | 0;
 i4 = i15;
 HEAP32[i17 >> 2] = i1;
 i20 = i17 + 4 | 0;
 HEAP32[i20 >> 2] = 122;
 i5 = i1 + 100 | 0;
 __THREW__ = 0;
 i2 = invoke_ii(65, i6 | 0) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (!(i11 & 1)) {
  HEAP32[i16 >> 2] = i2;
  __THREW__ = 0;
  i2 = invoke_iii(15, i16 | 0, 18884) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) i2 = ___cxa_find_matching_catch_2() | 0; else {
   HEAP8[i8 >> 0] = 0;
   i11 = HEAP32[i13 >> 2] | 0;
   HEAP32[i4 >> 2] = i11;
   i1 = HEAP32[i6 + 4 >> 2] | 0;
   i6 = i11;
   __THREW__ = 0;
   HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
   i1 = invoke_iiiiiiiiiiii(1, i12 | 0, i3 | 0, i7 | 0, i16 | 0, i1 | 0, i14 | 0, i8 | 0, i2 | 0, i17 | 0, i9 | 0, i5 | 0) | 0;
   i7 = __THREW__;
   __THREW__ = 0;
   L7 : do if (i7 & 1) i19 = 13; else {
    if (i1) {
     i1 = i10 + 11 | 0;
     if ((HEAP8[i1 >> 0] | 0) < 0) {
      HEAP8[HEAP32[i10 >> 2] >> 0] = 0;
      HEAP32[i10 + 4 >> 2] = 0;
     } else {
      HEAP8[i10 >> 0] = 0;
      HEAP8[i1 >> 0] = 0;
     }
     if (HEAP8[i8 >> 0] | 0) {
      __THREW__ = 0;
      i1 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] | 0, i2 | 0, 45) | 0;
      i8 = __THREW__;
      __THREW__ = 0;
      if (i8 & 1) {
       i19 = 13;
       break;
      }
      __THREW__ = 0;
      invoke_vii(46, i10 | 0, i1 | 0);
      i8 = __THREW__;
      __THREW__ = 0;
      if (i8 & 1) {
       i19 = 13;
       break;
      }
     }
     __THREW__ = 0;
     i4 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] | 0, i2 | 0, 48) | 0;
     i8 = __THREW__;
     __THREW__ = 0;
     if (i8 & 1) {
      i19 = 13;
      break;
     }
     i2 = HEAP32[i9 >> 2] | 0;
     i3 = i2 + -1 | 0;
     i1 = HEAP32[i17 >> 2] | 0;
     while (1) {
      if (i1 >>> 0 >= i3 >>> 0) break;
      if ((HEAP8[i1 >> 0] | 0) != i4 << 24 >> 24) break;
      i1 = i1 + 1 | 0;
     }
     __THREW__ = 0;
     invoke_iiii(31, i10 | 0, i1 | 0, i2 | 0) | 0;
     i10 = __THREW__;
     __THREW__ = 0;
     if (i10 & 1) {
      i1 = ___cxa_find_matching_catch_2() | 0;
      break;
     }
    }
    i1 = HEAP32[i12 >> 2] | 0;
    do if (i1) {
     if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] | 0, i1 | 0) | 0;
      i10 = __THREW__;
      __THREW__ = 0;
      if (i10 & 1) {
       i19 = 13;
       break L7;
      }
      if ((i1 | 0) == -1) {
       HEAP32[i12 >> 2] = 0;
       i1 = 0;
       break;
      } else {
       i1 = HEAP32[i12 >> 2] | 0;
       break;
      }
     }
    } else i1 = 0; while (0);
    i2 = (i1 | 0) == 0;
    do if (i11) {
     if ((HEAP32[i6 + 12 >> 2] | 0) == (HEAP32[i6 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_ii(HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] | 0, i6 | 0) | 0;
      i11 = __THREW__;
      __THREW__ = 0;
      if (i11 & 1) {
       i19 = 13;
       break L7;
      }
      if ((i1 | 0) == -1) {
       HEAP32[i13 >> 2] = 0;
       i19 = 33;
       break;
      }
     }
     if (!i2) i19 = 34;
    } else i19 = 33; while (0);
    if ((i19 | 0) == 33 ? i2 : 0) i19 = 34;
    if ((i19 | 0) == 34) HEAP32[i14 >> 2] = HEAP32[i14 >> 2] | 2;
    i2 = HEAP32[i12 >> 2] | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
    i1 = HEAP32[i17 >> 2] | 0;
    HEAP32[i17 >> 2] = 0;
    if (i1 | 0 ? (__THREW__ = 0, invoke_vi(HEAP32[i20 >> 2] | 0, i1 | 0), i20 = __THREW__, __THREW__ = 0, i20 & 1) : 0) {
     i20 = ___cxa_find_matching_catch_3(0) | 0;
     ___clang_call_terminate(i20);
    }
    STACKTOP = i15;
    return i2 | 0;
   } while (0);
   if ((i19 | 0) == 13) i1 = ___cxa_find_matching_catch_2() | 0;
   i2 = i1;
  }
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i16 >> 2] | 0) | 0;
  i1 = HEAP32[i17 >> 2] | 0;
  HEAP32[i17 >> 2] = 0;
  if (!i1) i18 = i2; else i19 = 41;
 } else {
  i2 = ___cxa_find_matching_catch_2() | 0;
  HEAP32[i17 >> 2] = 0;
  i19 = 41;
 }
 if ((i19 | 0) == 41) {
  __THREW__ = 0;
  invoke_vi(HEAP32[i20 >> 2] | 0, i1 | 0);
  i20 = __THREW__;
  __THREW__ = 0;
  if (i20 & 1) {
   i20 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i20);
  } else i18 = i2;
 }
 ___resumeException(i18 | 0);
 return 0;
}
function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i13, i14, i15, i11, i8) {
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0;
 i1 = HEAP32[i13 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i13 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i13 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i14 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i12 = 17;
   break;
  } else {
   i12 = 16;
   break;
  } else {
   HEAP32[i14 >> 2] = 0;
   i12 = 14;
   break;
  }
 } else i12 = 14; while (0);
 if ((i12 | 0) == 14) if (i3) i12 = 16; else {
  i2 = 0;
  i12 = 17;
 }
 L22 : do if ((i12 | 0) == 16) {
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 6;
  i1 = 0;
 } else if ((i12 | 0) == 17) {
  i1 = HEAP32[i13 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i3 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, 2048, i1) | 0)) {
   HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 4;
   i1 = 0;
   break;
  }
  i1 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] & 63](i11, i1, 0) | 0) << 24 >> 24;
  i3 = HEAP32[i13 >> 2] | 0;
  i4 = i3 + 12 | 0;
  i5 = HEAP32[i4 >> 2] | 0;
  if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
   i6 = i2;
   i4 = i2;
  } else {
   HEAP32[i4 >> 2] = i5 + 4;
   i6 = i2;
   i4 = i2;
  }
  while (1) {
   i1 = i1 + -48 | 0;
   i10 = i8 + -1 | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   do if (i2) {
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAP32[i3 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i13 >> 2] = 0;
     i5 = 1;
     break;
    } else {
     i5 = (HEAP32[i13 >> 2] | 0) == 0;
     break;
    }
   } else i5 = 1; while (0);
   do if (i4) {
    i2 = HEAP32[i4 + 12 >> 2] | 0;
    if ((i2 | 0) == (HEAP32[i4 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0; else i2 = HEAP32[i2 >> 2] | 0;
    if ((i2 | 0) == -1) {
     HEAP32[i14 >> 2] = 0;
     i9 = 0;
     i7 = 0;
     i2 = 1;
     break;
    } else {
     i9 = i6;
     i7 = i6;
     i2 = (i6 | 0) == 0;
     break;
    }
   } else {
    i9 = i6;
    i7 = 0;
    i2 = 1;
   } while (0);
   i3 = HEAP32[i13 >> 2] | 0;
   if (!((i8 | 0) > 1 & (i5 ^ i2))) break;
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 63](i11, 2048, i2) | 0)) break L22;
   i1 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 52 >> 2] & 63](i11, i2, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
   i2 = HEAP32[i13 >> 2] | 0;
   i3 = i2 + 12 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 40 >> 2] & 127](i2) | 0;
    i8 = i10;
    i6 = i9;
    i4 = i7;
    continue;
   } else {
    HEAP32[i3 >> 2] = i4 + 4;
    i8 = i10;
    i6 = i9;
    i4 = i7;
    continue;
   }
  }
  do if (i3) {
   i2 = HEAP32[i3 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) == -1) {
    HEAP32[i13 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i13 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  do if (i9) {
   i2 = HEAP32[i9 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i9 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0; else i2 = HEAP32[i2 >> 2] | 0;
   if ((i2 | 0) != -1) if (i3) break L22; else break; else {
    HEAP32[i14 >> 2] = 0;
    i12 = 60;
    break;
   }
  } else i12 = 60; while (0);
  if ((i12 | 0) == 60 ? !i3 : 0) break;
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_(i5, i8, i3, i11, i13, i2, i9, i14) {
 i5 = i5 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i14 = i14 | 0;
 var i1 = 0, i4 = 0, i6 = 0, i7 = 0, i10 = 0, i12 = 0, i15 = 0, i16 = 0, i17 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i15 = i16;
 i10 = i16 + 8 | 0;
 i4 = i3;
 while (1) {
  if ((i4 | 0) == (i11 | 0)) {
   i4 = i11;
   break;
  }
  if (!(HEAP32[i4 >> 2] | 0)) break;
  i4 = i4 + 4 | 0;
 }
 HEAP32[i14 >> 2] = i2;
 HEAP32[i13 >> 2] = i3;
 i7 = i9;
 i12 = i5 + 8 | 0;
 L6 : while (1) {
  if ((i2 | 0) == (i9 | 0) | (i3 | 0) == (i11 | 0)) {
   i1 = i3;
   i5 = 53;
   break;
  }
  i17 = i8;
  i5 = HEAP32[i17 + 4 >> 2] | 0;
  i6 = i15;
  HEAP32[i6 >> 2] = HEAP32[i17 >> 2];
  HEAP32[i6 + 4 >> 2] = i5;
  i6 = _uselocale(HEAP32[i12 >> 2] | 0) | 0;
  __THREW__ = 0;
  i5 = invoke_iiiiii(21, i2 | 0, i13 | 0, i4 - i3 >> 2 | 0, i7 - i2 | 0, i8 | 0) | 0;
  i17 = __THREW__;
  __THREW__ = 0;
  if (i17 & 1) {
   i5 = 11;
   break;
  }
  if (i6 | 0 ? (__THREW__ = 0, invoke_ii(68, i6 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i5 = 10;
   break;
  }
  switch (i5 | 0) {
  case -1:
   {
    i5 = 16;
    break L6;
   }
  case 0:
   {
    i1 = 1;
    i5 = 50;
    break L6;
   }
  default:
   {}
  }
  i2 = (HEAP32[i14 >> 2] | 0) + i5 | 0;
  HEAP32[i14 >> 2] = i2;
  if ((i2 | 0) == (i9 | 0)) {
   i5 = 51;
   break;
  }
  if ((i4 | 0) == (i11 | 0)) {
   i4 = i11;
   i3 = HEAP32[i13 >> 2] | 0;
  } else {
   i3 = _uselocale(HEAP32[i12 >> 2] | 0) | 0;
   __THREW__ = 0;
   i2 = invoke_iiii(33, i10 | 0, 0, i8 | 0) | 0;
   i17 = __THREW__;
   __THREW__ = 0;
   if (i17 & 1) {
    i5 = 36;
    break;
   }
   if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i5 = 35;
    break;
   }
   if ((i2 | 0) == -1) {
    i1 = 2;
    i5 = 49;
    break;
   }
   if (i2 >>> 0 > (i7 - (HEAP32[i14 >> 2] | 0) | 0) >>> 0) {
    i1 = 1;
    i5 = 49;
    break;
   } else i3 = i10;
   while (1) {
    if (!i2) break;
    i6 = HEAP8[i3 >> 0] | 0;
    i17 = HEAP32[i14 >> 2] | 0;
    HEAP32[i14 >> 2] = i17 + 1;
    HEAP8[i17 >> 0] = i6;
    i3 = i3 + 1 | 0;
    i2 = i2 + -1 | 0;
   }
   i3 = (HEAP32[i13 >> 2] | 0) + 4 | 0;
   HEAP32[i13 >> 2] = i3;
   i4 = i3;
   while (1) {
    if ((i4 | 0) == (i11 | 0)) {
     i4 = i11;
     break;
    }
    if (!(HEAP32[i4 >> 2] | 0)) break;
    i4 = i4 + 4 | 0;
   }
   i2 = HEAP32[i14 >> 2] | 0;
  }
 }
 do if ((i5 | 0) == 10) {
  i17 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i17);
 } else if ((i5 | 0) == 11) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i6 | 0 ? (__THREW__ = 0, invoke_ii(68, i6 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  }
  ___resumeException(i1 | 0);
 } else if ((i5 | 0) == 16) {
  HEAP32[i14 >> 2] = i2;
  while (1) {
   if ((i3 | 0) == (HEAP32[i13 >> 2] | 0)) {
    i5 = 28;
    break;
   }
   i17 = HEAP32[i3 >> 2] | 0;
   i4 = _uselocale(HEAP32[i12 >> 2] | 0) | 0;
   __THREW__ = 0;
   i2 = invoke_iiii(33, i2 | 0, i17 | 0, i15 | 0) | 0;
   i17 = __THREW__;
   __THREW__ = 0;
   if (i17 & 1) {
    i5 = 22;
    break;
   }
   if (i4 | 0 ? (__THREW__ = 0, invoke_ii(68, i4 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i5 = 21;
    break;
   }
   if ((i2 | 0) == -1) {
    i5 = 28;
    break;
   }
   i2 = (HEAP32[i14 >> 2] | 0) + i2 | 0;
   HEAP32[i14 >> 2] = i2;
   i3 = i3 + 4 | 0;
  }
  if ((i5 | 0) == 21) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  } else if ((i5 | 0) == 22) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   if (i4 | 0 ? (__THREW__ = 0, invoke_ii(68, i4 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i17 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i17);
   }
   ___resumeException(i1 | 0);
  } else if ((i5 | 0) == 28) {
   HEAP32[i13 >> 2] = i3;
   i1 = 2;
   i5 = 50;
   break;
  }
 } else if ((i5 | 0) == 35) {
  i17 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i17);
 } else if ((i5 | 0) == 36) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  }
  ___resumeException(i1 | 0);
 } else if ((i5 | 0) == 49) i5 = 50; else if ((i5 | 0) == 51) {
  i1 = HEAP32[i13 >> 2] | 0;
  i5 = 53;
 } while (0);
 if ((i5 | 0) != 50) if ((i5 | 0) == 53) i1 = (i1 | 0) != (i11 | 0) & 1;
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE(i2, i14, i15, i16, i17, i12, i1) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i17 = i17 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i18 = 0, i19 = 0, i20 = 0;
 i18 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i19 = i18;
 i11 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18916) | 0;
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18924) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i19, i5);
 i9 = i19 + 11 | 0;
 i8 = HEAP8[i9 >> 0] | 0;
 i10 = i19 + 4 | 0;
 L1 : do if (!((i8 << 24 >> 24 < 0 ? HEAP32[i10 >> 2] | 0 : i8 & 255) | 0)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[i11 >> 2] | 0) + 48 >> 2] | 0, i11 | 0, i2 | 0, i15 | 0, i16 | 0) | 0;
  i13 = __THREW__;
  __THREW__ = 0;
  if (i13 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   i13 = 30;
   break;
  } else {
   i1 = i16 + (i15 - i2 << 2) | 0;
   HEAP32[i12 >> 2] = i1;
   i13 = 29;
   break;
  }
 } else {
  HEAP32[i12 >> 2] = i16;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    __THREW__ = 0;
    i1 = invoke_iii(HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] | 0, i11 | 0, i1 | 0) | 0;
    i8 = __THREW__;
    __THREW__ = 0;
    if (!(i8 & 1)) {
     i4 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i4 + 4;
     HEAP32[i4 >> 2] = i1;
     i4 = i2 + 1 | 0;
     i13 = 9;
    }
    break;
   }
  default:
   {
    i4 = i2;
    i13 = 9;
   }
  }
  L10 : do if ((i13 | 0) == 9) {
   L12 : do if ((i15 - i4 | 0) > 1 ? (HEAP8[i4 >> 0] | 0) == 48 : 0) {
    i1 = i4 + 1 | 0;
    switch (HEAP8[i1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i8 = i4;
      break L12;
     }
    }
    __THREW__ = 0;
    i3 = invoke_iii(HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] | 0, i11 | 0, 48) | 0;
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) break L10;
    i8 = HEAP32[i12 >> 2] | 0;
    HEAP32[i12 >> 2] = i8 + 4;
    HEAP32[i8 >> 2] = i3;
    __THREW__ = 0;
    i1 = invoke_iii(HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] | 0, i11 | 0, HEAP8[i1 >> 0] | 0) | 0;
    i8 = __THREW__;
    __THREW__ = 0;
    if (i8 & 1) break L10;
    i8 = HEAP32[i12 >> 2] | 0;
    HEAP32[i12 >> 2] = i8 + 4;
    HEAP32[i8 >> 2] = i1;
    i8 = i4 + 2 | 0;
   } else i8 = i4; while (0);
   L19 : do if ((i8 | 0) != (i15 | 0)) {
    i1 = i15;
    i3 = i8;
    while (1) {
     i1 = i1 + -1 | 0;
     if (i3 >>> 0 >= i1 >>> 0) break L19;
     i7 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
     HEAP8[i1 >> 0] = i7;
     i3 = i3 + 1 | 0;
    }
   } while (0);
   __THREW__ = 0;
   i7 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0;
   i6 = __THREW__;
   __THREW__ = 0;
   if (!(i6 & 1)) {
    i6 = i8;
    i3 = 0;
    i4 = 0;
    while (1) {
     if (i6 >>> 0 >= i15 >>> 0) break;
     i1 = HEAP8[i9 >> 0] | 0;
     i5 = i1 << 24 >> 24 < 0;
     i20 = HEAP8[(i5 ? HEAP32[i19 >> 2] | 0 : i19) + i3 >> 0] | 0;
     if (i20 << 24 >> 24 != 0 & (i4 | 0) == (i20 << 24 >> 24 | 0)) {
      i4 = HEAP32[i12 >> 2] | 0;
      HEAP32[i12 >> 2] = i4 + 4;
      HEAP32[i4 >> 2] = i7;
      i3 = (i3 >>> 0 < ((i5 ? HEAP32[i10 >> 2] | 0 : i1 & 255) + -1 | 0) >>> 0 & 1) + i3 | 0;
      i4 = 0;
     }
     __THREW__ = 0;
     i1 = invoke_iii(HEAP32[(HEAP32[i11 >> 2] | 0) + 44 >> 2] | 0, i11 | 0, HEAP8[i6 >> 0] | 0) | 0;
     i20 = __THREW__;
     __THREW__ = 0;
     if (i20 & 1) {
      i13 = 26;
      break;
     }
     i20 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i20 + 4;
     HEAP32[i20 >> 2] = i1;
     i6 = i6 + 1 | 0;
     i4 = i4 + 1 | 0;
    }
    if ((i13 | 0) == 26) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     i13 = 30;
     break L1;
    }
    i4 = i2;
    i1 = i16 + (i8 - i4 << 2) | 0;
    i3 = HEAP32[i12 >> 2] | 0;
    if ((i1 | 0) == (i3 | 0)) {
     i2 = i4;
     i13 = 29;
     break L1;
    } else i2 = i3;
    while (1) {
     i2 = i2 + -4 | 0;
     if (i1 >>> 0 >= i2 >>> 0) {
      i2 = i4;
      i1 = i3;
      i13 = 29;
      break L1;
     }
     i20 = HEAP32[i1 >> 2] | 0;
     HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
     HEAP32[i2 >> 2] = i20;
     i1 = i1 + 4 | 0;
    }
   }
  } while (0);
  i1 = ___cxa_find_matching_catch_2() | 0;
  i13 = 30;
 } while (0);
 if ((i13 | 0) == 29) {
  HEAP32[i17 >> 2] = (i14 | 0) == (i15 | 0) ? i1 : i16 + (i14 - i2 << 2) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
  STACKTOP = i18;
  return;
 } else if ((i13 | 0) == 30) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i19);
  ___resumeException(i1 | 0);
 }
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_(i4, i9, i2, i15, i12, i5, i10, i13) {
 i4 = i4 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i15 = i15 | 0;
 i12 = i12 | 0;
 i5 = i5 | 0;
 i10 = i10 | 0;
 i13 = i13 | 0;
 var i1 = 0, i3 = 0, i6 = 0, i7 = 0, i8 = 0, i11 = 0, i14 = 0, i16 = 0, i17 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i14 = i16;
 i3 = i2;
 while (1) {
  if ((i3 | 0) == (i15 | 0)) {
   i3 = i15;
   break;
  }
  if (!(HEAP8[i3 >> 0] | 0)) break;
  i3 = i3 + 1 | 0;
 }
 HEAP32[i13 >> 2] = i5;
 HEAP32[i12 >> 2] = i2;
 i8 = i10;
 i11 = i4 + 8 | 0;
 i4 = i5;
 while (1) {
  if ((i4 | 0) == (i10 | 0) | (i2 | 0) == (i15 | 0)) {
   i1 = i2;
   i5 = 51;
   break;
  }
  i5 = i9;
  i6 = HEAP32[i5 + 4 >> 2] | 0;
  i7 = i14;
  HEAP32[i7 >> 2] = HEAP32[i5 >> 2];
  HEAP32[i7 + 4 >> 2] = i6;
  i7 = i3;
  i6 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
  __THREW__ = 0;
  i5 = invoke_iiiiii(22, i4 | 0, i12 | 0, i7 - i2 | 0, i8 - i4 >> 2 | 0, i9 | 0) | 0;
  i17 = __THREW__;
  __THREW__ = 0;
  if (i17 & 1) {
   i5 = 11;
   break;
  }
  if (i6 | 0 ? (__THREW__ = 0, invoke_ii(68, i6 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i5 = 10;
   break;
  }
  if ((i5 | 0) == -1) {
   i3 = i4;
   i5 = 16;
   break;
  }
  i4 = (HEAP32[i13 >> 2] | 0) + (i5 << 2) | 0;
  HEAP32[i13 >> 2] = i4;
  if ((i4 | 0) == (i10 | 0)) {
   i5 = 48;
   break;
  }
  i2 = HEAP32[i12 >> 2] | 0;
  if ((i3 | 0) == (i15 | 0)) i3 = i15; else {
   i3 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   __THREW__ = 0;
   i2 = invoke_iiiii(17, i4 | 0, i2 | 0, 1, i9 | 0) | 0;
   i17 = __THREW__;
   __THREW__ = 0;
   if (i17 & 1) {
    i5 = 38;
    break;
   }
   if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i5 = 37;
    break;
   }
   if (i2 | 0) {
    i1 = 2;
    i5 = 47;
    break;
   }
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 4;
   i2 = (HEAP32[i12 >> 2] | 0) + 1 | 0;
   HEAP32[i12 >> 2] = i2;
   i3 = i2;
   while (1) {
    if ((i3 | 0) == (i15 | 0)) {
     i3 = i15;
     break;
    }
    if (!(HEAP8[i3 >> 0] | 0)) break;
    i3 = i3 + 1 | 0;
   }
   i4 = HEAP32[i13 >> 2] | 0;
  }
 }
 do if ((i5 | 0) == 10) {
  i17 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i17);
 } else if ((i5 | 0) == 11) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i6 | 0 ? (__THREW__ = 0, invoke_ii(68, i6 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  }
  ___resumeException(i1 | 0);
 } else if ((i5 | 0) == 16) {
  L30 : while (1) {
   HEAP32[i13 >> 2] = i3;
   if ((i2 | 0) == (HEAP32[i12 >> 2] | 0)) {
    i5 = 31;
    break;
   }
   i4 = _uselocale(HEAP32[i11 >> 2] | 0) | 0;
   __THREW__ = 0;
   i3 = invoke_iiiii(17, i3 | 0, i2 | 0, i7 - i2 | 0, i14 | 0) | 0;
   i17 = __THREW__;
   __THREW__ = 0;
   if (i17 & 1) {
    i5 = 21;
    break;
   }
   if (i4 | 0 ? (__THREW__ = 0, invoke_ii(68, i4 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i5 = 20;
    break;
   }
   switch (i3 | 0) {
   case -1:
    {
     i5 = 27;
     break L30;
    }
   case -2:
    {
     i5 = 28;
     break L30;
    }
   case 0:
    {
     i2 = i2 + 1 | 0;
     break;
    }
   default:
    i2 = i2 + i3 | 0;
   }
   i3 = (HEAP32[i13 >> 2] | 0) + 4 | 0;
   i5 = 16;
  }
  if ((i5 | 0) == 20) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  } else if ((i5 | 0) == 21) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   if (i4 | 0 ? (__THREW__ = 0, invoke_ii(68, i4 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
    i17 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i17);
   }
   ___resumeException(i1 | 0);
  } else if ((i5 | 0) == 27) {
   HEAP32[i12 >> 2] = i2;
   i1 = 2;
   i5 = 47;
   break;
  } else if ((i5 | 0) == 28) {
   HEAP32[i12 >> 2] = i2;
   i1 = 1;
   i5 = 47;
   break;
  } else if ((i5 | 0) == 31) {
   HEAP32[i12 >> 2] = i2;
   i1 = (i2 | 0) != (i15 | 0) & 1;
   i5 = 47;
   break;
  }
 } else if ((i5 | 0) == 37) {
  i17 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i17);
 } else if ((i5 | 0) == 38) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i17 = __THREW__, __THREW__ = 0, i17 & 1) : 0) {
   i17 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i17);
  }
  ___resumeException(i1 | 0);
 } else if ((i5 | 0) == 48) {
  i1 = HEAP32[i12 >> 2] | 0;
  i5 = 51;
 } while (0);
 if ((i5 | 0) != 47) if ((i5 | 0) == 51) i1 = (i1 | 0) != (i15 | 0) & 1;
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE(i2, i13, i14, i15, i16, i12, i1) {
 i2 = i2 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i16 = i16 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i17 = 0, i18 = 0, i19 = 0;
 i17 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i18 = i17;
 i10 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18884) | 0;
 i5 = __ZNKSt3__26locale9use_facetERNS0_2idE(i1, 18900) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] & 127](i18, i5);
 i8 = i18 + 11 | 0;
 i7 = HEAP8[i8 >> 0] | 0;
 i9 = i18 + 4 | 0;
 L1 : do if (!((i7 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i7 & 255) | 0)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[i10 >> 2] | 0) + 32 >> 2] | 0, i10 | 0, i2 | 0, i14 | 0, i15 | 0) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   i11 = 31;
   break;
  } else {
   i1 = i15 + (i14 - i2) | 0;
   HEAP32[i12 >> 2] = i1;
   i11 = 30;
   break;
  }
 } else {
  HEAP32[i12 >> 2] = i15;
  i1 = HEAP8[i2 >> 0] | 0;
  switch (i1 << 24 >> 24) {
  case 43:
  case 45:
   {
    __THREW__ = 0;
    i1 = invoke_iii(HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] | 0, i10 | 0, i1 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (!(i7 & 1)) {
     i4 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i1;
     i4 = i2 + 1 | 0;
     i11 = 9;
    }
    break;
   }
  default:
   {
    i4 = i2;
    i11 = 9;
   }
  }
  L10 : do if ((i11 | 0) == 9) {
   L12 : do if ((i14 - i4 | 0) > 1 ? (HEAP8[i4 >> 0] | 0) == 48 : 0) {
    i1 = i4 + 1 | 0;
    switch (HEAP8[i1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     break L12;
    }
    __THREW__ = 0;
    i3 = invoke_iii(HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] | 0, i10 | 0, 48) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) break L10;
    i7 = HEAP32[i12 >> 2] | 0;
    HEAP32[i12 >> 2] = i7 + 1;
    HEAP8[i7 >> 0] = i3;
    __THREW__ = 0;
    i1 = invoke_iii(HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] | 0, i10 | 0, HEAP8[i1 >> 0] | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) break L10;
    i7 = HEAP32[i12 >> 2] | 0;
    HEAP32[i12 >> 2] = i7 + 1;
    HEAP8[i7 >> 0] = i1;
    i4 = i4 + 2 | 0;
   } while (0);
   L19 : do if ((i4 | 0) != (i14 | 0)) {
    i1 = i14;
    i3 = i4;
    while (1) {
     i1 = i1 + -1 | 0;
     if (i3 >>> 0 >= i1 >>> 0) break L19;
     i7 = HEAP8[i3 >> 0] | 0;
     HEAP8[i3 >> 0] = HEAP8[i1 >> 0] | 0;
     HEAP8[i1 >> 0] = i7;
     i3 = i3 + 1 | 0;
    }
   } while (0);
   __THREW__ = 0;
   i7 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0;
   i6 = __THREW__;
   __THREW__ = 0;
   if (!(i6 & 1)) {
    i6 = i4;
    i1 = 0;
    i3 = 0;
    while (1) {
     if (i6 >>> 0 >= i14 >>> 0) break;
     i5 = HEAP8[((HEAP8[i8 >> 0] | 0) < 0 ? HEAP32[i18 >> 2] | 0 : i18) + i1 >> 0] | 0;
     if (i5 << 24 >> 24 != 0 & (i3 | 0) == (i5 << 24 >> 24 | 0)) {
      i3 = HEAP32[i12 >> 2] | 0;
      HEAP32[i12 >> 2] = i3 + 1;
      HEAP8[i3 >> 0] = i7;
      i3 = HEAP8[i8 >> 0] | 0;
      i1 = (i1 >>> 0 < ((i3 << 24 >> 24 < 0 ? HEAP32[i9 >> 2] | 0 : i3 & 255) + -1 | 0) >>> 0 & 1) + i1 | 0;
      i3 = 0;
     }
     __THREW__ = 0;
     i5 = invoke_iii(HEAP32[(HEAP32[i10 >> 2] | 0) + 28 >> 2] | 0, i10 | 0, HEAP8[i6 >> 0] | 0) | 0;
     i19 = __THREW__;
     __THREW__ = 0;
     if (i19 & 1) {
      i11 = 26;
      break;
     }
     i19 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i19 + 1;
     HEAP8[i19 >> 0] = i5;
     i6 = i6 + 1 | 0;
     i3 = i3 + 1 | 0;
    }
    if ((i11 | 0) == 26) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     i11 = 31;
     break L1;
    }
    i3 = i2;
    i1 = i15 + (i4 - i3) | 0;
    i2 = HEAP32[i12 >> 2] | 0;
    if ((i1 | 0) == (i2 | 0)) {
     i2 = i3;
     i11 = 30;
     break L1;
    }
    while (1) {
     i2 = i2 + -1 | 0;
     if (i1 >>> 0 >= i2 >>> 0) break;
     i19 = HEAP8[i1 >> 0] | 0;
     HEAP8[i1 >> 0] = HEAP8[i2 >> 0] | 0;
     HEAP8[i2 >> 0] = i19;
     i1 = i1 + 1 | 0;
    }
    i2 = i3;
    i1 = HEAP32[i12 >> 2] | 0;
    i11 = 30;
    break L1;
   }
  } while (0);
  i1 = ___cxa_find_matching_catch_2() | 0;
  i11 = 31;
 } while (0);
 if ((i11 | 0) == 30) {
  HEAP32[i16 >> 2] = (i13 | 0) == (i14 | 0) ? i1 : i15 + (i13 - i2) | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
  STACKTOP = i17;
  return;
 } else if ((i11 | 0) == 31) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i18);
  ___resumeException(i1 | 0);
 }
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i10, i14, i15, i11, i6) {
 i10 = i10 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i11 = i11 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i12 = 0, i13 = 0;
 i1 = HEAP32[i10 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i10 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i14 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i14 >> 2] = 0;
   i13 = 11;
   break;
  }
  if (i2) i13 = 13; else i13 = 12;
 } else i13 = 11; while (0);
 if ((i13 | 0) == 11) if (i2) i13 = 12; else {
  i1 = 0;
  i13 = 13;
 }
 L16 : do if ((i13 | 0) == 12) {
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 6;
  i1 = 0;
 } else if ((i13 | 0) == 13) {
  i2 = HEAP32[i10 >> 2] | 0;
  i3 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
  i3 = i2 & 255;
  if (i3 << 24 >> 24 > -1 ? (i12 = i11 + 8 | 0, HEAP16[(HEAP32[i12 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048) : 0) {
   i2 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 63](i11, i3, 0) | 0) << 24 >> 24;
   i3 = HEAP32[i10 >> 2] | 0;
   i4 = i3 + 12 | 0;
   i5 = HEAP32[i4 >> 2] | 0;
   if ((i5 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 40 >> 2] & 127](i3) | 0;
    i5 = i1;
    i4 = i1;
   } else {
    HEAP32[i4 >> 2] = i5 + 1;
    i5 = i1;
    i4 = i1;
   }
   while (1) {
    i1 = i2 + -48 | 0;
    i8 = i6 + -1 | 0;
    i2 = HEAP32[i10 >> 2] | 0;
    do if (i2) {
     if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
      HEAP32[i10 >> 2] = 0;
      i2 = 0;
      break;
     } else {
      i2 = HEAP32[i10 >> 2] | 0;
      break;
     }
    } else i2 = 0; while (0);
    i3 = (i2 | 0) == 0;
    if (i4) if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1) {
     HEAP32[i14 >> 2] = 0;
     i9 = 0;
     i7 = 0;
    } else {
     i9 = i5;
     i7 = i5;
    } else {
     i9 = i5;
     i7 = i4;
    } else {
     i9 = i5;
     i7 = 0;
    }
    i2 = HEAP32[i10 >> 2] | 0;
    if (!((i6 | 0) > 1 & (i3 ^ (i7 | 0) == 0))) break;
    i3 = HEAP32[i2 + 12 >> 2] | 0;
    if ((i3 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i2 = HEAPU8[i3 >> 0] | 0;
    i3 = i2 & 255;
    if (i3 << 24 >> 24 <= -1) break L16;
    if (!(HEAP16[(HEAP32[i12 >> 2] | 0) + (i2 << 24 >> 24 << 1) >> 1] & 2048)) break L16;
    i2 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 36 >> 2] & 63](i11, i3, 0) | 0) << 24 >> 24) + (i1 * 10 | 0) | 0;
    i1 = HEAP32[i10 >> 2] | 0;
    i3 = i1 + 12 | 0;
    i4 = HEAP32[i3 >> 2] | 0;
    if ((i4 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
     i6 = i8;
     i5 = i9;
     i4 = i7;
     continue;
    } else {
     HEAP32[i3 >> 2] = i4 + 1;
     i6 = i8;
     i5 = i9;
     i4 = i7;
     continue;
    }
   }
   do if (i2) {
    if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1) {
     HEAP32[i10 >> 2] = 0;
     i2 = 0;
     break;
    } else {
     i2 = HEAP32[i10 >> 2] | 0;
     break;
    }
   } else i2 = 0; while (0);
   i2 = (i2 | 0) == 0;
   do if (i9) {
    if ((HEAP32[i9 + 12 >> 2] | 0) == (HEAP32[i9 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i9 >> 2] | 0) + 36 >> 2] & 127](i9) | 0) == -1 : 0) {
     HEAP32[i14 >> 2] = 0;
     i13 = 50;
     break;
    }
    if (i2) break L16;
   } else i13 = 50; while (0);
   if ((i13 | 0) == 50 ? !i2 : 0) break;
   HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 2;
   break;
  }
  HEAP32[i15 >> 2] = HEAP32[i15 >> 2] | 4;
  i1 = 0;
 } while (0);
 return i1 | 0;
}

function _mbsrtowcs(i5, i9, i1, i3) {
 i5 = i5 | 0;
 i9 = i9 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i6 = 0, i7 = 0, i8 = 0;
 i2 = HEAP32[i9 >> 2] | 0;
 if ((i3 | 0) != 0 ? (i4 = HEAP32[i3 >> 2] | 0, (i4 | 0) != 0) : 0) if (!i5) {
  i3 = i1;
  i6 = i2;
  i8 = 17;
 } else {
  HEAP32[i3 >> 2] = 0;
  i7 = i5;
  i3 = i1;
  i8 = 38;
 } else if (!i5) {
  i3 = i1;
  i8 = 7;
 } else {
  i4 = i5;
  i3 = i1;
  i8 = 6;
 }
 L7 : while (1) if ((i8 | 0) == 6) {
  if (!i3) {
   i8 = 27;
   break;
  } else i5 = i4;
  while (1) {
   i4 = HEAP8[i2 >> 0] | 0;
   do if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? i3 >>> 0 > 4 & (i2 & 3 | 0) == 0 : 0) {
    while (1) {
     i4 = HEAP32[i2 >> 2] | 0;
     if ((i4 + -16843009 | i4) & -2139062144 | 0) {
      i8 = 33;
      break;
     }
     HEAP32[i5 >> 2] = i4 & 255;
     HEAP32[i5 + 4 >> 2] = HEAPU8[i2 + 1 >> 0];
     HEAP32[i5 + 8 >> 2] = HEAPU8[i2 + 2 >> 0];
     i6 = i2 + 4 | 0;
     i4 = i5 + 16 | 0;
     HEAP32[i5 + 12 >> 2] = HEAPU8[i2 + 3 >> 0];
     i3 = i3 + -4 | 0;
     if (i3 >>> 0 > 4) {
      i5 = i4;
      i2 = i6;
     } else {
      i8 = 32;
      break;
     }
    }
    if ((i8 | 0) == 32) {
     i5 = i4;
     i2 = i6;
     i4 = HEAP8[i6 >> 0] | 0;
     break;
    } else if ((i8 | 0) == 33) {
     i4 = i4 & 255;
     break;
    }
   } while (0);
   i4 = i4 & 255;
   if ((i4 + -1 | 0) >>> 0 >= 127) break;
   i2 = i2 + 1 | 0;
   HEAP32[i5 >> 2] = i4;
   i3 = i3 + -1 | 0;
   if (!i3) {
    i8 = 27;
    break L7;
   } else i5 = i5 + 4 | 0;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i8 = 49;
   break;
  }
  i7 = i5;
  i4 = HEAP32[1616 + (i4 << 2) >> 2] | 0;
  i2 = i2 + 1 | 0;
  i8 = 38;
  continue;
 } else if ((i8 | 0) == 7) {
  while (1) {
   i4 = HEAP8[i2 >> 0] | 0;
   if (((i4 & 255) + -1 | 0) >>> 0 < 127 ? (i2 & 3 | 0) == 0 : 0) {
    i8 = HEAP32[i2 >> 2] | 0;
    i4 = i8 & 255;
    if (!((i8 + -16843009 | i8) & -2139062144)) {
     do {
      i2 = i2 + 4 | 0;
      i3 = i3 + -4 | 0;
      i4 = HEAP32[i2 >> 2] | 0;
     } while (!((i4 + -16843009 | i4) & -2139062144 | 0));
     i4 = i4 & 255;
    }
   }
   i4 = i4 & 255;
   if ((i4 + -1 | 0) >>> 0 >= 127) break;
   i2 = i2 + 1 | 0;
   i3 = i3 + -1 | 0;
  }
  i4 = i4 + -194 | 0;
  if (i4 >>> 0 > 50) {
   i8 = 49;
   break;
  }
  i4 = HEAP32[1616 + (i4 << 2) >> 2] | 0;
  i6 = i2 + 1 | 0;
  i8 = 17;
  continue;
 } else if ((i8 | 0) == 17) {
  i8 = (HEAPU8[i6 >> 0] | 0) >>> 3;
  if ((i8 + -16 | i8 + (i4 >> 26)) >>> 0 > 7) {
   i8 = 18;
   break;
  }
  i2 = i6 + 1 | 0;
  if (i4 & 33554432) {
   if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
    i8 = 21;
    break;
   }
   i2 = i6 + 2 | 0;
   if (i4 & 524288) {
    if ((HEAP8[i2 >> 0] & -64) << 24 >> 24 != -128) {
     i8 = 24;
     break;
    }
    i2 = i6 + 3 | 0;
   }
  }
  i3 = i3 + -1 | 0;
  i8 = 7;
  continue;
 } else if ((i8 | 0) == 38) {
  i5 = HEAPU8[i2 >> 0] | 0;
  i8 = i5 >>> 3;
  if ((i8 + -16 | i8 + (i4 >> 26)) >>> 0 > 7) {
   i8 = 39;
   break;
  }
  i6 = i2 + 1 | 0;
  i5 = i5 + -128 | i4 << 6;
  if ((i5 | 0) < 0) {
   i4 = (HEAPU8[i6 >> 0] | 0) + -128 | 0;
   if (i4 >>> 0 > 63) {
    i8 = 42;
    break;
   }
   i6 = i2 + 2 | 0;
   i5 = i4 | i5 << 6;
   if ((i5 | 0) < 0) {
    i4 = (HEAPU8[i6 >> 0] | 0) + -128 | 0;
    if (i4 >>> 0 > 63) {
     i8 = 45;
     break;
    }
    i5 = i4 | i5 << 6;
    i2 = i2 + 3 | 0;
   } else i2 = i6;
  } else i2 = i6;
  HEAP32[i7 >> 2] = i5;
  i4 = i7 + 4 | 0;
  i3 = i3 + -1 | 0;
  i8 = 6;
  continue;
 }
 if ((i8 | 0) == 18) {
  i2 = i6 + -1 | 0;
  i8 = 48;
 } else if ((i8 | 0) == 21) {
  i2 = i6 + -1 | 0;
  i8 = 48;
 } else if ((i8 | 0) == 24) {
  i2 = i6 + -1 | 0;
  i8 = 48;
 } else if ((i8 | 0) == 27) HEAP32[i9 >> 2] = i2; else if ((i8 | 0) == 39) {
  i2 = i2 + -1 | 0;
  i5 = i7;
  i8 = 48;
 } else if ((i8 | 0) == 42) {
  i2 = i2 + -1 | 0;
  i1 = i7;
  i8 = 53;
 } else if ((i8 | 0) == 45) {
  i2 = i2 + -1 | 0;
  i1 = i7;
  i8 = 53;
 }
 if ((i8 | 0) == 48) if (!i4) i8 = 49; else {
  i1 = i5;
  i8 = 53;
 }
 if ((i8 | 0) == 49) if (!(HEAP8[i2 >> 0] | 0)) {
  if (i5 | 0) {
   HEAP32[i5 >> 2] = 0;
   HEAP32[i9 >> 2] = 0;
  }
  i1 = i1 - i3 | 0;
 } else {
  i1 = i5;
  i8 = 53;
 }
 if ((i8 | 0) == 53) {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  if (!i1) i1 = -1; else {
   HEAP32[i9 >> 2] = i2;
   i1 = -1;
  }
 }
 return i1 | 0;
}

function __ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE(i20, i1, i11, i12, i13, i2) {
 i20 = i20 | 0;
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0, i19 = 0, i21 = 0;
 i19 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i7 = i19 + 184 | 0;
 i8 = i19 + 192 | 0;
 i9 = i19 + 180 | 0;
 i10 = i19 + 176 | 0;
 i14 = i19 + 168 | 0;
 i15 = i19 + 40 | 0;
 i16 = i19 + 32 | 0;
 i17 = i19 + 28 | 0;
 i21 = i19 + 16 | 0;
 i6 = i19 + 8 | 0;
 i18 = i19;
 HEAP32[i21 >> 2] = 0;
 HEAP32[i21 + 4 >> 2] = 0;
 HEAP32[i21 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i21 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 >> 2] = 8224;
 i4 = HEAP8[i2 + 8 + 3 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 i1 = i5 ? HEAP32[i2 >> 2] | 0 : i2;
 i4 = i1 + ((i5 ? HEAP32[i2 + 4 >> 2] | 0 : i4 & 255) << 2) | 0;
 i5 = i8 + 32 | 0;
 i2 = i1;
 i1 = 0;
 L5 : while (1) {
  if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) {
   i3 = 13;
   break;
  }
  HEAP32[i10 >> 2] = i2;
  __THREW__ = 0;
  i3 = invoke_iiiiiiiii(HEAP32[(HEAP32[i6 >> 2] | 0) + 12 >> 2] | 0, i6 | 0, i7 | 0, i2 | 0, i4 | 0, i10 | 0, i8 | 0, i5 | 0, i9 | 0) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i3 = 15;
   break;
  }
  if ((i3 | 0) == 2 ? 1 : (HEAP32[i10 >> 2] | 0) == (i2 | 0)) {
   i3 = 8;
   break;
  } else i1 = i8;
  while (1) {
   if (i1 >>> 0 >= (HEAP32[i9 >> 2] | 0) >>> 0) break;
   __THREW__ = 0;
   invoke_vii(46, i21 | 0, HEAP8[i1 >> 0] | 0);
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) {
    i3 = 14;
    break L5;
   }
   i1 = i1 + 1 | 0;
  }
  i2 = HEAP32[i10 >> 2] | 0;
  i1 = i3;
 }
 do if ((i3 | 0) == 8) {
  __THREW__ = 0;
  invoke_vi(123, 14660);
  __THREW__ = 0;
  i1 = ___cxa_find_matching_catch_2() | 0;
  i3 = 16;
 } else if ((i3 | 0) == 13) {
  __THREW__ = 0;
  i2 = invoke_iiiii(16, ((i11 | 0) == -1 ? -1 : i11 << 1) | 0, i12 | 0, i13 | 0, ((HEAP8[i21 + 11 >> 0] | 0) < 0 ? HEAP32[i21 >> 2] | 0 : i21) | 0) | 0;
  i13 = __THREW__;
  __THREW__ = 0;
  if (i13 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   break;
  };
  HEAP32[i20 >> 2] = 0;
  HEAP32[i20 + 4 >> 2] = 0;
  HEAP32[i20 + 8 >> 2] = 0;
  i1 = 0;
  while (1) {
   if ((i1 | 0) == 3) break;
   HEAP32[i20 + (i1 << 2) >> 2] = 0;
   i1 = i1 + 1 | 0;
  }
  HEAP32[i18 + 4 >> 2] = 0;
  HEAP32[i18 >> 2] = 8272;
  i4 = i2 + (_strlen(i2) | 0) | 0;
  i5 = i4;
  i6 = i15 + 128 | 0;
  i1 = 0;
  L23 : while (1) {
   if (!((i1 | 0) != 2 & i2 >>> 0 < i4 >>> 0)) {
    i3 = 29;
    break;
   }
   HEAP32[i17 >> 2] = i2;
   __THREW__ = 0;
   i3 = invoke_iiiiiiiii(HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] | 0, i18 | 0, i14 | 0, i2 | 0, ((i5 - i2 | 0) > 32 ? i2 + 32 | 0 : i4) | 0, i17 | 0, i15 | 0, i6 | 0, i16 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   if (i13 & 1) {
    i3 = 32;
    break;
   }
   if ((i3 | 0) == 2 ? 1 : (HEAP32[i17 >> 2] | 0) == (i2 | 0)) {
    i3 = 24;
    break;
   } else i1 = i15;
   while (1) {
    if (i1 >>> 0 >= (HEAP32[i16 >> 2] | 0) >>> 0) break;
    __THREW__ = 0;
    invoke_vii(48, i20 | 0, HEAP32[i1 >> 2] | 0);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i3 = 31;
     break L23;
    }
    i1 = i1 + 4 | 0;
   }
   i2 = HEAP32[i17 >> 2] | 0;
   i1 = i3;
  }
  if ((i3 | 0) == 24) {
   __THREW__ = 0;
   invoke_vi(123, 14660);
   __THREW__ = 0;
   i1 = ___cxa_find_matching_catch_2() | 0;
  } else if ((i3 | 0) == 29) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
   STACKTOP = i19;
   return;
  } else if ((i3 | 0) == 31) i1 = ___cxa_find_matching_catch_2() | 0; else if ((i3 | 0) == 32) i1 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i20);
 } else if ((i3 | 0) == 14) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  i3 = 16;
 } else if ((i3 | 0) == 15) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  i3 = 16;
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i21);
 ___resumeException(i1 | 0);
}

function ___udivmoddi4(i5, i6, i8, i11, i13) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 i13 = i13 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i10 = 0, i12 = 0, i14 = 0, i15 = 0;
 i9 = i5;
 i4 = i6;
 i7 = i4;
 i2 = i8;
 i12 = i11;
 i3 = i12;
 if (!i7) {
  i1 = (i13 | 0) != 0;
  if (!i3) {
   if (i1) {
    HEAP32[i13 >> 2] = (i9 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i12 = 0;
   i13 = (i9 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i12, i13) | 0;
  } else {
   if (!i1) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
 }
 i1 = (i3 | 0) == 0;
 do if (i2) {
  if (!i1) {
   i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
   if (i1 >>> 0 <= 31) {
    i10 = i1 + 1 | 0;
    i3 = 31 - i1 | 0;
    i6 = i1 - 31 >> 31;
    i2 = i10;
    i5 = i9 >>> (i10 >>> 0) & i6 | i7 << i3;
    i6 = i7 >>> (i10 >>> 0) & i6;
    i1 = 0;
    i3 = i9 << i3;
    break;
   }
   if (!i13) {
    i12 = 0;
    i13 = 0;
    return (tempRet0 = i12, i13) | 0;
   }
   HEAP32[i13 >> 2] = i5 | 0;
   HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
   i12 = 0;
   i13 = 0;
   return (tempRet0 = i12, i13) | 0;
  }
  i1 = i2 - 1 | 0;
  if (i1 & i2 | 0) {
   i3 = (Math_clz32(i2 | 0) | 0) + 33 - (Math_clz32(i7 | 0) | 0) | 0;
   i15 = 64 - i3 | 0;
   i10 = 32 - i3 | 0;
   i4 = i10 >> 31;
   i14 = i3 - 32 | 0;
   i6 = i14 >> 31;
   i2 = i3;
   i5 = i10 - 1 >> 31 & i7 >>> (i14 >>> 0) | (i7 << i10 | i9 >>> (i3 >>> 0)) & i6;
   i6 = i6 & i7 >>> (i3 >>> 0);
   i1 = i9 << i15 & i4;
   i3 = (i7 << i15 | i9 >>> (i14 >>> 0)) & i4 | i9 << i10 & i3 - 33 >> 31;
   break;
  }
  if (i13 | 0) {
   HEAP32[i13 >> 2] = i1 & i9;
   HEAP32[i13 + 4 >> 2] = 0;
  }
  if ((i2 | 0) == 1) {
   i14 = i4 | i6 & 0;
   i15 = i5 | 0 | 0;
   return (tempRet0 = i14, i15) | 0;
  } else {
   i15 = _llvm_cttz_i32(i2 | 0) | 0;
   i14 = i7 >>> (i15 >>> 0) | 0;
   i15 = i7 << 32 - i15 | i9 >>> (i15 >>> 0) | 0;
   return (tempRet0 = i14, i15) | 0;
  }
 } else {
  if (i1) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = (i7 >>> 0) % (i2 >>> 0);
    HEAP32[i13 + 4 >> 2] = 0;
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i2 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  if (!i9) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = 0;
    HEAP32[i13 + 4 >> 2] = (i7 >>> 0) % (i3 >>> 0);
   }
   i14 = 0;
   i15 = (i7 >>> 0) / (i3 >>> 0) >>> 0;
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = i3 - 1 | 0;
  if (!(i1 & i3)) {
   if (i13 | 0) {
    HEAP32[i13 >> 2] = i5 | 0;
    HEAP32[i13 + 4 >> 2] = i1 & i7 | i6 & 0;
   }
   i14 = 0;
   i15 = i7 >>> ((_llvm_cttz_i32(i3 | 0) | 0) >>> 0);
   return (tempRet0 = i14, i15) | 0;
  }
  i1 = (Math_clz32(i3 | 0) | 0) - (Math_clz32(i7 | 0) | 0) | 0;
  if (i1 >>> 0 <= 30) {
   i6 = i1 + 1 | 0;
   i3 = 31 - i1 | 0;
   i2 = i6;
   i5 = i7 << i3 | i9 >>> (i6 >>> 0);
   i6 = i7 >>> (i6 >>> 0);
   i1 = 0;
   i3 = i9 << i3;
   break;
  }
  if (!i13) {
   i14 = 0;
   i15 = 0;
   return (tempRet0 = i14, i15) | 0;
  }
  HEAP32[i13 >> 2] = i5 | 0;
  HEAP32[i13 + 4 >> 2] = i4 | i6 & 0;
  i14 = 0;
  i15 = 0;
  return (tempRet0 = i14, i15) | 0;
 } while (0);
 if (!i2) {
  i7 = i3;
  i4 = 0;
  i3 = 0;
 } else {
  i10 = i8 | 0 | 0;
  i9 = i12 | i11 & 0;
  i7 = _i64Add(i10 | 0, i9 | 0, -1, -1) | 0;
  i8 = tempRet0;
  i4 = i3;
  i3 = 0;
  do {
   i11 = i4;
   i4 = i1 >>> 31 | i4 << 1;
   i1 = i3 | i1 << 1;
   i11 = i5 << 1 | i11 >>> 31 | 0;
   i12 = i5 >>> 31 | i6 << 1 | 0;
   _i64Subtract(i7 | 0, i8 | 0, i11 | 0, i12 | 0) | 0;
   i15 = tempRet0;
   i14 = i15 >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1;
   i3 = i14 & 1;
   i5 = _i64Subtract(i11 | 0, i12 | 0, i14 & i10 | 0, (((i15 | 0) < 0 ? -1 : 0) >> 31 | ((i15 | 0) < 0 ? -1 : 0) << 1) & i9 | 0) | 0;
   i6 = tempRet0;
   i2 = i2 - 1 | 0;
  } while ((i2 | 0) != 0);
  i7 = i4;
  i4 = 0;
 }
 i2 = 0;
 if (i13 | 0) {
  HEAP32[i13 >> 2] = i5;
  HEAP32[i13 + 4 >> 2] = i6;
 }
 i14 = (i1 | 0) >>> 31 | (i7 | i2) << 1 | (i2 << 1 | i1 >>> 31) & 0 | i4;
 i15 = (i1 << 1 | 0 >>> 31) & -2 | i3;
 return (tempRet0 = i14, i15) | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe(i1, i21, i18, i19, d11) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d11 = +d11;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 i14 = i20 + 300 | 0;
 i7 = i20 + 48 | 0;
 i6 = i20 + 32 | 0;
 i4 = i20 + 24 | 0;
 i2 = i20 + 8 | 0;
 i10 = i20;
 i13 = i20 + 304 | 0;
 i12 = i20 + 296 | 0;
 i3 = i20 + 68 | 0;
 i17 = i20 + 64 | 0;
 i15 = i20 + 60 | 0;
 i16 = i20 + 56 | 0;
 i5 = i10;
 HEAP32[i5 >> 2] = 37;
 HEAP32[i5 + 4 >> 2] = 0;
 i5 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i10 + 1 | 0, 13807, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i12 >> 2] = i13;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i5) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i2) | 0;
 } else {
  HEAPF64[i4 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i4) | 0;
 }
 do if ((i1 | 0) > 29) {
  if (i5) {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (!(i9 & 1) ? (__THREW__ = 0, HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2], HEAPF64[i6 + 8 >> 3] = d11, i8 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i6 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i8;
    i22 = 12;
   }
  } else {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i8 = __THREW__;
   __THREW__ = 0;
   if (!(i8 & 1) ? (__THREW__ = 0, HEAPF64[i7 >> 3] = d11, i9 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i7 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i9;
    i22 = 12;
   }
  }
  if ((i22 | 0) == 12) {
   i2 = HEAP32[i12 >> 2] | 0;
   if (i2 | 0) {
    i4 = i2;
    i7 = i2;
    i22 = 16;
    break;
   }
   __THREW__ = 0;
   invoke_v(3);
   i10 = __THREW__;
   __THREW__ = 0;
   if (!(i10 & 1)) {
    i7 = HEAP32[i12 >> 2] | 0;
    i4 = i7;
    i22 = 16;
    break;
   }
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else {
  i4 = HEAP32[i12 >> 2] | 0;
  i7 = 0;
  i22 = 16;
 } while (0);
 if ((i22 | 0) == 16) {
  i5 = i4 + i1 | 0;
  i6 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i4, i5, i18) | 0;
  L22 : do if ((i4 | 0) == (i13 | 0)) {
   i4 = 0;
   i1 = i13;
   i22 = 22;
  } else {
   i2 = _malloc(i1 << 3) | 0;
   do if (!i2) {
    __THREW__ = 0;
    invoke_v(3);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L22;
    } else {
     i1 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i1 = i4; while (0);
   i3 = i2;
   i4 = i2;
   i22 = 22;
  } while (0);
  if ((i22 | 0) == 22) {
   __THREW__ = 0;
   i2 = invoke_ii(65, i18 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   do if (i13 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i22 = 32;
   } else {
    HEAP32[i14 >> 2] = i2;
    __THREW__ = 0;
    invoke_viiiiiii(4, i1 | 0, i6 | 0, i5 | 0, i3 | 0, i17 | 0, i15 | 0, i14 | 0);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
     i22 = 32;
     break;
    }
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
    HEAP32[i16 >> 2] = HEAP32[i21 >> 2];
    i17 = HEAP32[i17 >> 2] | 0;
    i1 = HEAP32[i15 >> 2] | 0;
    __THREW__ = 0;
    HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
    i1 = invoke_iiiiiii(40, i14 | 0, i3 | 0, i17 | 0, i1 | 0, i18 | 0, i19 | 0) | 0;
    i19 = __THREW__;
    __THREW__ = 0;
    if (i19 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[i21 >> 2] = i1;
    if (i4 | 0) _free(i4);
    if (i7 | 0) _free(i7);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   if (i4) _free(i4);
  }
  if (i7) _free(i7);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd(i1, i21, i18, i19, d11) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d11 = +d11;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 i14 = i20 + 300 | 0;
 i7 = i20 + 48 | 0;
 i6 = i20 + 32 | 0;
 i4 = i20 + 24 | 0;
 i2 = i20 + 8 | 0;
 i10 = i20;
 i13 = i20 + 304 | 0;
 i12 = i20 + 296 | 0;
 i3 = i20 + 68 | 0;
 i17 = i20 + 64 | 0;
 i15 = i20 + 60 | 0;
 i16 = i20 + 56 | 0;
 i5 = i10;
 HEAP32[i5 >> 2] = 37;
 HEAP32[i5 + 4 >> 2] = 0;
 i5 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i10 + 1 | 0, 22885, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i12 >> 2] = i13;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i5) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i2) | 0;
 } else {
  HEAPF64[i4 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i4) | 0;
 }
 do if ((i1 | 0) > 29) {
  if (i5) {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (!(i9 & 1) ? (__THREW__ = 0, HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2], HEAPF64[i6 + 8 >> 3] = d11, i8 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i6 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i8;
    i22 = 12;
   }
  } else {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i8 = __THREW__;
   __THREW__ = 0;
   if (!(i8 & 1) ? (__THREW__ = 0, HEAPF64[i7 >> 3] = d11, i9 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i7 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i9;
    i22 = 12;
   }
  }
  if ((i22 | 0) == 12) {
   i2 = HEAP32[i12 >> 2] | 0;
   if (i2 | 0) {
    i4 = i2;
    i7 = i2;
    i22 = 16;
    break;
   }
   __THREW__ = 0;
   invoke_v(3);
   i10 = __THREW__;
   __THREW__ = 0;
   if (!(i10 & 1)) {
    i7 = HEAP32[i12 >> 2] | 0;
    i4 = i7;
    i22 = 16;
    break;
   }
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else {
  i4 = HEAP32[i12 >> 2] | 0;
  i7 = 0;
  i22 = 16;
 } while (0);
 if ((i22 | 0) == 16) {
  i5 = i4 + i1 | 0;
  i6 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i4, i5, i18) | 0;
  L22 : do if ((i4 | 0) == (i13 | 0)) {
   i4 = 0;
   i1 = i13;
   i22 = 22;
  } else {
   i2 = _malloc(i1 << 3) | 0;
   do if (!i2) {
    __THREW__ = 0;
    invoke_v(3);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L22;
    } else {
     i1 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i1 = i4; while (0);
   i3 = i2;
   i4 = i2;
   i22 = 22;
  } while (0);
  if ((i22 | 0) == 22) {
   __THREW__ = 0;
   i2 = invoke_ii(65, i18 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   do if (i13 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i22 = 32;
   } else {
    HEAP32[i14 >> 2] = i2;
    __THREW__ = 0;
    invoke_viiiiiii(4, i1 | 0, i6 | 0, i5 | 0, i3 | 0, i17 | 0, i15 | 0, i14 | 0);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
     i22 = 32;
     break;
    }
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
    HEAP32[i16 >> 2] = HEAP32[i21 >> 2];
    i17 = HEAP32[i17 >> 2] | 0;
    i1 = HEAP32[i15 >> 2] | 0;
    __THREW__ = 0;
    HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
    i1 = invoke_iiiiiii(40, i14 | 0, i3 | 0, i17 | 0, i1 | 0, i18 | 0, i19 | 0) | 0;
    i19 = __THREW__;
    __THREW__ = 0;
    if (i19 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[i21 >> 2] = i1;
    if (i4 | 0) _free(i4);
    if (i7 | 0) _free(i7);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   if (i4) _free(i4);
  }
  if (i7) _free(i7);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce(i1, i21, i18, i19, d11) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d11 = +d11;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i14 = i20 + 72 | 0;
 i7 = i20 + 48 | 0;
 i6 = i20 + 32 | 0;
 i4 = i20 + 24 | 0;
 i2 = i20 + 8 | 0;
 i10 = i20;
 i13 = i20 + 134 | 0;
 i12 = i20 + 68 | 0;
 i3 = i20 + 76 | 0;
 i17 = i20 + 64 | 0;
 i15 = i20 + 60 | 0;
 i16 = i20 + 56 | 0;
 i5 = i10;
 HEAP32[i5 >> 2] = 37;
 HEAP32[i5 + 4 >> 2] = 0;
 i5 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i10 + 1 | 0, 13807, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i12 >> 2] = i13;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i5) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i2) | 0;
 } else {
  HEAPF64[i4 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i4) | 0;
 }
 do if ((i1 | 0) > 29) {
  if (i5) {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (!(i9 & 1) ? (__THREW__ = 0, HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2], HEAPF64[i6 + 8 >> 3] = d11, i8 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i6 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i8;
    i22 = 12;
   }
  } else {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i8 = __THREW__;
   __THREW__ = 0;
   if (!(i8 & 1) ? (__THREW__ = 0, HEAPF64[i7 >> 3] = d11, i9 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i7 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i9;
    i22 = 12;
   }
  }
  if ((i22 | 0) == 12) {
   i2 = HEAP32[i12 >> 2] | 0;
   if (i2 | 0) {
    i4 = i2;
    i7 = i2;
    i22 = 16;
    break;
   }
   __THREW__ = 0;
   invoke_v(3);
   i10 = __THREW__;
   __THREW__ = 0;
   if (!(i10 & 1)) {
    i7 = HEAP32[i12 >> 2] | 0;
    i4 = i7;
    i22 = 16;
    break;
   }
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else {
  i4 = HEAP32[i12 >> 2] | 0;
  i7 = 0;
  i22 = 16;
 } while (0);
 if ((i22 | 0) == 16) {
  i5 = i4 + i1 | 0;
  i6 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i4, i5, i18) | 0;
  L22 : do if ((i4 | 0) == (i13 | 0)) {
   i4 = 0;
   i1 = i13;
   i22 = 22;
  } else {
   i2 = _malloc(i1 << 1) | 0;
   do if (!i2) {
    __THREW__ = 0;
    invoke_v(3);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L22;
    } else {
     i1 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i1 = i4; while (0);
   i3 = i2;
   i4 = i2;
   i22 = 22;
  } while (0);
  if ((i22 | 0) == 22) {
   __THREW__ = 0;
   i2 = invoke_ii(65, i18 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   do if (i13 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i22 = 32;
   } else {
    HEAP32[i14 >> 2] = i2;
    __THREW__ = 0;
    invoke_viiiiiii(2, i1 | 0, i6 | 0, i5 | 0, i3 | 0, i17 | 0, i15 | 0, i14 | 0);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
     i22 = 32;
     break;
    }
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
    HEAP32[i16 >> 2] = HEAP32[i21 >> 2];
    i17 = HEAP32[i17 >> 2] | 0;
    i1 = HEAP32[i15 >> 2] | 0;
    __THREW__ = 0;
    HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
    i1 = invoke_iiiiiii(39, i14 | 0, i3 | 0, i17 | 0, i1 | 0, i18 | 0, i19 | 0) | 0;
    i19 = __THREW__;
    __THREW__ = 0;
    if (i19 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[i21 >> 2] = i1;
    if (i4 | 0) _free(i4);
    if (i7 | 0) _free(i7);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   if (i4) _free(i4);
  }
  if (i7) _free(i7);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd(i1, i21, i18, i19, d11) {
 i1 = i1 | 0;
 i21 = i21 | 0;
 i18 = i18 | 0;
 i19 = i19 | 0;
 d11 = +d11;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0, i16 = 0, i17 = 0, i20 = 0, i22 = 0;
 i20 = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 i14 = i20 + 72 | 0;
 i7 = i20 + 48 | 0;
 i6 = i20 + 32 | 0;
 i4 = i20 + 24 | 0;
 i2 = i20 + 8 | 0;
 i10 = i20;
 i13 = i20 + 134 | 0;
 i12 = i20 + 68 | 0;
 i3 = i20 + 76 | 0;
 i17 = i20 + 64 | 0;
 i15 = i20 + 60 | 0;
 i16 = i20 + 56 | 0;
 i5 = i10;
 HEAP32[i5 >> 2] = 37;
 HEAP32[i5 + 4 >> 2] = 0;
 i5 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i10 + 1 | 0, 22885, HEAP32[i18 + 4 >> 2] | 0) | 0;
 HEAP32[i12 >> 2] = i13;
 i1 = __ZNSt3__26__clocEv() | 0;
 if (i5) {
  HEAP32[i2 >> 2] = HEAP32[i18 + 8 >> 2];
  HEAPF64[i2 + 8 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i2) | 0;
 } else {
  HEAPF64[i4 >> 3] = d11;
  i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i13, 30, i1, i10, i4) | 0;
 }
 do if ((i1 | 0) > 29) {
  if (i5) {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (!(i9 & 1) ? (__THREW__ = 0, HEAP32[i6 >> 2] = HEAP32[i18 + 8 >> 2], HEAPF64[i6 + 8 >> 3] = d11, i8 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i6 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i8;
    i22 = 12;
   }
  } else {
   __THREW__ = 0;
   i1 = invoke_i(1) | 0;
   i8 = __THREW__;
   __THREW__ = 0;
   if (!(i8 & 1) ? (__THREW__ = 0, HEAPF64[i7 >> 3] = d11, i9 = invoke_iiiii(14, i12 | 0, i1 | 0, i10 | 0, i7 | 0) | 0, i10 = __THREW__, __THREW__ = 0, !(i10 & 1)) : 0) {
    i1 = i9;
    i22 = 12;
   }
  }
  if ((i22 | 0) == 12) {
   i2 = HEAP32[i12 >> 2] | 0;
   if (i2 | 0) {
    i4 = i2;
    i7 = i2;
    i22 = 16;
    break;
   }
   __THREW__ = 0;
   invoke_v(3);
   i10 = __THREW__;
   __THREW__ = 0;
   if (!(i10 & 1)) {
    i7 = HEAP32[i12 >> 2] | 0;
    i4 = i7;
    i22 = 16;
    break;
   }
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else {
  i4 = HEAP32[i12 >> 2] | 0;
  i7 = 0;
  i22 = 16;
 } while (0);
 if ((i22 | 0) == 16) {
  i5 = i4 + i1 | 0;
  i6 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i4, i5, i18) | 0;
  L22 : do if ((i4 | 0) == (i13 | 0)) {
   i4 = 0;
   i1 = i13;
   i22 = 22;
  } else {
   i2 = _malloc(i1 << 1) | 0;
   do if (!i2) {
    __THREW__ = 0;
    invoke_v(3);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break L22;
    } else {
     i1 = HEAP32[i12 >> 2] | 0;
     break;
    }
   } else i1 = i4; while (0);
   i3 = i2;
   i4 = i2;
   i22 = 22;
  } while (0);
  if ((i22 | 0) == 22) {
   __THREW__ = 0;
   i2 = invoke_ii(65, i18 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   do if (i13 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i22 = 32;
   } else {
    HEAP32[i14 >> 2] = i2;
    __THREW__ = 0;
    invoke_viiiiiii(2, i1 | 0, i6 | 0, i5 | 0, i3 | 0, i17 | 0, i15 | 0, i14 | 0);
    i13 = __THREW__;
    __THREW__ = 0;
    if (i13 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
     i22 = 32;
     break;
    }
    __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i14 >> 2] | 0) | 0;
    HEAP32[i16 >> 2] = HEAP32[i21 >> 2];
    i17 = HEAP32[i17 >> 2] | 0;
    i1 = HEAP32[i15 >> 2] | 0;
    __THREW__ = 0;
    HEAP32[i14 >> 2] = HEAP32[i16 >> 2];
    i1 = invoke_iiiiiii(39, i14 | 0, i3 | 0, i17 | 0, i1 | 0, i18 | 0, i19 | 0) | 0;
    i19 = __THREW__;
    __THREW__ = 0;
    if (i19 & 1) {
     i1 = ___cxa_find_matching_catch_2() | 0;
     break;
    }
    HEAP32[i21 >> 2] = i1;
    if (i4 | 0) _free(i4);
    if (i7 | 0) _free(i7);
    STACKTOP = i20;
    return i1 | 0;
   } while (0);
   if (i4) _free(i4);
  }
  if (i7) _free(i7);
 }
 ___resumeException(i1 | 0);
 return 0;
}

function __ZNSt3__28ios_base4InitC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = HEAP32[484] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(18516, i1, 18572);
 HEAP32[4459] = 5564;
 HEAP32[4461] = 5584;
 HEAP32[4460] = 0;
 __THREW__ = 0;
 invoke_vii(44, 17844, 18516);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(17844);
  ___resumeException(i2 | 0);
 }
 HEAP32[4479] = 0;
 HEAP32[4480] = -1;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(18580, i1, 18636);
 HEAP32[4481] = 5604;
 HEAP32[4483] = 5624;
 HEAP32[4482] = 0;
 __THREW__ = 0;
 invoke_vii(44, 17932, 18580);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(17932);
  ___resumeException(i2 | 0);
 }
 HEAP32[4501] = 0;
 HEAP32[4502] = -1;
 i1 = HEAP32[513] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(18644, i1, 18692);
 HEAP32[4503] = 5644;
 HEAP32[4504] = 5664;
 __THREW__ = 0;
 invoke_vii(44, 18016, 18644);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(18016);
  ___resumeException(i2 | 0);
 }
 HEAP32[4522] = 0;
 HEAP32[4523] = -1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(18700, i1, 18748);
 HEAP32[4524] = 5684;
 HEAP32[4525] = 5704;
 __THREW__ = 0;
 invoke_vii(44, 18100, 18700);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(18100);
  ___resumeException(i2 | 0);
 }
 HEAP32[4543] = 0;
 HEAP32[4544] = -1;
 i1 = HEAP32[455] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(18756, i1, 18804);
 HEAP32[4545] = 5644;
 HEAP32[4546] = 5664;
 __THREW__ = 0;
 invoke_vii(44, 18184, 18756);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(18184);
  ___resumeException(i2 | 0);
 }
 HEAP32[4564] = 0;
 HEAP32[4565] = -1;
 i2 = HEAP32[18180 + (HEAP32[(HEAP32[4545] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[4587] = 5644;
 HEAP32[4588] = 5664;
 __THREW__ = 0;
 invoke_vii(44, 18352, i2 | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(18352);
  ___resumeException(i2 | 0);
 }
 HEAP32[4606] = 0;
 HEAP32[4607] = -1;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(18812, i1, 18860);
 HEAP32[4566] = 5684;
 HEAP32[4567] = 5704;
 __THREW__ = 0;
 invoke_vii(44, 18268, 18812);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(18268);
  ___resumeException(i2 | 0);
 }
 HEAP32[4585] = 0;
 HEAP32[4586] = -1;
 i2 = HEAP32[18264 + (HEAP32[(HEAP32[4566] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[4608] = 5684;
 HEAP32[4609] = 5704;
 __THREW__ = 0;
 invoke_vii(44, 18436, i2 | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(18436);
  ___resumeException(i2 | 0);
 } else {
  HEAP32[4627] = 0;
  HEAP32[4628] = -1;
  HEAP32[17836 + (HEAP32[(HEAP32[4459] | 0) + -12 >> 2] | 0) + 72 >> 2] = 18012;
  HEAP32[17924 + (HEAP32[(HEAP32[4481] | 0) + -12 >> 2] | 0) + 72 >> 2] = 18096;
  i2 = 18180 + (HEAP32[(HEAP32[4545] | 0) + -12 >> 2] | 0) + 4 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 8192;
  i2 = 18264 + (HEAP32[(HEAP32[4566] | 0) + -12 >> 2] | 0) + 4 | 0;
  HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 8192;
  HEAP32[18180 + (HEAP32[(HEAP32[4545] | 0) + -12 >> 2] | 0) + 72 >> 2] = 18012;
  HEAP32[18264 + (HEAP32[(HEAP32[4566] | 0) + -12 >> 2] | 0) + 72 >> 2] = 18096;
  return;
 }
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2, i14, i15, i6, i13) {
 i2 = i2 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i6 = i6 | 0;
 i13 = i13 | 0;
 var i1 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0;
 L1 : do if ((i2 | 0) == (HEAP32[i14 + 8 >> 2] | 0)) {
  if ((HEAP32[i14 + 4 >> 2] | 0) == (i15 | 0) ? (i1 = i14 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i6;
 } else {
  if ((i2 | 0) != (HEAP32[i14 >> 2] | 0)) {
   i12 = HEAP32[i2 + 12 >> 2] | 0;
   i4 = i2 + 16 + (i12 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2 + 16 | 0, i14, i15, i6, i13);
   i1 = i2 + 24 | 0;
   if ((i12 | 0) <= 1) break;
   i2 = HEAP32[i2 + 8 >> 2] | 0;
   if ((i2 & 2 | 0) == 0 ? (i5 = i14 + 36 | 0, (HEAP32[i5 >> 2] | 0) != 1) : 0) {
    if (!(i2 & 1)) {
     i2 = i14 + 54 | 0;
     while (1) {
      if (HEAP8[i2 >> 0] | 0) break L1;
      if ((HEAP32[i5 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
      i1 = i1 + 8 | 0;
      if (i1 >>> 0 >= i4 >>> 0) break L1;
     }
    }
    i2 = i14 + 24 | 0;
    i3 = i14 + 54 | 0;
    while (1) {
     if (HEAP8[i3 >> 0] | 0) break L1;
     if ((HEAP32[i5 >> 2] | 0) == 1 ? (HEAP32[i2 >> 2] | 0) == 1 : 0) break L1;
     __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
     i1 = i1 + 8 | 0;
     if (i1 >>> 0 >= i4 >>> 0) break L1;
    }
   }
   i2 = i14 + 54 | 0;
   while (1) {
    if (HEAP8[i2 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i14, i15, i6, i13);
    i1 = i1 + 8 | 0;
    if (i1 >>> 0 >= i4 >>> 0) break L1;
   }
  }
  if ((HEAP32[i14 + 16 >> 2] | 0) != (i15 | 0) ? (i12 = i14 + 20 | 0, (HEAP32[i12 >> 2] | 0) != (i15 | 0)) : 0) {
   HEAP32[i14 + 32 >> 2] = i6;
   i11 = i14 + 44 | 0;
   if ((HEAP32[i11 >> 2] | 0) == 4) break;
   i5 = i2 + 16 + (HEAP32[i2 + 12 >> 2] << 3) | 0;
   i6 = i14 + 52 | 0;
   i7 = i14 + 53 | 0;
   i9 = i14 + 54 | 0;
   i8 = i2 + 8 | 0;
   i10 = i14 + 24 | 0;
   i1 = 0;
   i3 = i2 + 16 | 0;
   i4 = 0;
   L34 : while (1) {
    if (i3 >>> 0 >= i5 >>> 0) {
     i2 = 20;
     break;
    }
    HEAP8[i6 >> 0] = 0;
    HEAP8[i7 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i3, i14, i15, i15, 1, i13);
    if (HEAP8[i9 >> 0] | 0) {
     i2 = 20;
     break;
    }
    do if (HEAP8[i7 >> 0] | 0) {
     if (!(HEAP8[i6 >> 0] | 0)) if (!(HEAP32[i8 >> 2] & 1)) {
      i1 = 1;
      i2 = 20;
      break L34;
     } else {
      i1 = 1;
      i2 = i4;
      break;
     }
     if ((HEAP32[i10 >> 2] | 0) == 1) {
      i2 = 25;
      break L34;
     }
     if (!(HEAP32[i8 >> 2] & 2)) {
      i2 = 25;
      break L34;
     } else {
      i1 = 1;
      i2 = 1;
     }
    } else i2 = i4; while (0);
    i3 = i3 + 8 | 0;
    i4 = i2;
   }
   do if ((i2 | 0) == 20) {
    if ((!i4 ? (HEAP32[i12 >> 2] = i15, i15 = i14 + 40 | 0, HEAP32[i15 >> 2] = (HEAP32[i15 >> 2] | 0) + 1, (HEAP32[i14 + 36 >> 2] | 0) == 1) : 0) ? (HEAP32[i10 >> 2] | 0) == 2 : 0) {
     HEAP8[i9 >> 0] = 1;
     if (i1) {
      i2 = 25;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 25; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 25) i1 = 3;
   HEAP32[i11 >> 2] = i1;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i14 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i1, i11, i12, i2, i13, i14, i15, i3) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i16 = 0;
 HEAP32[i12 >> 2] = i1;
 HEAP32[i14 >> 2] = i2;
 if (i3 & 4) {
  i1 = HEAP32[i12 >> 2] | 0;
  i2 = i11;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i12 >> 2] = i1 + 3;
 } else i2 = i11;
 i9 = i13;
 L9 : while (1) {
  i5 = HEAP32[i12 >> 2] | 0;
  i1 = i5 >>> 0 < i11 >>> 0;
  if (!i1) {
   i16 = 41;
   break;
  }
  i10 = HEAP32[i14 >> 2] | 0;
  if (i10 >>> 0 >= i13 >>> 0) {
   i16 = 41;
   break;
  }
  i4 = HEAP8[i5 >> 0] | 0;
  i8 = i4 & 255;
  if (i8 >>> 0 > i15 >>> 0) {
   i1 = 2;
   break;
  }
  do if (i4 << 24 >> 24 > -1) {
   HEAP16[i10 >> 1] = i4 & 255;
   HEAP32[i12 >> 2] = i5 + 1;
  } else {
   if ((i4 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i4 & 255) < 224) {
    if ((i2 - i5 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i5 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i8 << 6 & 1984;
    if (i1 >>> 0 > i15 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i10 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 2;
    break;
   }
   if ((i4 & 255) < 240) {
    if ((i2 - i5 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i5 + 1 >> 0] | 0;
    i1 = HEAP8[i5 + 2 >> 0] | 0;
    switch (i4 << 24 >> 24) {
    case -32:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i8 << 12 | i1 & 63;
    if ((i1 & 65535) >>> 0 > i15 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP16[i10 >> 1] = i1;
    HEAP32[i12 >> 2] = i5 + 3;
    break;
   }
   if ((i4 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i5 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i6 = HEAP8[i5 + 1 >> 0] | 0;
   i1 = HEAP8[i5 + 2 >> 0] | 0;
   i3 = HEAP8[i5 + 3 >> 0] | 0;
   switch (i4 << 24 >> 24) {
   case -16:
    {
     if ((i6 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i6 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i6 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i7 = i1 & 255;
   if ((i7 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i3 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   if ((i9 - i10 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i5 = i8 & 7;
   i3 = i6 & 255;
   i4 = i7 << 6;
   i1 = i1 & 63;
   if ((i3 << 12 & 258048 | i5 << 18 | i4 & 4032 | i1) >>> 0 > i15 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP16[i10 >> 1] = i3 << 2 & 60 | i7 >>> 4 & 3 | ((i3 >>> 4 & 3 | i5 << 2) << 6) + 16320 | 55296;
   i10 = i10 + 2 | 0;
   HEAP32[i14 >> 2] = i10;
   HEAP16[i10 >> 1] = i1 | i4 & 960 | 56320;
   HEAP32[i12 >> 2] = (HEAP32[i12 >> 2] | 0) + 4;
  } while (0);
  HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 2;
 }
 if ((i16 | 0) == 41) i1 = i1 & 1;
 return i1 | 0;
}

function _fmod(d12, d1) {
 d12 = +d12;
 d1 = +d1;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 HEAPF64[tempDoublePtr >> 3] = d12;
 i6 = HEAP32[tempDoublePtr >> 2] | 0;
 i8 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i10 = HEAP32[tempDoublePtr >> 2] | 0;
 i11 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i3 = _bitshift64Lshr(i6 | 0, i8 | 0, 52) | 0;
 i3 = i3 & 2047;
 i9 = _bitshift64Lshr(i10 | 0, i11 | 0, 52) | 0;
 i9 = i9 & 2047;
 i13 = i8 & -2147483648;
 i5 = _bitshift64Shl(i10 | 0, i11 | 0, 1) | 0;
 i7 = tempRet0;
 L1 : do if (!((i5 | 0) == 0 & (i7 | 0) == 0) ? (i4 = i11 & 2147483647, !(i4 >>> 0 > 2146435072 | (i4 | 0) == 2146435072 & i10 >>> 0 > 0 | (i3 | 0) == 2047)) : 0) {
  i2 = _bitshift64Shl(i6 | 0, i8 | 0, 1) | 0;
  i4 = tempRet0;
  if (!(i4 >>> 0 > i7 >>> 0 | (i4 | 0) == (i7 | 0) & i2 >>> 0 > i5 >>> 0)) return +((i2 | 0) == (i5 | 0) & (i4 | 0) == (i7 | 0) ? d12 * 0.0 : d12);
  if (!i3) {
   i2 = _bitshift64Shl(i6 | 0, i8 | 0, 12) | 0;
   i4 = tempRet0;
   if ((i4 | 0) > -1 | (i4 | 0) == -1 & i2 >>> 0 > 4294967295) {
    i3 = 0;
    do {
     i3 = i3 + -1 | 0;
     i2 = _bitshift64Shl(i2 | 0, i4 | 0, 1) | 0;
     i4 = tempRet0;
    } while ((i4 | 0) > -1 | (i4 | 0) == -1 & i2 >>> 0 > 4294967295);
   } else i3 = 0;
   i6 = _bitshift64Shl(i6 | 0, i8 | 0, 1 - i3 | 0) | 0;
   i5 = tempRet0;
  } else i5 = i8 & 1048575 | 1048576;
  if (!i9) {
   i4 = _bitshift64Shl(i10 | 0, i11 | 0, 12) | 0;
   i7 = tempRet0;
   if ((i7 | 0) > -1 | (i7 | 0) == -1 & i4 >>> 0 > 4294967295) {
    i2 = 0;
    do {
     i2 = i2 + -1 | 0;
     i4 = _bitshift64Shl(i4 | 0, i7 | 0, 1) | 0;
     i7 = tempRet0;
    } while ((i7 | 0) > -1 | (i7 | 0) == -1 & i4 >>> 0 > 4294967295);
   } else i2 = 0;
   i10 = _bitshift64Shl(i10 | 0, i11 | 0, 1 - i2 | 0) | 0;
   i9 = i2;
   i8 = tempRet0;
  } else i8 = i11 & 1048575 | 1048576;
  i4 = _i64Subtract(i6 | 0, i5 | 0, i10 | 0, i8 | 0) | 0;
  i2 = tempRet0;
  i7 = (i2 | 0) > -1 | (i2 | 0) == -1 & i4 >>> 0 > 4294967295;
  L23 : do if ((i3 | 0) > (i9 | 0)) {
   while (1) {
    if (i7) {
     if ((i4 | 0) == 0 & (i2 | 0) == 0) break;
    } else {
     i4 = i6;
     i2 = i5;
    }
    i6 = _bitshift64Shl(i4 | 0, i2 | 0, 1) | 0;
    i5 = tempRet0;
    i3 = i3 + -1 | 0;
    i4 = _i64Subtract(i6 | 0, i5 | 0, i10 | 0, i8 | 0) | 0;
    i2 = tempRet0;
    i7 = (i2 | 0) > -1 | (i2 | 0) == -1 & i4 >>> 0 > 4294967295;
    if ((i3 | 0) <= (i9 | 0)) break L23;
   }
   d1 = d12 * 0.0;
   break L1;
  } while (0);
  if (i7) {
   if ((i4 | 0) == 0 & (i2 | 0) == 0) {
    d1 = d12 * 0.0;
    break;
   }
  } else {
   i2 = i5;
   i4 = i6;
  }
  if (i2 >>> 0 < 1048576 | (i2 | 0) == 1048576 & i4 >>> 0 < 0) do {
   i4 = _bitshift64Shl(i4 | 0, i2 | 0, 1) | 0;
   i2 = tempRet0;
   i3 = i3 + -1 | 0;
  } while (i2 >>> 0 < 1048576 | (i2 | 0) == 1048576 & i4 >>> 0 < 0);
  if ((i3 | 0) > 0) {
   i11 = _i64Add(i4 | 0, i2 | 0, 0, -1048576) | 0;
   i2 = tempRet0;
   i3 = _bitshift64Shl(i3 | 0, 0, 52) | 0;
   i2 = i2 | tempRet0;
   i3 = i11 | i3;
  } else {
   i3 = _bitshift64Lshr(i4 | 0, i2 | 0, 1 - i3 | 0) | 0;
   i2 = tempRet0;
  }
  HEAP32[tempDoublePtr >> 2] = i3;
  HEAP32[tempDoublePtr + 4 >> 2] = i2 | i13;
  d1 = +HEAPF64[tempDoublePtr >> 3];
 } else i14 = 3; while (0);
 if ((i14 | 0) == 3) {
  d1 = d12 * d1;
  d1 = d1 / d1;
 }
 return +d1;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i1, i10, i11, i2, i12, i13, i14, i3) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i15 = 0;
 HEAP32[i11 >> 2] = i1;
 HEAP32[i13 >> 2] = i2;
 if (i3 & 4) {
  i1 = HEAP32[i11 >> 2] | 0;
  i2 = i10;
  if ((((i2 - i1 | 0) > 2 ? (HEAP8[i1 >> 0] | 0) == -17 : 0) ? (HEAP8[i1 + 1 >> 0] | 0) == -69 : 0) ? (HEAP8[i1 + 2 >> 0] | 0) == -65 : 0) HEAP32[i11 >> 2] = i1 + 3;
 } else i2 = i10;
 L9 : while (1) {
  i8 = HEAP32[i11 >> 2] | 0;
  i1 = i8 >>> 0 < i10 >>> 0;
  if (!i1) {
   i15 = 40;
   break;
  }
  i9 = HEAP32[i13 >> 2] | 0;
  if (i9 >>> 0 >= i12 >>> 0) {
   i15 = 40;
   break;
  }
  i5 = HEAP8[i8 >> 0] | 0;
  i7 = i5 & 255;
  do if (i5 << 24 >> 24 > -1) {
   if (i7 >>> 0 > i14 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i9 >> 2] = i7;
   HEAP32[i11 >> 2] = i8 + 1;
  } else {
   if ((i5 & 255) < 194) {
    i1 = 2;
    break L9;
   }
   if ((i5 & 255) < 224) {
    if ((i2 - i8 | 0) < 2) {
     i1 = 1;
     break L9;
    }
    i1 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = i1 & 63 | i7 << 6 & 1984;
    if (i1 >>> 0 > i14 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i9 >> 2] = i1;
    HEAP32[i11 >> 2] = i8 + 2;
    break;
   }
   if ((i5 & 255) < 240) {
    if ((i2 - i8 | 0) < 3) {
     i1 = 1;
     break L9;
    }
    i3 = HEAP8[i8 + 1 >> 0] | 0;
    i1 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i5 << 24 >> 24) {
    case -32:
     {
      if ((i3 & -32) << 24 >> 24 != -96) {
       i1 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if ((i3 & -32) << 24 >> 24 != -128) {
       i1 = 2;
       break L9;
      }
      break;
     }
    default:
     if ((i3 & -64) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
    }
    i1 = i1 & 255;
    if ((i1 & 192 | 0) != 128) {
     i1 = 2;
     break L9;
    }
    i1 = (i3 & 255) << 6 & 4032 | i7 << 12 & 61440 | i1 & 63;
    if (i1 >>> 0 > i14 >>> 0) {
     i1 = 2;
     break L9;
    }
    HEAP32[i9 >> 2] = i1;
    HEAP32[i11 >> 2] = i8 + 3;
    break;
   }
   if ((i5 & 255) >= 245) {
    i1 = 2;
    break L9;
   }
   if ((i2 - i8 | 0) < 4) {
    i1 = 1;
    break L9;
   }
   i6 = HEAP8[i8 + 1 >> 0] | 0;
   i1 = HEAP8[i8 + 2 >> 0] | 0;
   i4 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i5 << 24 >> 24) {
   case -16:
    {
     if ((i6 + 112 & 255) >= 48) {
      i1 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if ((i6 & -16) << 24 >> 24 != -128) {
      i1 = 2;
      break L9;
     }
     break;
    }
   default:
    if ((i6 & -64) << 24 >> 24 != -128) {
     i1 = 2;
     break L9;
    }
   }
   i3 = i1 & 255;
   if ((i3 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = i4 & 255;
   if ((i1 & 192 | 0) != 128) {
    i1 = 2;
    break L9;
   }
   i1 = (i6 & 255) << 12 & 258048 | i7 << 18 & 1835008 | i3 << 6 & 4032 | i1 & 63;
   if (i1 >>> 0 > i14 >>> 0) {
    i1 = 2;
    break L9;
   }
   HEAP32[i9 >> 2] = i1;
   HEAP32[i11 >> 2] = i8 + 4;
  } while (0);
  HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + 4;
 }
 if ((i15 | 0) == 40) i1 = i1 & 1;
 return i1 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 L1 : do if ((HEAP8[16664] | 0) == 0 ? ___cxa_guard_acquire(16664) | 0 : 0) {
  if ((HEAP8[16672] | 0) == 0 ? ___cxa_guard_acquire(16672) | 0 : 0) {
   i2 = 19296;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 19584);
   ___cxa_atexit(114, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(18, 19296, 14082) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  do if ((((((((((((((!(i2 & 1) ? (__THREW__ = 0, invoke_iii(18, 19308, 14090) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19320, 14099) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19332, 14105) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19344, 14111) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19356, 14115) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19368, 14120) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19380, 14125) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19392, 14132) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19404, 14142) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19416, 14150) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19428, 14159) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19440, 14168) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19452, 14172) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19464, 14176) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   __THREW__ = 0;
   invoke_iii(18, 19476, 14180) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19488, 14111) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19500, 14184) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19512, 14188) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19524, 14192) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19536, 14196) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19548, 14200) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19560, 14204) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(18, 19572, 14208) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   HEAP32[4896] = 19296;
   break L1;
  } while (0);
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[4896] | 0;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i13, i10, i11, i12, i1) {
 i13 = i13 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i9 - i13 | 0) > 2 : 0) ? (HEAP8[i13 >> 0] | 0) == -17 : 0) ? (HEAP8[i13 + 1 >> 0] | 0) == -69 : 0) {
  i1 = 0;
  i8 = (HEAP8[i13 + 2 >> 0] | 0) == -65 ? i13 + 3 | 0 : i13;
 } else {
  i1 = 0;
  i8 = i13;
 }
 L6 : while (1) {
  if (!(i1 >>> 0 < i11 >>> 0 & i8 >>> 0 < i10 >>> 0)) {
   i2 = 39;
   break;
  }
  i6 = HEAP8[i8 >> 0] | 0;
  i7 = i6 & 255;
  if (i7 >>> 0 > i12 >>> 0) {
   i2 = 39;
   break;
  }
  do if (i6 << 24 >> 24 <= -1) {
   if ((i6 & 255) < 194) {
    i2 = 39;
    break L6;
   }
   if ((i6 & 255) < 224) {
    if ((i9 - i8 | 0) < 2) {
     i2 = 39;
     break L6;
    }
    i2 = HEAPU8[i8 + 1 >> 0] | 0;
    if ((i2 & 192 | 0) != 128) {
     i2 = 39;
     break L6;
    }
    if ((i2 & 63 | i7 << 6 & 1984) >>> 0 > i12 >>> 0) {
     i2 = 39;
     break L6;
    } else {
     i2 = i8 + 2 | 0;
     break;
    }
   }
   if ((i6 & 255) < 240) {
    i3 = i8;
    if ((i9 - i3 | 0) < 3) {
     i2 = 39;
     break L6;
    }
    i4 = HEAP8[i8 + 1 >> 0] | 0;
    i2 = HEAP8[i8 + 2 >> 0] | 0;
    switch (i6 << 24 >> 24) {
    case -32:
     {
      if ((i4 & -32) << 24 >> 24 != -96) {
       i2 = 19;
       break L6;
      }
      break;
     }
    case -19:
     {
      if ((i4 & -32) << 24 >> 24 != -128) {
       i2 = 21;
       break L6;
      }
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) {
      i2 = 23;
      break L6;
     }
    }
    i2 = i2 & 255;
    if ((i2 & 192 | 0) != 128) {
     i2 = 39;
     break L6;
    }
    if (((i4 & 255) << 6 & 4032 | i7 << 12 & 61440 | i2 & 63) >>> 0 > i12 >>> 0) {
     i2 = 39;
     break L6;
    } else {
     i2 = i8 + 3 | 0;
     break;
    }
   }
   if ((i6 & 255) >= 245) {
    i2 = 39;
    break L6;
   }
   i3 = i8;
   if ((i11 - i1 | 0) >>> 0 < 2 | (i9 - i3 | 0) < 4) {
    i2 = 39;
    break L6;
   }
   i5 = HEAP8[i8 + 1 >> 0] | 0;
   i2 = HEAP8[i8 + 2 >> 0] | 0;
   i4 = HEAP8[i8 + 3 >> 0] | 0;
   switch (i6 << 24 >> 24) {
   case -16:
    {
     if ((i5 + 112 & 255) >= 48) {
      i2 = 30;
      break L6;
     }
     break;
    }
   case -12:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i2 = 32;
      break L6;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i2 = 34;
     break L6;
    }
   }
   i3 = i2 & 255;
   if ((i3 & 192 | 0) != 128) {
    i2 = 39;
    break L6;
   }
   i2 = i4 & 255;
   if ((i2 & 192 | 0) != 128) {
    i2 = 39;
    break L6;
   }
   if (((i5 & 255) << 12 & 258048 | i7 << 18 & 1835008 | i3 << 6 & 4032 | i2 & 63) >>> 0 > i12 >>> 0) {
    i2 = 39;
    break L6;
   } else {
    i1 = i1 + 1 | 0;
    i2 = i8 + 4 | 0;
   }
  } else i2 = i8 + 1 | 0; while (0);
  i1 = i1 + 1 | 0;
  i8 = i2;
 }
 if ((i2 | 0) == 19) i1 = i3 - i13 | 0; else if ((i2 | 0) == 21) i1 = i3 - i13 | 0; else if ((i2 | 0) == 23) i1 = i3 - i13 | 0; else if ((i2 | 0) == 30) i1 = i3 - i13 | 0; else if ((i2 | 0) == 32) i1 = i3 - i13 | 0; else if ((i2 | 0) == 34) i1 = i3 - i13 | 0; else if ((i2 | 0) == 39) i1 = i8 - i13 | 0;
 return i1 | 0;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i7, i8, i3, i2, i9, i10, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i9 >> 2] = i3;
 if (i4 & 2) if ((i2 - i3 | 0) < 3) i1 = 1; else {
  HEAP32[i9 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = -17;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i6 = i7;
  i1 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i7 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP16[i1 >> 1] | 0;
   i5 = i3 & 65535;
   if (i5 >>> 0 > i10 >>> 0) {
    i1 = 2;
    break L4;
   }
   do if ((i3 & 65535) < 128) {
    i1 = HEAP32[i9 >> 2] | 0;
    if ((i2 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i9 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } else {
    if ((i3 & 65535) < 2048) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 6 | 192;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) < 55296) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i3 & 65535) >= 56320) {
     if ((i3 & 65535) < 57344) {
      i1 = 2;
      break L4;
     }
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i2 - i1 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i5 >>> 12 | 224;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 >>> 6 & 63 | 128;
     i4 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i4 + 1;
     HEAP8[i4 >> 0] = i5 & 63 | 128;
     break;
    }
    if ((i6 - i1 | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i1 = i1 + 2 | 0;
    i3 = HEAPU16[i1 >> 1] | 0;
    if ((i3 & 64512 | 0) != 56320) {
     i1 = 2;
     break L4;
    }
    if ((i2 - (HEAP32[i9 >> 2] | 0) | 0) < 4) {
     i1 = 1;
     break L4;
    }
    i4 = i5 & 960;
    if (((i4 << 10) + 65536 | i5 << 10 & 64512 | i3 & 1023) >>> 0 > i10 >>> 0) {
     i1 = 2;
     break L4;
    }
    HEAP32[i8 >> 2] = i1;
    i1 = (i4 >>> 6) + 1 | 0;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i1 >>> 2 | 240;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 >>> 2 & 15 | i1 << 4 & 48 | 128;
    i4 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i5 << 4 & 48 | i3 >>> 6 & 15 | 128;
    i5 = HEAP32[i9 >> 2] | 0;
    HEAP32[i9 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i3 & 63 | 128;
   } while (0);
   i1 = (HEAP32[i8 >> 2] | 0) + 2 | 0;
   HEAP32[i8 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 L1 : do if ((HEAP8[16744] | 0) == 0 ? ___cxa_guard_acquire(16744) | 0 : 0) {
  if ((HEAP8[16752] | 0) == 0 ? ___cxa_guard_acquire(16752) | 0 : 0) {
   i2 = 20108;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 20396);
   ___cxa_atexit(118, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(19, 20108, 6716) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  do if ((((((((((((((!(i2 & 1) ? (__THREW__ = 0, invoke_iii(19, 20120, 6748) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20132, 6784) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20144, 6808) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20156, 6832) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20168, 6848) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20180, 6868) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20192, 6888) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20204, 6916) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20216, 6956) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20228, 6988) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20240, 7024) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20252, 7060) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20264, 7076) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20276, 7092) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   __THREW__ = 0;
   invoke_iii(19, 20288, 7108) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20300, 6832) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20312, 7124) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20324, 7140) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20336, 7156) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20348, 7172) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20360, 7188) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20372, 7204) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   __THREW__ = 0;
   invoke_iii(19, 20384, 7220) | 0;
   i2 = __THREW__;
   __THREW__ = 0;
   if (i2 & 1) break;
   HEAP32[5099] = 20108;
   break L1;
  } while (0);
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[5099] | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i13, i10, i11, i12, i1) {
 i13 = i13 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = i10;
 if ((((i1 & 4 | 0) != 0 ? (i9 - i13 | 0) > 2 : 0) ? (HEAP8[i13 >> 0] | 0) == -17 : 0) ? (HEAP8[i13 + 1 >> 0] | 0) == -69 : 0) {
  i8 = 0;
  i1 = (HEAP8[i13 + 2 >> 0] | 0) == -65 ? i13 + 3 | 0 : i13;
 } else {
  i8 = 0;
  i1 = i13;
 }
 L6 : while (1) {
  if (!(i8 >>> 0 < i11 >>> 0 & i1 >>> 0 < i10 >>> 0)) {
   i2 = 40;
   break;
  }
  i6 = HEAP8[i1 >> 0] | 0;
  i7 = i6 & 255;
  do if (i6 << 24 >> 24 <= -1) {
   if ((i6 & 255) < 194) {
    i2 = 40;
    break L6;
   }
   if ((i6 & 255) < 224) {
    if ((i9 - i1 | 0) < 2) {
     i2 = 40;
     break L6;
    }
    i2 = HEAPU8[i1 + 1 >> 0] | 0;
    if ((i2 & 192 | 0) != 128) {
     i2 = 40;
     break L6;
    }
    if ((i2 & 63 | i7 << 6 & 1984) >>> 0 > i12 >>> 0) {
     i2 = 40;
     break L6;
    }
    i1 = i1 + 2 | 0;
    break;
   }
   if ((i6 & 255) < 240) {
    i3 = i1;
    if ((i9 - i3 | 0) < 3) {
     i2 = 40;
     break L6;
    }
    i4 = HEAP8[i1 + 1 >> 0] | 0;
    i2 = HEAP8[i1 + 2 >> 0] | 0;
    switch (i6 << 24 >> 24) {
    case -32:
     {
      if ((i4 & -32) << 24 >> 24 != -96) {
       i2 = 20;
       break L6;
      }
      break;
     }
    case -19:
     {
      if ((i4 & -32) << 24 >> 24 != -128) {
       i2 = 22;
       break L6;
      }
      break;
     }
    default:
     if ((i4 & -64) << 24 >> 24 != -128) {
      i2 = 24;
      break L6;
     }
    }
    i2 = i2 & 255;
    if ((i2 & 192 | 0) != 128) {
     i2 = 40;
     break L6;
    }
    if (((i4 & 255) << 6 & 4032 | i7 << 12 & 61440 | i2 & 63) >>> 0 > i12 >>> 0) {
     i2 = 40;
     break L6;
    } else {
     i1 = i1 + 3 | 0;
     break;
    }
   }
   if ((i6 & 255) >= 245) {
    i2 = 40;
    break L6;
   }
   i3 = i1;
   if ((i9 - i3 | 0) < 4) {
    i2 = 40;
    break L6;
   }
   i5 = HEAP8[i1 + 1 >> 0] | 0;
   i2 = HEAP8[i1 + 2 >> 0] | 0;
   i4 = HEAP8[i1 + 3 >> 0] | 0;
   switch (i6 << 24 >> 24) {
   case -16:
    {
     if ((i5 + 112 & 255) >= 48) {
      i2 = 31;
      break L6;
     }
     break;
    }
   case -12:
    {
     if ((i5 & -16) << 24 >> 24 != -128) {
      i2 = 33;
      break L6;
     }
     break;
    }
   default:
    if ((i5 & -64) << 24 >> 24 != -128) {
     i2 = 35;
     break L6;
    }
   }
   i3 = i2 & 255;
   if ((i3 & 192 | 0) != 128) {
    i2 = 40;
    break L6;
   }
   i2 = i4 & 255;
   if ((i2 & 192 | 0) != 128) {
    i2 = 40;
    break L6;
   }
   if (((i5 & 255) << 12 & 258048 | i7 << 18 & 1835008 | i3 << 6 & 4032 | i2 & 63) >>> 0 > i12 >>> 0) {
    i2 = 40;
    break L6;
   } else i1 = i1 + 4 | 0;
  } else {
   if (i7 >>> 0 > i12 >>> 0) {
    i2 = 40;
    break L6;
   }
   i1 = i1 + 1 | 0;
  } while (0);
  i8 = i8 + 1 | 0;
 }
 if ((i2 | 0) == 20) i1 = i3 - i13 | 0; else if ((i2 | 0) == 22) i1 = i3 - i13 | 0; else if ((i2 | 0) == 24) i1 = i3 - i13 | 0; else if ((i2 | 0) == 31) i1 = i3 - i13 | 0; else if ((i2 | 0) == 33) i1 = i3 - i13 | 0; else if ((i2 | 0) == 35) i1 = i3 - i13 | 0; else if ((i2 | 0) == 40) i1 = i1 - i13 | 0;
 return i1 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i1, i10, i6, i5, i8, i11) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i12 + 40 | 0;
 i13 = i12 + 16 | 0;
 i2 = i12 + 12 | 0;
 i3 = i12 + 8 | 0;
 i4 = i12 + 4 | 0;
 i9 = i12;
 L1 : do if (!(HEAP32[i5 + 4 >> 2] & 1)) {
  HEAP32[i2 >> 2] = -1;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i10 >> 2] = FUNCTION_TABLE_iiiiiii[i9 & 63](i1, i13, i7, i5, i8, i2) | 0;
  switch (HEAP32[i2 >> 2] | 0) {
  case 0:
   {
    HEAP8[i11 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i11 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i11 >> 0] = 1;
    HEAP32[i8 >> 2] = 4;
   }
  }
  i1 = HEAP32[i10 >> 2] | 0;
 } else {
  i1 = __ZNKSt3__28ios_base6getlocEv(i5) | 0;
  HEAP32[i7 >> 2] = i1;
  __THREW__ = 0;
  i3 = invoke_iii(15, i7 | 0, 18916) | 0;
  i4 = __THREW__;
  __THREW__ = 0;
  do if (!(i4 & 1)) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = __ZNKSt3__28ios_base6getlocEv(i5) | 0;
   HEAP32[i7 >> 2] = i1;
   __THREW__ = 0;
   i2 = invoke_iii(15, i7 | 0, 18924) | 0;
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i13 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
    i1 = i13;
    break;
   }
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i13 | 0, i2 | 0);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break;
   }
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] | 0, i13 + 12 | 0, i2 | 0);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i13);
    break;
   }
   HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
   i2 = i13 + 24 | 0;
   __THREW__ = 0;
   HEAP32[i7 >> 2] = HEAP32[i9 >> 2];
   i1 = invoke_iiiiiiii(8, i10 | 0, i7 | 0, i13 | 0, i2 | 0, i3 | 0, i8 | 0, 1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (i9 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i3 = tempRet0;
    do {
     i2 = i2 + -12 | 0;
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i2);
    } while ((i2 | 0) != (i13 | 0));
    break;
   } else {
    HEAP8[i11 >> 0] = (i1 | 0) == (i13 | 0) & 1;
    i1 = HEAP32[i10 >> 2] | 0;
    do {
     i2 = i2 + -12 | 0;
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i2);
    } while ((i2 | 0) != (i13 | 0));
    break L1;
   }
  } else {
   i13 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = i13;
  } while (0);
  ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb(i1, i10, i6, i5, i8, i11) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i12 + 40 | 0;
 i13 = i12 + 16 | 0;
 i2 = i12 + 12 | 0;
 i3 = i12 + 8 | 0;
 i4 = i12 + 4 | 0;
 i9 = i12;
 L1 : do if (!(HEAP32[i5 + 4 >> 2] & 1)) {
  HEAP32[i2 >> 2] = -1;
  i9 = HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[i3 >> 2] = HEAP32[i10 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i13 >> 2] = HEAP32[i3 >> 2];
  HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
  HEAP32[i10 >> 2] = FUNCTION_TABLE_iiiiiii[i9 & 63](i1, i13, i7, i5, i8, i2) | 0;
  switch (HEAP32[i2 >> 2] | 0) {
  case 0:
   {
    HEAP8[i11 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[i11 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[i11 >> 0] = 1;
    HEAP32[i8 >> 2] = 4;
   }
  }
  i1 = HEAP32[i10 >> 2] | 0;
 } else {
  i1 = __ZNKSt3__28ios_base6getlocEv(i5) | 0;
  HEAP32[i7 >> 2] = i1;
  __THREW__ = 0;
  i3 = invoke_iii(15, i7 | 0, 18884) | 0;
  i4 = __THREW__;
  __THREW__ = 0;
  do if (!(i4 & 1)) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = __ZNKSt3__28ios_base6getlocEv(i5) | 0;
   HEAP32[i7 >> 2] = i1;
   __THREW__ = 0;
   i2 = invoke_iii(15, i7 | 0, 18900) | 0;
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i13 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
    i1 = i13;
    break;
   }
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i13 | 0, i2 | 0);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    break;
   }
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] | 0, i13 + 12 | 0, i2 | 0);
   i5 = __THREW__;
   __THREW__ = 0;
   if (i5 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i13);
    break;
   }
   HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
   i2 = i13 + 24 | 0;
   __THREW__ = 0;
   HEAP32[i7 >> 2] = HEAP32[i9 >> 2];
   i1 = invoke_iiiiiiii(7, i10 | 0, i7 | 0, i13 | 0, i2 | 0, i3 | 0, i8 | 0, 1) | 0;
   i9 = __THREW__;
   __THREW__ = 0;
   if (i9 & 1) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    i3 = tempRet0;
    do {
     i2 = i2 + -12 | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
    } while ((i2 | 0) != (i13 | 0));
    break;
   } else {
    HEAP8[i11 >> 0] = (i1 | 0) == (i13 | 0) & 1;
    i1 = HEAP32[i10 >> 2] | 0;
    do {
     i2 = i2 + -12 | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2);
    } while ((i2 | 0) != (i13 | 0));
    break L1;
   }
  } else {
   i13 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = i13;
  } while (0);
  ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i12, i6, i1) {
 i12 = i12 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i13 + 12 | 0;
 i10 = i13;
 i9 = i13 + 8 | 0;
 __THREW__ = 0;
 invoke_vii(40, i10 | 0, i12 | 0);
 i8 = __THREW__;
 __THREW__ = 0;
 L1 : do if (i8 & 1) {
  i1 = ___cxa_find_matching_catch_3(0) | 0;
  i2 = i12;
  i3 = i12;
  i11 = 15;
 } else {
  do if (HEAP8[i10 >> 0] | 0) {
   i7 = (HEAP32[i12 >> 2] | 0) + -12 | 0;
   HEAP32[i9 >> 2] = HEAP32[i12 + (HEAP32[i7 >> 2] | 0) + 24 >> 2];
   i7 = i12 + (HEAP32[i7 >> 2] | 0) | 0;
   i8 = HEAP32[i7 + 4 >> 2] | 0;
   i3 = i6 + i1 | 0;
   i2 = i7 + 76 | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   do if ((i1 | 0) == -1) {
    __THREW__ = 0;
    i1 = invoke_ii(65, i7 | 0) | 0;
    i14 = __THREW__;
    __THREW__ = 0;
    if (i14 & 1) i11 = 13; else {
     HEAP32[i5 >> 2] = i1;
     __THREW__ = 0;
     i1 = invoke_iii(15, i5 | 0, 18884) | 0;
     i14 = __THREW__;
     __THREW__ = 0;
     if (!(i14 & 1) ? (__THREW__ = 0, i4 = invoke_iii(HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] | 0, i1 | 0, 32) | 0, i14 = __THREW__, __THREW__ = 0, !(i14 & 1)) : 0) {
      __ZNSt3__26localeD2Ev(i5);
      i1 = i4 << 24 >> 24;
      HEAP32[i2 >> 2] = i1;
      i11 = 9;
      break;
     }
     i1 = ___cxa_find_matching_catch_3(0) | 0;
     __ZNSt3__26localeD2Ev(i5);
    }
   } else i11 = 9; while (0);
   if ((i11 | 0) == 9) {
    __THREW__ = 0;
    HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
    i1 = invoke_iiiiiii(39, i5 | 0, i6 | 0, ((i8 & 176 | 0) == 32 ? i3 : i6) | 0, i3 | 0, i7 | 0, i1 & 255 | 0) | 0;
    i14 = __THREW__;
    __THREW__ = 0;
    if (!(i14 & 1)) {
     if (i1 | 0) break;
     i14 = i12 + (HEAP32[(HEAP32[i12 >> 2] | 0) + -12 >> 2] | 0) | 0;
     __THREW__ = 0;
     invoke_vii(41, i14 | 0, HEAP32[i14 + 16 >> 2] | 5 | 0);
     i14 = __THREW__;
     __THREW__ = 0;
     if (!(i14 & 1)) break; else i11 = 13;
    } else i11 = 13;
   }
   if ((i11 | 0) == 13) i1 = ___cxa_find_matching_catch_3(0) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i10);
   i2 = i12;
   i3 = i12;
   i11 = 15;
   break L1;
  } while (0);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i10);
 } while (0);
 do if ((i11 | 0) == 15) {
  ___cxa_begin_catch(i1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(107, i2 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i14 = __THREW__;
  __THREW__ = 0;
  if (!(i14 & 1)) {
   ___cxa_end_catch();
   break;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
  __THREW__ = 0;
  invoke_v(2);
  i14 = __THREW__;
  __THREW__ = 0;
  if (i14 & 1) {
   i14 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i14);
  } else ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i13;
 return i12 | 0;
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_(i4, i6, i11, i7, i12, i2, i3, i8, i13, i14, i10, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 var i1 = 0, i9 = 0;
 L1 : do if (i4 << 24 >> 24 == i2 << 24 >> 24) if (HEAP8[i6 >> 0] | 0) {
  HEAP8[i6 >> 0] = 0;
  i11 = HEAP32[i12 >> 2] | 0;
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = 46;
  i12 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i12 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i12 & 255) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if (i4 << 24 >> 24 == i3 << 24 >> 24 ? (i3 = HEAP8[i8 + 11 >> 0] | 0, (i3 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i3 & 255) | 0) : 0) {
   if (!(HEAP8[i6 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i5 + 32 | 0;
  i2 = 0;
  while (1) {
   i1 = i5 + i2 | 0;
   if ((i2 | 0) == 32) {
    i1 = i3;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i4 << 24 >> 24) break; else i2 = i2 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  if ((i2 | 0) > 31) i1 = -1; else {
   i3 = HEAP8[13558 + i2 >> 0] | 0;
   switch (i2 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i12 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i11 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i11 >> 0] = 80;
     i1 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i11 >> 0] | 0) ? (HEAP8[i11 >> 0] = i1 | 128, HEAP8[i6 >> 0] | 0) : 0) ? (HEAP8[i6 >> 0] = 0, i11 = HEAP8[i8 + 11 >> 0] | 0, (i11 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i11 & 255) | 0) : 0) ? (i9 = HEAP32[i14 >> 2] | 0, (i9 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i10 >> 2] | 0;
      HEAP32[i14 >> 2] = i9 + 4;
      HEAP32[i9 >> 2] = i13;
     }
     i14 = HEAP32[i12 >> 2] | 0;
     HEAP32[i12 >> 2] = i14 + 1;
     HEAP8[i14 >> 0] = i3;
     if ((i2 | 0) > 21) {
      i1 = 0;
      break L1;
     }
     HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
     i1 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i8, i9, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i6 = 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i7 >> 2] = 0;
   i3 = 1;
   break;
  } else {
   i3 = (HEAP32[i7 >> 2] | 0) == 0;
   break;
  }
 } else i3 = 1; while (0);
 i2 = HEAP32[i8 >> 2] | 0;
 do if (i2) {
  i1 = HEAP32[i2 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i3) {
   i5 = i2;
   i6 = 17;
   break;
  } else {
   i6 = 16;
   break;
  } else {
   HEAP32[i8 >> 2] = 0;
   i6 = 14;
   break;
  }
 } else i6 = 14; while (0);
 if ((i6 | 0) == 14) if (i3) i6 = 16; else {
  i5 = 0;
  i6 = 17;
 }
 L22 : do if ((i6 | 0) == 16) HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 6; else if ((i6 | 0) == 17) {
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 52 >> 2] & 63](i4, i1, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i7 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i7 >> 2] | 0;
   if (!i1) i2 = 1; else i6 = 25;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   i6 = 25;
  }
  do if ((i6 | 0) == 25) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i7 >> 2] = 0;
    i2 = 1;
    break;
   } else {
    i2 = (HEAP32[i7 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (i5) {
   i1 = HEAP32[i5 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i5 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i5 >> 2] | 0) + 36 >> 2] & 127](i5) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i2) break L22; else break; else {
    HEAP32[i8 >> 2] = 0;
    i6 = 37;
    break;
   }
  } else i6 = 37; while (0);
  if ((i6 | 0) == 37 ? !i2 : 0) break;
  HEAP32[i9 >> 2] = HEAP32[i9 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw(i4, i6, i11, i7, i12, i2, i3, i8, i13, i14, i10, i5) {
 i4 = i4 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i7 = i7 | 0;
 i12 = i12 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 var i1 = 0, i9 = 0;
 L1 : do if ((i4 | 0) == (i2 | 0)) if (HEAP8[i6 >> 0] | 0) {
  HEAP8[i6 >> 0] = 0;
  i11 = HEAP32[i12 >> 2] | 0;
  HEAP32[i12 >> 2] = i11 + 1;
  HEAP8[i11 >> 0] = 46;
  i12 = HEAP8[i8 + 11 >> 0] | 0;
  if (((i12 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i12 & 255) | 0) != 0 ? (i1 = HEAP32[i14 >> 2] | 0, (i1 - i13 | 0) < 160) : 0) {
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   i1 = 0;
  } else i1 = 0;
 } else i1 = -1; else {
  if ((i4 | 0) == (i3 | 0) ? (i3 = HEAP8[i8 + 11 >> 0] | 0, (i3 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i3 & 255) | 0) : 0) {
   if (!(HEAP8[i6 >> 0] | 0)) {
    i1 = -1;
    break;
   }
   i1 = HEAP32[i14 >> 2] | 0;
   if ((i1 - i13 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i10 >> 2] | 0;
   HEAP32[i14 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i5 + 128 | 0;
  i2 = 0;
  while (1) {
   i1 = i5 + (i2 << 2) | 0;
   if ((i2 | 0) == 32) {
    i1 = i3;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i4 | 0)) break; else i2 = i2 + 1 | 0;
  }
  i2 = i1 - i5 | 0;
  i1 = i2 >> 2;
  if ((i2 | 0) <= 124) {
   i3 = HEAP8[13558 + i1 >> 0] | 0;
   switch (i1 | 0) {
   case 24:
   case 25:
    {
     i1 = HEAP32[i12 >> 2] | 0;
     if ((i1 | 0) != (i7 | 0) ? (HEAPU8[i1 + -1 >> 0] & 95 | 0) != (HEAPU8[i11 >> 0] & 127 | 0) : 0) {
      i1 = -1;
      break L1;
     }
     HEAP32[i12 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3;
     i1 = 0;
     break L1;
    }
   case 23:
   case 22:
    {
     HEAP8[i11 >> 0] = 80;
     break;
    }
   default:
    {
     i1 = i3 & 95;
     if ((((i1 | 0) == (HEAP8[i11 >> 0] | 0) ? (HEAP8[i11 >> 0] = i1 | 128, HEAP8[i6 >> 0] | 0) : 0) ? (HEAP8[i6 >> 0] = 0, i11 = HEAP8[i8 + 11 >> 0] | 0, (i11 << 24 >> 24 < 0 ? HEAP32[i8 + 4 >> 2] | 0 : i11 & 255) | 0) : 0) ? (i9 = HEAP32[i14 >> 2] | 0, (i9 - i13 | 0) < 160) : 0) {
      i13 = HEAP32[i10 >> 2] | 0;
      HEAP32[i14 >> 2] = i9 + 4;
      HEAP32[i9 >> 2] = i13;
     }
    }
   }
   i14 = HEAP32[i12 >> 2] | 0;
   HEAP32[i12 >> 2] = i14 + 1;
   HEAP8[i14 >> 0] = i3;
   if ((i2 | 0) > 84) i1 = 0; else {
    HEAP32[i10 >> 2] = (HEAP32[i10 >> 2] | 0) + 1;
    i1 = 0;
   }
  } else i1 = -1;
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE(i1, i5, i6, i7, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i8 = 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   i2 = HEAP32[i1 + 12 >> 2] | 0;
   if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
   if ((i1 | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i3 = 1;
    break;
   } else {
    i3 = (HEAP32[i5 >> 2] | 0) == 0;
    break;
   }
  } else i3 = 1; while (0);
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   i1 = HEAP32[i2 + 12 >> 2] | 0;
   if ((i1 | 0) == (HEAP32[i2 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0; else i1 = HEAP32[i1 >> 2] | 0;
   if ((i1 | 0) != -1) if (i3) {
    i3 = i2;
    break;
   } else {
    i3 = i2;
    break L1;
   } else {
    HEAP32[i6 >> 2] = 0;
    i8 = 15;
    break;
   }
  } else i8 = 15; while (0);
  if ((i8 | 0) == 15) {
   i8 = 0;
   if (i3) {
    i3 = 0;
    break;
   } else i3 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i4 >> 2] | 0) + 12 >> 2] & 63](i4, 8192, i1) | 0)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 4;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i2 = 1;
   break;
  } else {
   i2 = (HEAP32[i5 >> 2] | 0) == 0;
   break;
  }
 } else i2 = 1; while (0);
 do if (i3) {
  i1 = HEAP32[i3 + 12 >> 2] | 0;
  if ((i1 | 0) == (HEAP32[i3 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 127](i3) | 0; else i1 = HEAP32[i1 >> 2] | 0;
  if ((i1 | 0) != -1) if (i2) break; else {
   i8 = 39;
   break;
  } else {
   HEAP32[i6 >> 2] = 0;
   i8 = 37;
   break;
  }
 } else i8 = 37; while (0);
 if ((i8 | 0) == 37 ? i2 : 0) i8 = 39;
 if ((i8 | 0) == 39) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb(i1, i9, i2, i3, i5) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 4 | 0;
 i4 = i10;
 L1 : do if (!(HEAP32[i2 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i1, i8, i2, i3, i5 & 1) | 0;
 } else {
  i1 = __ZNKSt3__28ios_base6getlocEv(i2) | 0;
  HEAP32[i8 >> 2] = i1;
  __THREW__ = 0;
  i2 = invoke_iii(15, i8 | 0, 18900) | 0;
  i6 = __THREW__;
  __THREW__ = 0;
  do if (!(i6 & 1)) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (i5) FUNCTION_TABLE_vii[HEAP32[i1 + 24 >> 2] & 127](i8, i2); else FUNCTION_TABLE_vii[HEAP32[i1 + 28 >> 2] & 127](i8, i2);
   i6 = i8 + 11 | 0;
   i1 = HEAP8[i6 >> 0] | 0;
   if (i1 << 24 >> 24 < 0) {
    i2 = i1;
    i1 = HEAP32[i8 >> 2] | 0;
    i7 = 9;
   } else i5 = i8;
   L13 : while (1) {
    if ((i7 | 0) == 9) {
     i5 = i1;
     i1 = i2;
    }
    i7 = i1 << 24 >> 24 < 0;
    if ((i5 | 0) == ((i7 ? HEAP32[i8 >> 2] | 0 : i8) + (i7 ? HEAP32[i8 + 4 >> 2] | 0 : i1 & 255) | 0)) {
     i7 = 11;
     break;
    }
    i1 = HEAP8[i5 >> 0] | 0;
    i2 = HEAP32[i9 >> 2] | 0;
    do if (i2 | 0) {
     i3 = i2 + 24 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) != (HEAP32[i2 + 28 >> 2] | 0)) {
      HEAP32[i3 >> 2] = i4 + 1;
      HEAP8[i4 >> 0] = i1;
      break;
     }
     __THREW__ = 0;
     i1 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] | 0, i2 | 0, i1 & 255 | 0) | 0;
     i7 = __THREW__;
     __THREW__ = 0;
     if (i7 & 1) {
      i7 = 20;
      break L13;
     }
     if ((i1 | 0) == -1) HEAP32[i9 >> 2] = 0;
    } while (0);
    i2 = HEAP8[i6 >> 0] | 0;
    i1 = i5 + 1 | 0;
    i7 = 9;
   }
   if ((i7 | 0) == 11) {
    i1 = HEAP32[i9 >> 2] | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
    break L1;
   } else if ((i7 | 0) == 20) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
    break;
   }
  } else {
   i10 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = i10;
  } while (0);
  ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb(i10, i14) {
 i10 = i10 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i12 = i16 + 16 | 0;
 i13 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i10 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i10 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i10 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i11 = i10 + 32 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i3 = _getc(HEAP32[i11 >> 2] | 0) | 0;
   if ((i3 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i12 + i2 >> 0] = i3;
   i2 = i2 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i10 + 53 >> 0] | 0)) {
    i5 = i10 + 40 | 0;
    i6 = i10 + 36 | 0;
    i7 = i13 + 1 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i12 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i12, i4, i8, i13, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i11 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP8[i13 >> 0] = HEAP8[i12 >> 0] | 0; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP8[i13 >> 0] = HEAP8[i12 >> 0] | 0;
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP8[i13 >> 0] | 0;
     HEAP32[i10 + 48 >> 2] = i1 & 255;
    } else {
     while (1) {
      if ((i1 | 0) <= 0) break;
      i1 = i1 + -1 | 0;
      if ((_ungetc(HEAPU8[i12 + i1 >> 0] | 0, HEAP32[i11 >> 2] | 0) | 0) == -1) {
       i1 = -1;
       break L21;
      }
     }
     i1 = HEAP8[i13 >> 0] | 0;
    }
    i1 = i1 & 255;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i7, i8, i3) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 i1 = HEAP32[i6 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i2 = (i1 | 0) == 0;
 i1 = HEAP32[i7 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1 : 0) {
   HEAP32[i7 >> 2] = 0;
   i5 = 11;
   break;
  }
  if (i2) {
   i4 = i1;
   i5 = 13;
  } else i5 = 12;
 } else i5 = 11; while (0);
 if ((i5 | 0) == 11) if (i2) i5 = 12; else {
  i4 = 0;
  i5 = 13;
 }
 L16 : do if ((i5 | 0) == 12) HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 6; else if ((i5 | 0) == 13) {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i2 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i2 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 36 >> 2] & 63](i3, i1 & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 4;
   break;
  }
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (!i1) i1 = 0; else i5 = 21;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   i5 = 21;
  }
  do if ((i5 | 0) == 21) if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i6 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i6 >> 2] | 0;
   break;
  } while (0);
  i1 = (i1 | 0) == 0;
  do if (i4) {
   if ((HEAP32[i4 + 12 >> 2] | 0) == (HEAP32[i4 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 36 >> 2] & 127](i4) | 0) == -1 : 0) {
    HEAP32[i7 >> 2] = 0;
    i5 = 30;
    break;
   }
   if (i1) break L16;
  } else i5 = 30; while (0);
  if ((i5 | 0) == 30 ? !i1 : 0) break;
  HEAP32[i8 >> 2] = HEAP32[i8 >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb(i10, i14) {
 i10 = i10 | 0;
 i14 = i14 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i11 = 0, i12 = 0, i13 = 0, i15 = 0, i16 = 0, i17 = 0, i18 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i12 = i16 + 16 | 0;
 i13 = i16 + 8 | 0;
 i8 = i16 + 4 | 0;
 i9 = i16;
 i3 = i10 + 52 | 0;
 if (HEAP8[i3 >> 0] | 0) {
  i2 = i10 + 48 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i14) {
   HEAP32[i2 >> 2] = -1;
   HEAP8[i3 >> 0] = 0;
  }
 } else {
  i1 = HEAP32[i10 + 44 >> 2] | 0;
  i1 = (i1 | 0) > 1 ? i1 : 1;
  i11 = i10 + 32 | 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) >= (i1 | 0)) {
    i15 = 8;
    break;
   }
   i3 = _getc(HEAP32[i11 >> 2] | 0) | 0;
   if ((i3 | 0) == -1) {
    i1 = -1;
    break;
   }
   HEAP8[i12 + i2 >> 0] = i3;
   i2 = i2 + 1 | 0;
  }
  if ((i15 | 0) == 8) {
   do if (!(HEAP8[i10 + 53 >> 0] | 0)) {
    i5 = i10 + 40 | 0;
    i6 = i10 + 36 | 0;
    i7 = i13 + 4 | 0;
    L11 : while (1) {
     i17 = HEAP32[i5 >> 2] | 0;
     i3 = i17;
     i2 = HEAP32[i3 >> 2] | 0;
     i3 = HEAP32[i3 + 4 >> 2] | 0;
     i18 = HEAP32[i6 >> 2] | 0;
     i4 = i12 + i1 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i18 >> 2] | 0) + 16 >> 2] & 15](i18, i17, i12, i4, i8, i13, i7, i9) | 0) {
     case 3:
      {
       i15 = 15;
       break L11;
      }
     case 2:
      {
       i15 = 17;
       break L11;
      }
     case 1:
      break;
     default:
      break L11;
     }
     i18 = HEAP32[i5 >> 2] | 0;
     HEAP32[i18 >> 2] = i2;
     HEAP32[i18 + 4 >> 2] = i3;
     if ((i1 | 0) == 8) {
      i15 = 17;
      break;
     }
     i2 = _getc(HEAP32[i11 >> 2] | 0) | 0;
     if ((i2 | 0) == -1) {
      i15 = 17;
      break;
     }
     HEAP8[i4 >> 0] = i2;
     i1 = i1 + 1 | 0;
    }
    if ((i15 | 0) == 15) HEAP32[i13 >> 2] = HEAP8[i12 >> 0]; else if ((i15 | 0) == 17) {
     i1 = -1;
     break;
    }
    i15 = 18;
   } else {
    HEAP32[i13 >> 2] = HEAP8[i12 >> 0];
    i15 = 18;
   } while (0);
   L21 : do if ((i15 | 0) == 18) {
    if (i14) {
     i1 = HEAP32[i13 >> 2] | 0;
     HEAP32[i10 + 48 >> 2] = i1;
     break;
    }
    while (1) {
     if ((i1 | 0) <= 0) break;
     i1 = i1 + -1 | 0;
     if ((_ungetc(HEAP8[i12 + i1 >> 0] | 0, HEAP32[i11 >> 2] | 0) | 0) == -1) {
      i1 = -1;
      break L21;
     }
    }
    i1 = HEAP32[i13 >> 2] | 0;
   } while (0);
  }
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb(i1, i9, i2, i3, i5) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i4 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i10 + 4 | 0;
 i4 = i10;
 L1 : do if (!(HEAP32[i2 + 4 >> 2] & 1)) {
  i7 = HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  HEAP32[i8 >> 2] = HEAP32[i4 >> 2];
  i1 = FUNCTION_TABLE_iiiiii[i7 & 31](i1, i8, i2, i3, i5 & 1) | 0;
 } else {
  i1 = __ZNKSt3__28ios_base6getlocEv(i2) | 0;
  HEAP32[i8 >> 2] = i1;
  __THREW__ = 0;
  i2 = invoke_iii(15, i8 | 0, 18924) | 0;
  i7 = __THREW__;
  __THREW__ = 0;
  do if (!(i7 & 1)) {
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = HEAP32[i2 >> 2] | 0;
   if (i5) FUNCTION_TABLE_vii[HEAP32[i1 + 24 >> 2] & 127](i8, i2); else FUNCTION_TABLE_vii[HEAP32[i1 + 28 >> 2] & 127](i8, i2);
   i6 = i8 + 8 + 3 | 0;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   i7 = i8 + 4 | 0;
   i5 = i1 << 24 >> 24 < 0 ? i2 : i8;
   while (1) {
    i4 = i1 << 24 >> 24 < 0;
    if ((i5 | 0) == ((i4 ? i2 : i8) + ((i4 ? HEAP32[i7 >> 2] | 0 : i1 & 255) << 2) | 0)) {
     i2 = 9;
     break;
    }
    i1 = HEAP32[i5 >> 2] | 0;
    i2 = HEAP32[i9 >> 2] | 0;
    if (i2 | 0) {
     i3 = i2 + 24 | 0;
     i4 = HEAP32[i3 >> 2] | 0;
     if ((i4 | 0) == (HEAP32[i2 + 28 >> 2] | 0)) {
      __THREW__ = 0;
      i1 = invoke_iii(HEAP32[(HEAP32[i2 >> 2] | 0) + 52 >> 2] | 0, i2 | 0, i1 | 0) | 0;
      i4 = __THREW__;
      __THREW__ = 0;
      if (i4 & 1) {
       i2 = 18;
       break;
      }
     } else {
      HEAP32[i3 >> 2] = i4 + 4;
      HEAP32[i4 >> 2] = i1;
     }
     if ((i1 | 0) == -1) HEAP32[i9 >> 2] = 0;
    }
    i5 = i5 + 4 | 0;
    i1 = HEAP8[i6 >> 0] | 0;
    i2 = HEAP32[i8 >> 2] | 0;
   }
   if ((i2 | 0) == 9) {
    i1 = HEAP32[i9 >> 2] | 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
    break L1;
   } else if ((i2 | 0) == 18) {
    i1 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i8);
    break;
   }
  } else {
   i10 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
   i1 = i10;
  } while (0);
  ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE(i1, i5, i6, i7, i2) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i8 = 0;
 i4 = i2 + 8 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  do if (i1) {
   if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
    HEAP32[i5 >> 2] = 0;
    i1 = 0;
    break;
   } else {
    i1 = HEAP32[i5 >> 2] | 0;
    break;
   }
  } else i1 = 0; while (0);
  i1 = (i1 | 0) == 0;
  i2 = HEAP32[i6 >> 2] | 0;
  do if (i2) {
   if ((HEAP32[i2 + 12 >> 2] | 0) != (HEAP32[i2 + 16 >> 2] | 0)) if (i1) break; else break L1;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) != -1) if (i1) break; else break L1; else {
    HEAP32[i6 >> 2] = 0;
    i8 = 12;
    break;
   }
  } else i8 = 12; while (0);
  if ((i8 | 0) == 12) {
   i8 = 0;
   if (i1) {
    i2 = 0;
    break;
   } else i2 = 0;
  }
  i1 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i1 + 12 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0; else i1 = HEAPU8[i3 >> 0] | 0;
  if ((i1 & 255) << 24 >> 24 <= -1) break;
  if (!(HEAP16[(HEAP32[i4 >> 2] | 0) + (i1 << 24 >> 24 << 1) >> 1] & 8192)) break;
  i1 = HEAP32[i5 >> 2] | 0;
  i2 = i1 + 12 | 0;
  i3 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) == (HEAP32[i1 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 40 >> 2] & 127](i1) | 0;
   continue;
  } else {
   HEAP32[i2 >> 2] = i3 + 1;
   continue;
  }
 }
 i1 = HEAP32[i5 >> 2] | 0;
 do if (i1) {
  if ((HEAP32[i1 + 12 >> 2] | 0) == (HEAP32[i1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) {
   HEAP32[i5 >> 2] = 0;
   i1 = 0;
   break;
  } else {
   i1 = HEAP32[i5 >> 2] | 0;
   break;
  }
 } else i1 = 0; while (0);
 i1 = (i1 | 0) == 0;
 do if (i2) {
  if ((HEAP32[i2 + 12 >> 2] | 0) == (HEAP32[i2 + 16 >> 2] | 0) ? (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 36 >> 2] & 127](i2) | 0) == -1 : 0) {
   HEAP32[i6 >> 2] = 0;
   i8 = 32;
   break;
  }
  if (!i1) i8 = 33;
 } else i8 = 32; while (0);
 if ((i8 | 0) == 32 ? i1 : 0) i8 = 33;
 if ((i8 | 0) == 33) HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 2;
 return;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i1, i7, i8, i3, i2, i9, i10, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 HEAP32[i8 >> 2] = i1;
 HEAP32[i9 >> 2] = i3;
 i6 = i2;
 if (i4 & 2) if ((i6 - i3 | 0) < 3) i1 = 1; else {
  HEAP32[i9 >> 2] = i3 + 1;
  HEAP8[i3 >> 0] = -17;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -69;
  i5 = HEAP32[i9 >> 2] | 0;
  HEAP32[i9 >> 2] = i5 + 1;
  HEAP8[i5 >> 0] = -65;
  i5 = 4;
 } else i5 = 4;
 L4 : do if ((i5 | 0) == 4) {
  i1 = HEAP32[i8 >> 2] | 0;
  while (1) {
   if (i1 >>> 0 >= i7 >>> 0) {
    i1 = 0;
    break L4;
   }
   i3 = HEAP32[i1 >> 2] | 0;
   if (i3 >>> 0 > i10 >>> 0 | (i3 & -2048 | 0) == 55296) {
    i1 = 2;
    break L4;
   }
   do if (i3 >>> 0 >= 128) {
    if (i3 >>> 0 < 2048) {
     i1 = HEAP32[i9 >> 2] | 0;
     if ((i6 - i1 | 0) < 2) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 6 | 192;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
    i1 = HEAP32[i9 >> 2] | 0;
    i2 = i6 - i1 | 0;
    if (i3 >>> 0 < 65536) {
     if ((i2 | 0) < 3) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 12 | 224;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    } else {
     if ((i2 | 0) < 4) {
      i1 = 1;
      break L4;
     }
     HEAP32[i9 >> 2] = i1 + 1;
     HEAP8[i1 >> 0] = i3 >>> 18 | 240;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 12 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 >>> 6 & 63 | 128;
     i5 = HEAP32[i9 >> 2] | 0;
     HEAP32[i9 >> 2] = i5 + 1;
     HEAP8[i5 >> 0] = i3 & 63 | 128;
     break;
    }
   } else {
    i1 = HEAP32[i9 >> 2] | 0;
    if ((i6 - i1 | 0) < 1) {
     i1 = 1;
     break L4;
    }
    HEAP32[i9 >> 2] = i1 + 1;
    HEAP8[i1 >> 0] = i3;
   } while (0);
   i1 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
   HEAP32[i8 >> 2] = i1;
  }
 } while (0);
 return i1 | 0;
}

function _pop_arg(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, d6 = 0.0;
 L1 : do if (i2 >>> 0 <= 20) do switch (i2 | 0) {
 case 9:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 4;
   HEAP32[i1 >> 2] = i2;
   break L1;
  }
 case 10:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 4;
   i4 = i1;
   HEAP32[i4 >> 2] = i2;
   HEAP32[i4 + 4 >> 2] = ((i2 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 11:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i2 = HEAP32[i4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 4;
   i4 = i1;
   HEAP32[i4 >> 2] = i2;
   HEAP32[i4 + 4 >> 2] = 0;
   break L1;
  }
 case 12:
  {
   i4 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   i2 = i4;
   i5 = HEAP32[i2 >> 2] | 0;
   i2 = HEAP32[i2 + 4 >> 2] | 0;
   HEAP32[i3 >> 2] = i4 + 8;
   i4 = i1;
   HEAP32[i4 >> 2] = i5;
   HEAP32[i4 + 4 >> 2] = i2;
   break L1;
  }
 case 13:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i4 = (i4 & 65535) << 16 >> 16;
   i5 = i1;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 14:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i5 = i1;
   HEAP32[i5 >> 2] = i4 & 65535;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 15:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i4 = (i4 & 255) << 24 >> 24;
   i5 = i1;
   HEAP32[i5 >> 2] = i4;
   HEAP32[i5 + 4 >> 2] = ((i4 | 0) < 0) << 31 >> 31;
   break L1;
  }
 case 16:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   i4 = HEAP32[i5 >> 2] | 0;
   HEAP32[i3 >> 2] = i5 + 4;
   i5 = i1;
   HEAP32[i5 >> 2] = i4 & 255;
   HEAP32[i5 + 4 >> 2] = 0;
   break L1;
  }
 case 17:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i3 >> 2] = i5 + 8;
   HEAPF64[i1 >> 3] = d6;
   break L1;
  }
 case 18:
  {
   i5 = (HEAP32[i3 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   d6 = +HEAPF64[i5 >> 3];
   HEAP32[i3 >> 2] = i5 + 8;
   HEAPF64[i1 >> 3] = d6;
   break L1;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function _scanexp(i5, i3) {
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i7 = i5 + 100 | 0;
 if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
  HEAP32[i6 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 } else i1 = ___shgetc(i5) | 0;
 switch (i1 | 0) {
 case 43:
 case 45:
  {
   i2 = (i1 | 0) == 45 & 1;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i5) | 0;
   if ((i3 | 0) != 0 & (i1 + -48 | 0) >>> 0 > 9 ? (HEAP32[i7 >> 2] | 0) != 0 : 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
   break;
  }
 default:
  i2 = 0;
 }
 if ((i1 + -48 | 0) >>> 0 > 9) if (!(HEAP32[i7 >> 2] | 0)) {
  i2 = -2147483648;
  i1 = 0;
 } else {
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i2 = -2147483648;
  i1 = 0;
 } else {
  i4 = 0;
  do {
   i4 = i1 + -48 + (i4 * 10 | 0) | 0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i5) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10 & (i4 | 0) < 214748364);
  i3 = ((i4 | 0) < 0) << 31 >> 31;
  if ((i1 + -48 | 0) >>> 0 < 10) do {
   i3 = ___muldi3(i4 | 0, i3 | 0, 10, 0) | 0;
   i4 = tempRet0;
   i1 = _i64Add(i1 | 0, ((i1 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
   i4 = _i64Add(i1 | 0, tempRet0 | 0, i3 | 0, i4 | 0) | 0;
   i3 = tempRet0;
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i5) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10 & ((i3 | 0) < 21474836 | (i3 | 0) == 21474836 & i4 >>> 0 < 2061584302));
  if ((i1 + -48 | 0) >>> 0 < 10) do {
   i1 = HEAP32[i6 >> 2] | 0;
   if (i1 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
    HEAP32[i6 >> 2] = i1 + 1;
    i1 = HEAPU8[i1 >> 0] | 0;
   } else i1 = ___shgetc(i5) | 0;
  } while ((i1 + -48 | 0) >>> 0 < 10);
  if (HEAP32[i7 >> 2] | 0) HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + -1;
  i7 = (i2 | 0) != 0;
  i1 = _i64Subtract(0, 0, i4 | 0, i3 | 0) | 0;
  i2 = i7 ? tempRet0 : i3;
  i1 = i7 ? i1 : i4;
 }
 tempRet0 = i2;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj(i8, i1) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0;
 if (i1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i8);
 i10 = i8 + 8 | 0;
 i7 = i10 + 3 | 0;
 i4 = HEAP8[i7 >> 0] | 0;
 i5 = i4 << 24 >> 24 < 0;
 if (i5) {
  i9 = HEAP32[i8 + 4 >> 2] | 0;
  i3 = (HEAP32[i10 >> 2] & 2147483647) + -1 | 0;
 } else {
  i9 = i4 & 255;
  i3 = 1;
 }
 i6 = i9 >>> 0 > i1 >>> 0 ? i9 : i1;
 i1 = i6 >>> 0 < 2;
 i6 = i1 ? 1 : (i6 + 4 & -4) + -1 | 0;
 L8 : do if ((i6 | 0) != (i3 | 0)) {
  do if (i1) {
   i1 = HEAP32[i8 >> 2] | 0;
   if (i5) {
    i2 = i1;
    i3 = 0;
    i1 = i8;
    i4 = 21;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj(i8, i1, (i4 & 255) + 1 | 0) | 0;
    __ZdlPv(i1);
    i4 = 23;
   }
  } else {
   i1 = i6 + 1 | 0;
   i2 = i1 >>> 0 > 1073741823;
   do if (i6 >>> 0 > i3 >>> 0) if (i2) {
    i10 = ___cxa_allocate_exception(4) | 0;
    __ZNSt9bad_allocC2Ev(i10);
    ___cxa_throw(i10 | 0, 1488, 97);
   } else {
    i1 = __Znwj(i1 << 2) | 0;
    break;
   } else {
    if (!i2) {
     __THREW__ = 0;
     i1 = invoke_ii(73, i1 << 2 | 0) | 0;
     i3 = __THREW__;
     __THREW__ = 0;
     if (!(i3 & 1)) break;
    } else {
     i10 = ___cxa_allocate_exception(4) | 0;
     __ZNSt9bad_allocC2Ev(i10);
     __THREW__ = 0;
     invoke_viii(5, i10 | 0, 1488, 97);
     __THREW__ = 0;
    }
    i10 = ___cxa_find_matching_catch_3(0) | 0;
    ___cxa_begin_catch(i10 | 0) | 0;
    ___cxa_end_catch();
    break L8;
   } while (0);
   if (i5) {
    i2 = HEAP32[i8 >> 2] | 0;
    i3 = 1;
    i4 = 21;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwj(i1, i8, (i4 & 255) + 1 | 0) | 0;
    i4 = 22;
    break;
   }
  } while (0);
  if ((i4 | 0) == 21) {
   __ZNSt3__211char_traitsIwE4copyEPwPKwj(i1, i2, (HEAP32[i8 + 4 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv(i2);
   if (i3) i4 = 22; else i4 = 23;
  }
  if ((i4 | 0) == 22) {
   HEAP32[i10 >> 2] = i6 + 1 | -2147483648;
   HEAP32[i8 + 4 >> 2] = i9;
   HEAP32[i8 >> 2] = i1;
   break;
  } else if ((i4 | 0) == 23) {
   HEAP8[i7 >> 0] = i9;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_(i7, i9, i12, i13, i14, i2, i3, i4, i5, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 i11 = (i10 | 0) == (i12 | 0);
 do if (i11) {
  i1 = (HEAP8[i8 + 24 >> 0] | 0) == i7 << 24 >> 24;
  if (!i1 ? (HEAP8[i8 + 25 >> 0] | 0) != i7 << 24 >> 24 : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i13 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i3 + 11 >> 0] | 0;
  if (i7 << 24 >> 24 == i2 << 24 >> 24 ? ((i6 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i6 & 255) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i8 + 26 | 0;
  i2 = 0;
  while (1) {
   i1 = i8 + i2 | 0;
   if ((i2 | 0) == 26) {
    i1 = i3;
    break;
   }
   if ((HEAP8[i1 >> 0] | 0) == i7 << 24 >> 24) break; else i2 = i2 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  if ((i1 | 0) > 23) i1 = -1; else {
   switch (i9 | 0) {
   case 10:
   case 8:
    {
     if ((i1 | 0) >= (i9 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 22) {
      if (i11) {
       i1 = -1;
       break L6;
      }
      if ((i10 - i12 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i10 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[13558 + i1 >> 0] | 0;
      HEAP32[i13 >> 2] = i10 + 1;
      HEAP8[i10 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[13558 + i1 >> 0] | 0;
   HEAP32[i13 >> 2] = i10 + 1;
   HEAP8[i10 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw(i7, i9, i12, i13, i14, i2, i3, i4, i5, i8) {
 i7 = i7 | 0;
 i9 = i9 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = HEAP32[i13 >> 2] | 0;
 i11 = (i10 | 0) == (i12 | 0);
 do if (i11) {
  i1 = (HEAP32[i8 + 96 >> 2] | 0) == (i7 | 0);
  if (!i1 ? (HEAP32[i8 + 100 >> 2] | 0) != (i7 | 0) : 0) {
   i6 = 5;
   break;
  }
  HEAP32[i13 >> 2] = i12 + 1;
  HEAP8[i12 >> 0] = i1 ? 43 : 45;
  HEAP32[i14 >> 2] = 0;
  i1 = 0;
 } else i6 = 5; while (0);
 L6 : do if ((i6 | 0) == 5) {
  i6 = HEAP8[i3 + 11 >> 0] | 0;
  if ((i7 | 0) == (i2 | 0) ? ((i6 << 24 >> 24 < 0 ? HEAP32[i3 + 4 >> 2] | 0 : i6 & 255) | 0) != 0 : 0) {
   i1 = HEAP32[i5 >> 2] | 0;
   if ((i1 - i4 | 0) >= 160) {
    i1 = 0;
    break;
   }
   i13 = HEAP32[i14 >> 2] | 0;
   HEAP32[i5 >> 2] = i1 + 4;
   HEAP32[i1 >> 2] = i13;
   HEAP32[i14 >> 2] = 0;
   i1 = 0;
   break;
  }
  i3 = i8 + 104 | 0;
  i2 = 0;
  while (1) {
   i1 = i8 + (i2 << 2) | 0;
   if ((i2 | 0) == 26) {
    i1 = i3;
    break;
   }
   if ((HEAP32[i1 >> 2] | 0) == (i7 | 0)) break; else i2 = i2 + 1 | 0;
  }
  i1 = i1 - i8 | 0;
  i2 = i1 >> 2;
  if ((i1 | 0) > 92) i1 = -1; else {
   switch (i9 | 0) {
   case 10:
   case 8:
    {
     if ((i2 | 0) >= (i9 | 0)) {
      i1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if ((i1 | 0) >= 88) {
      if (i11) {
       i1 = -1;
       break L6;
      }
      if ((i10 - i12 | 0) >= 3) {
       i1 = -1;
       break L6;
      }
      if ((HEAP8[i10 + -1 >> 0] | 0) != 48) {
       i1 = -1;
       break L6;
      }
      HEAP32[i14 >> 2] = 0;
      i1 = HEAP8[13558 + i2 >> 0] | 0;
      HEAP32[i13 >> 2] = i10 + 1;
      HEAP8[i10 >> 0] = i1;
      i1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   i1 = HEAP8[13558 + i2 >> 0] | 0;
   HEAP32[i13 >> 2] = i10 + 1;
   HEAP8[i10 >> 0] = i1;
   HEAP32[i14 >> 2] = (HEAP32[i14 >> 2] | 0) + 1;
   i1 = 0;
  }
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i7, i1, i3, i4, i5, i2) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = 0;
 HEAP32[i8 + 4 >> 2] = 0;
 HEAP32[i8 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i8 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 i9 = HEAP8[i2 + 11 >> 0] | 0;
 i10 = i9 << 24 >> 24 < 0;
 i1 = i10 ? HEAP32[i2 >> 2] | 0 : i2;
 i2 = i1 + (i10 ? HEAP32[i2 + 4 >> 2] | 0 : i9 & 255) | 0;
 while (1) {
  if (i1 >>> 0 >= i2 >>> 0) {
   i2 = 8;
   break;
  }
  __THREW__ = 0;
  invoke_vii(46, i8 | 0, HEAP8[i1 >> 0] | 0);
  i10 = __THREW__;
  __THREW__ = 0;
  if (i10 & 1) {
   i2 = 9;
   break;
  }
  i1 = i1 + 1 | 0;
 }
 do if ((i2 | 0) == 8) {
  __THREW__ = 0;
  i1 = invoke_iiiii(16, ((i3 | 0) == -1 ? -1 : i3 << 1) | 0, i4 | 0, i5 | 0, ((HEAP8[i8 + 11 >> 0] | 0) < 0 ? HEAP32[i8 >> 2] | 0 : i8) | 0) | 0;
  i10 = __THREW__;
  __THREW__ = 0;
  if (i10 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   break;
  };
  HEAP32[i7 >> 2] = 0;
  HEAP32[i7 + 4 >> 2] = 0;
  HEAP32[i7 + 8 >> 2] = 0;
  i2 = 0;
  while (1) {
   if ((i2 | 0) == 3) break;
   HEAP32[i7 + (i2 << 2) >> 2] = 0;
   i2 = i2 + 1 | 0;
  }
  i2 = i1 + (_strlen(i1) | 0) | 0;
  while (1) {
   if (i1 >>> 0 >= i2 >>> 0) {
    i2 = 19;
    break;
   }
   __THREW__ = 0;
   invoke_vii(46, i7 | 0, HEAP8[i1 >> 0] | 0);
   i10 = __THREW__;
   __THREW__ = 0;
   if (i10 & 1) {
    i2 = 18;
    break;
   }
   i1 = i1 + 1 | 0;
  }
  if ((i2 | 0) == 18) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i7);
   break;
  } else if ((i2 | 0) == 19) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
   STACKTOP = i6;
   return;
  }
 } else if ((i2 | 0) == 9) i1 = ___cxa_find_matching_catch_2() | 0; while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i8);
 ___resumeException(i1 | 0);
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16680] | 0) == 0 ? ___cxa_guard_acquire(16680) | 0 : 0) {
  if ((HEAP8[16688] | 0) == 0 ? ___cxa_guard_acquire(16688) | 0 : 0) {
   i2 = 19588;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 19756);
   ___cxa_atexit(113, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(18, 19588, 14212) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (((((((((((((!(i2 & 1) ? (__THREW__ = 0, invoke_iii(18, 19600, 14219) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19612, 14226) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19624, 14234) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19636, 14244) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19648, 14253) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19660, 14260) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19672, 14269) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19684, 14273) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19696, 14277) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19708, 14281) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19720, 14285) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19732, 14289) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(18, 19744, 14293) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   HEAP32[4939] = 19588;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[4939] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16760] | 0) == 0 ? ___cxa_guard_acquire(16760) | 0 : 0) {
  if ((HEAP8[16768] | 0) == 0 ? ___cxa_guard_acquire(16768) | 0 : 0) {
   i2 = 20400;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 20568);
   ___cxa_atexit(117, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(19, 20400, 7236) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (((((((((((((!(i2 & 1) ? (__THREW__ = 0, invoke_iii(19, 20412, 7264) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20424, 7292) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20436, 7324) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20448, 7364) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20460, 7400) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20472, 7428) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20484, 7464) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20496, 7480) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20508, 7496) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20520, 7512) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20532, 7528) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20544, 7544) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) ? (__THREW__ = 0, invoke_iii(19, 20556, 7560) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   HEAP32[5142] = 20400;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[5142] | 0;
}

function _wcsrtombs(i3, i6, i1, i2) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i8;
 L1 : do if (!i3) {
  i1 = HEAP32[i6 >> 2] | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) i1 = 0; else {
   i3 = i1;
   i1 = 0;
   do {
    if (i2 >>> 0 > 127) {
     i2 = _wcrtomb(i7, i2, 0) | 0;
     if ((i2 | 0) == -1) {
      i1 = -1;
      break L1;
     }
    } else i2 = 1;
    i1 = i2 + i1 | 0;
    i3 = i3 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
   } while ((i2 | 0) != 0);
  }
 } else {
  L9 : do if (i1 >>> 0 > 3) {
   i2 = i1;
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) break;
     i5 = _wcrtomb(i3, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (i2 >>> 0 <= 3) break L9;
   }
   HEAP8[i3 >> 0] = 0;
   HEAP32[i6 >> 2] = 0;
   i1 = i1 - i2 | 0;
   break L1;
  } else i2 = i1; while (0);
  if (i2) {
   i4 = HEAP32[i6 >> 2] | 0;
   while (1) {
    i5 = HEAP32[i4 >> 2] | 0;
    if ((i5 + -1 | 0) >>> 0 > 126) {
     if (!i5) {
      i4 = 19;
      break;
     }
     i5 = _wcrtomb(i7, i5, 0) | 0;
     if ((i5 | 0) == -1) {
      i1 = -1;
      break L1;
     }
     if (i2 >>> 0 < i5 >>> 0) {
      i4 = 22;
      break;
     }
     _wcrtomb(i3, HEAP32[i4 >> 2] | 0, 0) | 0;
     i3 = i3 + i5 | 0;
     i2 = i2 - i5 | 0;
    } else {
     HEAP8[i3 >> 0] = i5;
     i3 = i3 + 1 | 0;
     i2 = i2 + -1 | 0;
     i4 = HEAP32[i6 >> 2] | 0;
    }
    i4 = i4 + 4 | 0;
    HEAP32[i6 >> 2] = i4;
    if (!i2) break L1;
   }
   if ((i4 | 0) == 19) {
    HEAP8[i3 >> 0] = 0;
    HEAP32[i6 >> 2] = 0;
    i1 = i1 - i2 | 0;
    break;
   } else if ((i4 | 0) == 22) {
    i1 = i1 - i2 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function ___stdio_write(i12, i2, i1) {
 i12 = i12 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i13 = 0, i14 = 0, i15 = 0;
 i15 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i11 = i15 + 16 | 0;
 i10 = i15;
 i7 = i15 + 32 | 0;
 i13 = i12 + 28 | 0;
 i6 = HEAP32[i13 >> 2] | 0;
 HEAP32[i7 >> 2] = i6;
 i14 = i12 + 20 | 0;
 i6 = (HEAP32[i14 >> 2] | 0) - i6 | 0;
 HEAP32[i7 + 4 >> 2] = i6;
 HEAP32[i7 + 8 >> 2] = i2;
 HEAP32[i7 + 12 >> 2] = i1;
 i8 = i12 + 60 | 0;
 i9 = i12 + 44 | 0;
 i5 = 2;
 i2 = i6 + i1 | 0;
 while (1) {
  if (!(HEAP32[4318] | 0)) {
   HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i11 + 4 >> 2] = i7;
   HEAP32[i11 + 8 >> 2] = i5;
   i4 = ___syscall_ret(___syscall146(146, i11 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(108, i12 | 0);
   HEAP32[i10 >> 2] = HEAP32[i8 >> 2];
   HEAP32[i10 + 4 >> 2] = i7;
   HEAP32[i10 + 8 >> 2] = i5;
   i4 = ___syscall_ret(___syscall146(146, i10 | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
  }
  if ((i2 | 0) == (i4 | 0)) {
   i2 = 6;
   break;
  }
  if ((i4 | 0) < 0) {
   i2 = 8;
   break;
  }
  i2 = i2 - i4 | 0;
  i3 = HEAP32[i7 + 4 >> 2] | 0;
  if (i4 >>> 0 <= i3 >>> 0) if ((i5 | 0) == 2) {
   HEAP32[i13 >> 2] = (HEAP32[i13 >> 2] | 0) + i4;
   i5 = 2;
   i6 = i7;
  } else i6 = i7; else {
   i6 = HEAP32[i9 >> 2] | 0;
   HEAP32[i13 >> 2] = i6;
   HEAP32[i14 >> 2] = i6;
   i4 = i4 - i3 | 0;
   i5 = i5 + -1 | 0;
   i6 = i7 + 8 | 0;
   i3 = HEAP32[i7 + 12 >> 2] | 0;
  }
  HEAP32[i6 >> 2] = (HEAP32[i6 >> 2] | 0) + i4;
  HEAP32[i6 + 4 >> 2] = i3 - i4;
  i7 = i6;
 }
 if ((i2 | 0) == 6) {
  i11 = HEAP32[i9 >> 2] | 0;
  HEAP32[i12 + 16 >> 2] = i11 + (HEAP32[i12 + 48 >> 2] | 0);
  i12 = i11;
  HEAP32[i13 >> 2] = i12;
  HEAP32[i14 >> 2] = i12;
 } else if ((i2 | 0) == 8) {
  HEAP32[i12 + 16 >> 2] = 0;
  HEAP32[i13 >> 2] = 0;
  HEAP32[i14 >> 2] = 0;
  HEAP32[i12 >> 2] = HEAP32[i12 >> 2] | 32;
  if ((i5 | 0) == 2) i1 = 0; else i1 = i1 - (HEAP32[i7 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = i15;
 return i1 | 0;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SI_EEiEESL_RKT_(i5, i1, i9, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0;
 i4 = i5 + 4 | 0;
 i7 = HEAP32[i1 >> 2] | 0;
 i1 = i7;
 do if ((i7 | 0) != (i4 | 0) ? (i3 = HEAP32[i6 >> 2] | 0, i2 = HEAP32[i7 + 16 >> 2] | 0, (_strcmp(i3, i2) | 0) >= 0) : 0) {
  if ((_strcmp(i2, i3) | 0) < 0) i2 = 1; else {
   HEAP32[i9 >> 2] = i1;
   i1 = i9;
   break;
  }
  while (1) {
   if ((i2 | 0) <= 0) break;
   i2 = i2 + -1 | 0;
   i1 = __ZNSt3__211__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i1) | 0;
  }
  i2 = i1;
  if ((i2 | 0) != (i4 | 0) ? (_strcmp(HEAP32[i6 >> 2] | 0, HEAP32[i2 + 16 >> 2] | 0) | 0) >= 0 : 0) {
   i1 = __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESL_RKT_(i5, i9, i6) | 0;
   break;
  }
  i2 = i7 + 4 | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   HEAP32[i9 >> 2] = i7;
   i1 = i2;
   break;
  } else {
   HEAP32[i9 >> 2] = i1;
   break;
  }
 } else i8 = 3; while (0);
 do if ((i8 | 0) == 3) {
  if ((i7 | 0) != (HEAP32[i5 >> 2] | 0)) {
   i1 = __ZNSt3__211__tree_prevIPNS_16__tree_node_baseIPvEEEET_S5_(i7) | 0;
   if ((_strcmp(HEAP32[i1 + 16 >> 2] | 0, HEAP32[i6 >> 2] | 0) | 0) >= 0) {
    i1 = __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESL_RKT_(i5, i9, i6) | 0;
    break;
   }
  }
  if (!(HEAP32[i7 >> 2] | 0)) {
   HEAP32[i9 >> 2] = i7;
   i1 = i7;
   break;
  } else {
   HEAP32[i9 >> 2] = i1;
   i1 = i1 + 4 | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i6, i11, i2, i3, i8) {
 i10 = i10 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i12;
 i1 = HEAP32[i10 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i6;
  i4 = i2 - i13 >> 2;
  i7 = i3 + 12 | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  i4 = (i5 | 0) > (i4 | 0) ? i5 - i4 | 0 : 0;
  i5 = i11;
  i13 = i5 - i13 | 0;
  i3 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i6, i3) | 0) != (i3 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i4 | 0) > 0) {
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i9, i4, i8);
   __THREW__ = 0;
   i3 = invoke_iiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] | 0, i1 | 0, ((HEAP8[i9 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) | 0, i4 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   if (i13 & 1) {
    i13 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    ___resumeException(i13 | 0);
   }
   if ((i3 | 0) == (i4 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    break;
   } else {
    HEAP32[i10 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i13 = i2 - i5 | 0;
  i2 = i13 >> 2;
  if ((i13 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i11, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i7 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i10, i6, i11, i2, i3, i8) {
 i10 = i10 | 0;
 i6 = i6 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i7 = 0, i9 = 0, i12 = 0, i13 = 0;
 i12 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i12;
 i1 = HEAP32[i10 >> 2] | 0;
 L1 : do if (!i1) i1 = 0; else {
  i13 = i6;
  i4 = i2 - i13 | 0;
  i7 = i3 + 12 | 0;
  i5 = HEAP32[i7 >> 2] | 0;
  i4 = (i5 | 0) > (i4 | 0) ? i5 - i4 | 0 : 0;
  i5 = i11;
  i3 = i5 - i13 | 0;
  if ((i3 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i6, i3) | 0) != (i3 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  do if ((i4 | 0) > 0) {
   HEAP32[i9 >> 2] = 0;
   HEAP32[i9 + 4 >> 2] = 0;
   HEAP32[i9 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i9, i4, i8);
   __THREW__ = 0;
   i3 = invoke_iiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] | 0, i1 | 0, ((HEAP8[i9 + 11 >> 0] | 0) < 0 ? HEAP32[i9 >> 2] | 0 : i9) | 0, i4 | 0) | 0;
   i13 = __THREW__;
   __THREW__ = 0;
   if (i13 & 1) {
    i13 = ___cxa_find_matching_catch_2() | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    ___resumeException(i13 | 0);
   }
   if ((i3 | 0) == (i4 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    break;
   } else {
    HEAP32[i10 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i9);
    i1 = 0;
    break L1;
   }
  } while (0);
  i2 = i2 - i5 | 0;
  if ((i2 | 0) > 0 ? (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] & 63](i1, i11, i2) | 0) != (i2 | 0) : 0) {
   HEAP32[i10 >> 2] = 0;
   i1 = 0;
   break;
  }
  HEAP32[i7 >> 2] = 0;
 } while (0);
 STACKTOP = i12;
 return i1 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm(i1, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = i6;
 i11 = i6 + 112 | 0;
 i12 = i6 + 100 | 0;
 i3 = i6 + 16 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6 + 4 | 0;
 i2 = i6 + 8 | 0;
 HEAP8[i11 >> 0] = HEAP8[13812] | 0;
 HEAP8[i11 + 1 >> 0] = HEAP8[13813] | 0;
 HEAP8[i11 + 2 >> 0] = HEAP8[13814] | 0;
 HEAP8[i11 + 3 >> 0] = HEAP8[13815] | 0;
 HEAP8[i11 + 4 >> 0] = HEAP8[13816] | 0;
 HEAP8[i11 + 5 >> 0] = HEAP8[13817] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i11 + 1 | 0, 13818, 0, HEAP32[i8 + 4 >> 2] | 0);
 i13 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 >> 2] = i10;
 i10 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 12, i13, i11, i1) | 0) | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i10, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(3, i12 | 0, i11 | 0, i10 | 0, i3 | 0, i4 | 0, i5 | 0, i1 | 0);
 i10 = __THREW__;
 __THREW__ = 0;
 if (i10 & 1) {
  i13 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i13 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i12 = HEAP32[i4 >> 2] | 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i13 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i3, i12, i13, i8, i9) | 0;
  STACKTOP = i6;
  return i13 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl(i1, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i1 = i6;
 i11 = i6 + 122 | 0;
 i12 = i6 + 108 | 0;
 i3 = i6 + 16 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6 + 4 | 0;
 i2 = i6 + 8 | 0;
 HEAP8[i11 >> 0] = HEAP8[13812] | 0;
 HEAP8[i11 + 1 >> 0] = HEAP8[13813] | 0;
 HEAP8[i11 + 2 >> 0] = HEAP8[13814] | 0;
 HEAP8[i11 + 3 >> 0] = HEAP8[13815] | 0;
 HEAP8[i11 + 4 >> 0] = HEAP8[13816] | 0;
 HEAP8[i11 + 5 >> 0] = HEAP8[13817] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i11 + 1 | 0, 13818, 1, HEAP32[i8 + 4 >> 2] | 0);
 i13 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 >> 2] = i10;
 i10 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 13, i13, i11, i1) | 0) | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i10, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(3, i12 | 0, i11 | 0, i10 | 0, i3 | 0, i4 | 0, i5 | 0, i1 | 0);
 i10 = __THREW__;
 __THREW__ = 0;
 if (i10 & 1) {
  i13 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i13 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i12 = HEAP32[i4 >> 2] | 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i13 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i3, i12, i13, i8, i9) | 0;
  STACKTOP = i6;
  return i13 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm(i1, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = i6;
 i11 = i6 + 52 | 0;
 i12 = i6 + 40 | 0;
 i3 = i6 + 16 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6 + 4 | 0;
 i2 = i6 + 8 | 0;
 HEAP8[i11 >> 0] = HEAP8[13812] | 0;
 HEAP8[i11 + 1 >> 0] = HEAP8[13813] | 0;
 HEAP8[i11 + 2 >> 0] = HEAP8[13814] | 0;
 HEAP8[i11 + 3 >> 0] = HEAP8[13815] | 0;
 HEAP8[i11 + 4 >> 0] = HEAP8[13816] | 0;
 HEAP8[i11 + 5 >> 0] = HEAP8[13817] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i11 + 1 | 0, 13818, 0, HEAP32[i8 + 4 >> 2] | 0);
 i13 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 >> 2] = i10;
 i10 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 12, i13, i11, i1) | 0) | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i10, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(1, i12 | 0, i11 | 0, i10 | 0, i3 | 0, i4 | 0, i5 | 0, i1 | 0);
 i10 = __THREW__;
 __THREW__ = 0;
 if (i10 & 1) {
  i13 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i13 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i12 = HEAP32[i4 >> 2] | 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i13 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i3, i12, i13, i8, i9) | 0;
  STACKTOP = i6;
  return i13 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl(i1, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i11 = 0, i12 = 0, i13 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i1 = i6;
 i11 = i6 + 52 | 0;
 i12 = i6 + 39 | 0;
 i3 = i6 + 16 | 0;
 i4 = i6 + 12 | 0;
 i5 = i6 + 4 | 0;
 i2 = i6 + 8 | 0;
 HEAP8[i11 >> 0] = HEAP8[13812] | 0;
 HEAP8[i11 + 1 >> 0] = HEAP8[13813] | 0;
 HEAP8[i11 + 2 >> 0] = HEAP8[13814] | 0;
 HEAP8[i11 + 3 >> 0] = HEAP8[13815] | 0;
 HEAP8[i11 + 4 >> 0] = HEAP8[13816] | 0;
 HEAP8[i11 + 5 >> 0] = HEAP8[13817] | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i11 + 1 | 0, 13818, 1, HEAP32[i8 + 4 >> 2] | 0);
 i13 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i1 >> 2] = i10;
 i10 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 13, i13, i11, i1) | 0) | 0;
 i11 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i10, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(1, i12 | 0, i11 | 0, i10 | 0, i3 | 0, i4 | 0, i5 | 0, i1 | 0);
 i10 = __THREW__;
 __THREW__ = 0;
 if (i10 & 1) {
  i13 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i13 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i2 >> 2] = HEAP32[i7 >> 2];
  i12 = HEAP32[i4 >> 2] | 0;
  i13 = HEAP32[i5 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  i13 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i3, i12, i13, i8, i9) | 0;
  STACKTOP = i6;
  return i13 | 0;
 }
 return 0;
}

function _memcpy(i3, i6, i1) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0;
 if ((i1 | 0) >= 8192) return _emscripten_memcpy_big(i3 | 0, i6 | 0, i1 | 0) | 0;
 i5 = i3 | 0;
 i4 = i3 + i1 | 0;
 if ((i3 & 3) == (i6 & 3)) {
  while (i3 & 3) {
   if (!i1) return i5 | 0;
   HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
   i3 = i3 + 1 | 0;
   i6 = i6 + 1 | 0;
   i1 = i1 - 1 | 0;
  }
  i1 = i4 & -4 | 0;
  i2 = i1 - 64 | 0;
  while ((i3 | 0) <= (i2 | 0)) {
   HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
   HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
   HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
   HEAP32[i3 + 12 >> 2] = HEAP32[i6 + 12 >> 2];
   HEAP32[i3 + 16 >> 2] = HEAP32[i6 + 16 >> 2];
   HEAP32[i3 + 20 >> 2] = HEAP32[i6 + 20 >> 2];
   HEAP32[i3 + 24 >> 2] = HEAP32[i6 + 24 >> 2];
   HEAP32[i3 + 28 >> 2] = HEAP32[i6 + 28 >> 2];
   HEAP32[i3 + 32 >> 2] = HEAP32[i6 + 32 >> 2];
   HEAP32[i3 + 36 >> 2] = HEAP32[i6 + 36 >> 2];
   HEAP32[i3 + 40 >> 2] = HEAP32[i6 + 40 >> 2];
   HEAP32[i3 + 44 >> 2] = HEAP32[i6 + 44 >> 2];
   HEAP32[i3 + 48 >> 2] = HEAP32[i6 + 48 >> 2];
   HEAP32[i3 + 52 >> 2] = HEAP32[i6 + 52 >> 2];
   HEAP32[i3 + 56 >> 2] = HEAP32[i6 + 56 >> 2];
   HEAP32[i3 + 60 >> 2] = HEAP32[i6 + 60 >> 2];
   i3 = i3 + 64 | 0;
   i6 = i6 + 64 | 0;
  }
  while ((i3 | 0) < (i1 | 0)) {
   HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
   i3 = i3 + 4 | 0;
   i6 = i6 + 4 | 0;
  }
 } else {
  i1 = i4 - 4 | 0;
  while ((i3 | 0) < (i1 | 0)) {
   HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
   HEAP8[i3 + 1 >> 0] = HEAP8[i6 + 1 >> 0] | 0;
   HEAP8[i3 + 2 >> 0] = HEAP8[i6 + 2 >> 0] | 0;
   HEAP8[i3 + 3 >> 0] = HEAP8[i6 + 3 >> 0] | 0;
   i3 = i3 + 4 | 0;
   i6 = i6 + 4 | 0;
  }
 }
 while ((i3 | 0) < (i4 | 0)) {
  HEAP8[i3 >> 0] = HEAP8[i6 >> 0] | 0;
  i3 = i3 + 1 | 0;
  i6 = i6 + 1 | 0;
 }
 return i5 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj(i9, i1) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 if (i1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i9);
 i11 = i9 + 11 | 0;
 i7 = HEAP8[i11 >> 0] | 0;
 i3 = i7 << 24 >> 24 < 0;
 if (i3) {
  i10 = HEAP32[i9 + 4 >> 2] | 0;
  i2 = (HEAP32[i9 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i10 = i7 & 255;
  i2 = 10;
 }
 i8 = i10 >>> 0 > i1 >>> 0 ? i10 : i1;
 i1 = i8 >>> 0 < 11;
 i8 = i1 ? 10 : (i8 + 16 & -16) + -1 | 0;
 L8 : do if ((i8 | 0) != (i2 | 0)) {
  do if (i1) {
   i1 = HEAP32[i9 >> 2] | 0;
   if (i3) {
    i2 = i1;
    i3 = 0;
    i1 = i9;
    i6 = 16;
   } else {
    i2 = i1;
    i3 = 0;
    i4 = 1;
    i1 = i9;
    i6 = 17;
   }
  } else {
   i1 = i8 + 1 | 0;
   if (i8 >>> 0 <= i2 >>> 0) {
    __THREW__ = 0;
    i1 = invoke_ii(73, i1 | 0) | 0;
    i6 = __THREW__;
    __THREW__ = 0;
    if (i6 & 1) {
     i11 = ___cxa_find_matching_catch_3(0) | 0;
     ___cxa_begin_catch(i11 | 0) | 0;
     ___cxa_end_catch();
     break L8;
    }
   } else i1 = __Znwj(i1) | 0;
   if (i3) {
    i2 = HEAP32[i9 >> 2] | 0;
    i3 = 1;
    i6 = 16;
    break;
   } else {
    i2 = i9;
    i3 = 1;
    i4 = 0;
    i6 = 17;
    break;
   }
  } while (0);
  if ((i6 | 0) == 16) {
   i5 = i3;
   i4 = 1;
   i3 = HEAP32[i9 + 4 >> 2] | 0;
  } else if ((i6 | 0) == 17) {
   i5 = i3;
   i3 = i7 & 255;
  }
  i3 = i3 + 1 | 0;
  if (i3 | 0) _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  if (i4) __ZdlPv(i2);
  if (i5) {
   HEAP32[i9 + 8 >> 2] = i8 + 1 | -2147483648;
   HEAP32[i9 + 4 >> 2] = i10;
   HEAP32[i9 >> 2] = i1;
   break;
  } else {
   HEAP8[i11 >> 0] = i10;
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv(i1, i11, i12, i13, i2) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 i6 = i10;
 i1 = i10 + 176 | 0;
 i7 = i10 + 156 | 0;
 i8 = i10 + 4 | 0;
 i9 = i10 + 152 | 0;
 HEAP8[i1 >> 0] = HEAP8[13801] | 0;
 HEAP8[i1 + 1 >> 0] = HEAP8[13802] | 0;
 HEAP8[i1 + 2 >> 0] = HEAP8[13803] | 0;
 HEAP8[i1 + 3 >> 0] = HEAP8[13804] | 0;
 HEAP8[i1 + 4 >> 0] = HEAP8[13805] | 0;
 HEAP8[i1 + 5 >> 0] = HEAP8[13806] | 0;
 i3 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i2;
 i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i7, 20, i3, i1, i6) | 0;
 i2 = i7 + i1 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i2, i12) | 0;
 i4 = __ZNKSt3__28ios_base6getlocEv(i12) | 0;
 HEAP32[i6 >> 2] = i4;
 __THREW__ = 0;
 i5 = invoke_iii(15, i6 | 0, 18916) | 0;
 i14 = __THREW__;
 __THREW__ = 0;
 if (i14 & 1) {
  i14 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i4) | 0;
  ___resumeException(i14 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i4) | 0;
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 48 >> 2] & 31](i5, i7, i2, i8) | 0;
  i14 = i8 + (i1 << 2) | 0;
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
  i14 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i8, (i3 | 0) == (i2 | 0) ? i14 : i8 + (i3 - i7 << 2) | 0, i14, i12, i13) | 0;
  STACKTOP = i10;
  return i14 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv(i1, i11, i12, i13, i2) {
 i1 = i1 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i14 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i6 = i10;
 i1 = i10 + 68 | 0;
 i7 = i10 + 48 | 0;
 i8 = i10 + 8 | 0;
 i9 = i10 + 4 | 0;
 HEAP8[i1 >> 0] = HEAP8[13801] | 0;
 HEAP8[i1 + 1 >> 0] = HEAP8[13802] | 0;
 HEAP8[i1 + 2 >> 0] = HEAP8[13803] | 0;
 HEAP8[i1 + 3 >> 0] = HEAP8[13804] | 0;
 HEAP8[i1 + 4 >> 0] = HEAP8[13805] | 0;
 HEAP8[i1 + 5 >> 0] = HEAP8[13806] | 0;
 i3 = __ZNSt3__26__clocEv() | 0;
 HEAP32[i6 >> 2] = i2;
 i1 = __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i7, 20, i3, i1, i6) | 0;
 i2 = i7 + i1 | 0;
 i3 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i7, i2, i12) | 0;
 i4 = __ZNKSt3__28ios_base6getlocEv(i12) | 0;
 HEAP32[i6 >> 2] = i4;
 __THREW__ = 0;
 i5 = invoke_iii(15, i6 | 0, 18884) | 0;
 i14 = __THREW__;
 __THREW__ = 0;
 if (i14 & 1) {
  i14 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i4) | 0;
  ___resumeException(i14 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i4) | 0;
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[i5 >> 2] | 0) + 32 >> 2] & 31](i5, i7, i2, i8) | 0;
  i14 = i8 + i1 | 0;
  HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
  HEAP32[i6 >> 2] = HEAP32[i9 >> 2];
  i14 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i6, i8, (i3 | 0) == (i2 | 0) ? i14 : i8 + (i3 - i7) | 0, i14, i12, i13) | 0;
  STACKTOP = i10;
  return i14 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy(i1, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i1 = i6 + 8 | 0;
 i13 = i6;
 i12 = i6 + 200 | 0;
 i4 = i6 + 28 | 0;
 i5 = i6 + 24 | 0;
 i2 = i6 + 16 | 0;
 i3 = i6 + 20 | 0;
 i14 = i13;
 HEAP32[i14 >> 2] = 37;
 HEAP32[i14 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 13809, 0, HEAP32[i8 + 4 >> 2] | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 i15 = i1;
 HEAP32[i15 >> 2] = i10;
 HEAP32[i15 + 4 >> 2] = i11;
 i11 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 23, i14, i13, i1) | 0) | 0;
 i10 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i11, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(3, i12 | 0, i10 | 0, i11 | 0, i4 | 0, i5 | 0, i2 | 0, i1 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i15 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i15 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i15 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i4, i14, i15, i8, i9) | 0;
  STACKTOP = i6;
  return i15 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx(i1, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i1 = i6 + 8 | 0;
 i13 = i6;
 i12 = i6 + 200 | 0;
 i4 = i6 + 28 | 0;
 i5 = i6 + 24 | 0;
 i2 = i6 + 16 | 0;
 i3 = i6 + 20 | 0;
 i14 = i13;
 HEAP32[i14 >> 2] = 37;
 HEAP32[i14 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 13809, 1, HEAP32[i8 + 4 >> 2] | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 i15 = i1;
 HEAP32[i15 >> 2] = i10;
 HEAP32[i15 + 4 >> 2] = i11;
 i11 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 23, i14, i13, i1) | 0) | 0;
 i10 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i11, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(3, i12 | 0, i10 | 0, i11 | 0, i4 | 0, i5 | 0, i2 | 0, i1 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i15 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i15 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i15 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i4, i14, i15, i8, i9) | 0;
  STACKTOP = i6;
  return i15 | 0;
 }
 return 0;
}

function __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(i7, i1) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i8 = 0;
 HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
 i4 = i1;
 while (1) {
  if ((i4 | 0) == (i7 | 0)) break;
  i2 = HEAP32[i4 + 8 >> 2] | 0;
  i6 = i2 + 12 | 0;
  if (HEAP8[i6 >> 0] | 0) break;
  i5 = i2 + 8 | 0;
  i1 = HEAP32[i5 >> 2] | 0;
  i3 = HEAP32[i1 >> 2] | 0;
  if ((i3 | 0) == (i2 | 0)) {
   i3 = HEAP32[i1 + 4 >> 2] | 0;
   if (!i3) {
    i8 = 8;
    break;
   }
   i3 = i3 + 12 | 0;
   if (HEAP8[i3 >> 0] | 0) {
    i8 = 8;
    break;
   }
   HEAP8[i6 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
   HEAP8[i3 >> 0] = 1;
   i4 = i1;
   continue;
  } else {
   if (!i3) {
    i8 = 14;
    break;
   }
   i3 = i3 + 12 | 0;
   if (HEAP8[i3 >> 0] | 0) {
    i8 = 14;
    break;
   }
   HEAP8[i6 >> 0] = 1;
   HEAP8[i1 + 12 >> 0] = (i1 | 0) == (i7 | 0) & 1;
   HEAP8[i3 >> 0] = 1;
   i4 = i1;
   continue;
  }
 }
 if ((i8 | 0) == 8) {
  if ((HEAP32[i2 >> 2] | 0) != (i4 | 0)) {
   __ZNSt3__218__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
   i1 = HEAP32[i5 >> 2] | 0;
   i2 = i1;
   i1 = HEAP32[i1 + 8 >> 2] | 0;
  }
  HEAP8[i2 + 12 >> 0] = 1;
  HEAP8[i1 + 12 >> 0] = 0;
  __ZNSt3__219__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
 } else if ((i8 | 0) == 14) {
  if ((HEAP32[i2 >> 2] | 0) == (i4 | 0)) {
   __ZNSt3__219__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i2);
   i1 = HEAP32[i5 >> 2] | 0;
   i2 = i1;
   i1 = HEAP32[i1 + 8 >> 2] | 0;
  }
  HEAP8[i2 + 12 >> 0] = 1;
  HEAP8[i1 + 12 >> 0] = 0;
  __ZNSt3__218__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i1);
 }
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy(i1, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i1 = i6 + 8 | 0;
 i13 = i6;
 i12 = i6 + 71 | 0;
 i4 = i6 + 28 | 0;
 i5 = i6 + 24 | 0;
 i2 = i6 + 16 | 0;
 i3 = i6 + 20 | 0;
 i14 = i13;
 HEAP32[i14 >> 2] = 37;
 HEAP32[i14 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 13809, 0, HEAP32[i8 + 4 >> 2] | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 i15 = i1;
 HEAP32[i15 >> 2] = i10;
 HEAP32[i15 + 4 >> 2] = i11;
 i11 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 23, i14, i13, i1) | 0) | 0;
 i10 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i11, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(1, i12 | 0, i10 | 0, i11 | 0, i4 | 0, i5 | 0, i2 | 0, i1 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i15 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i15 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i15 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i4, i14, i15, i8, i9) | 0;
  STACKTOP = i6;
  return i15 | 0;
 }
 return 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx(i1, i7, i8, i9, i10, i11) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i12 = 0, i13 = 0, i14 = 0, i15 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 i1 = i6 + 8 | 0;
 i13 = i6;
 i12 = i6 + 71 | 0;
 i4 = i6 + 28 | 0;
 i5 = i6 + 24 | 0;
 i2 = i6 + 16 | 0;
 i3 = i6 + 20 | 0;
 i14 = i13;
 HEAP32[i14 >> 2] = 37;
 HEAP32[i14 + 4 >> 2] = 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i13 + 1 | 0, 13809, 1, HEAP32[i8 + 4 >> 2] | 0);
 i14 = __ZNSt3__26__clocEv() | 0;
 i15 = i1;
 HEAP32[i15 >> 2] = i10;
 HEAP32[i15 + 4 >> 2] = i11;
 i11 = i12 + (__ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i12, 23, i14, i13, i1) | 0) | 0;
 i10 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i12, i11, i8) | 0;
 HEAP32[i1 >> 2] = __ZNKSt3__28ios_base6getlocEv(i8) | 0;
 __THREW__ = 0;
 invoke_viiiiiii(1, i12 | 0, i10 | 0, i11 | 0, i4 | 0, i5 | 0, i2 | 0, i1 | 0);
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i15 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  ___resumeException(i15 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
  HEAP32[i3 >> 2] = HEAP32[i7 >> 2];
  i14 = HEAP32[i5 >> 2] | 0;
  i15 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 >> 2] = HEAP32[i3 >> 2];
  i15 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(i1, i4, i14, i15, i8, i9) | 0;
  STACKTOP = i6;
  return i15 | 0;
 }
 return 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i4;
 L1 : do if (HEAP32[i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(43, i1 | 0, i3 | 0);
  i2 = __THREW__;
  __THREW__ = 0;
  L3 : do if (i2 & 1) i1 = ___cxa_find_matching_catch_3(0) | 0; else {
   do if (HEAP8[i1 >> 0] | 0) {
    i2 = HEAP32[i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i2 | 0) | 0;
    i5 = __THREW__;
    __THREW__ = 0;
    if (!(i5 & 1)) {
     if ((i2 | 0) != -1) break;
     i5 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
     __THREW__ = 0;
     invoke_vii(41, i5 | 0, HEAP32[i5 + 16 >> 2] | 1 | 0);
     i5 = __THREW__;
     __THREW__ = 0;
     if (!(i5 & 1)) break;
    }
    i5 = ___cxa_find_matching_catch_3(0) | 0;
    __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(i1);
    i1 = i5;
    break L3;
   } while (0);
   __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(i1);
   break L1;
  } while (0);
  ___cxa_begin_catch(i1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(107, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __THREW__;
  __THREW__ = 0;
  if (!(i5 & 1)) {
   ___cxa_end_catch();
   break;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
  __THREW__ = 0;
  invoke_v(2);
  i5 = __THREW__;
  __THREW__ = 0;
  if (i5 & 1) {
   i5 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i5);
  } else ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i4;
 L1 : do if (HEAP32[i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(40, i1 | 0, i3 | 0);
  i2 = __THREW__;
  __THREW__ = 0;
  L3 : do if (i2 & 1) i1 = ___cxa_find_matching_catch_3(0) | 0; else {
   do if (HEAP8[i1 >> 0] | 0) {
    i2 = HEAP32[i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
    __THREW__ = 0;
    i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i2 | 0) | 0;
    i5 = __THREW__;
    __THREW__ = 0;
    if (!(i5 & 1)) {
     if ((i2 | 0) != -1) break;
     i5 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
     __THREW__ = 0;
     invoke_vii(41, i5 | 0, HEAP32[i5 + 16 >> 2] | 1 | 0);
     i5 = __THREW__;
     __THREW__ = 0;
     if (!(i5 & 1)) break;
    }
    i5 = ___cxa_find_matching_catch_3(0) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1);
    i1 = i5;
    break L3;
   } while (0);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1);
   break L1;
  } while (0);
  ___cxa_begin_catch(i1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(107, i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0);
  i5 = __THREW__;
  __THREW__ = 0;
  if (!(i5 & 1)) {
   ___cxa_end_catch();
   break;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
  __THREW__ = 0;
  invoke_v(2);
  i5 = __THREW__;
  __THREW__ = 0;
  if (i5 & 1) {
   i5 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i5);
  } else ___resumeException(i1 | 0);
 } while (0);
 STACKTOP = i4;
 return i3 | 0;
}

function _mbsnrtowcs(i2, i10, i6, i1, i9) {
 i2 = i2 | 0;
 i10 = i10 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i11 = 0, i12 = 0, i13 = 0;
 i13 = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 i8 = i13 + 8 | 0;
 i11 = i13;
 i7 = HEAP32[i10 >> 2] | 0;
 HEAP32[i11 >> 2] = i7;
 i12 = (i2 | 0) != 0;
 i4 = i12 ? i1 : 256;
 i2 = i12 ? i2 : i8;
 i3 = i7;
 L1 : do if ((i4 | 0) != 0 & (i7 | 0) != 0) {
  i1 = 0;
  i7 = i6;
  while (1) {
   i5 = i7 >>> 2;
   i6 = i5 >>> 0 >= i4 >>> 0;
   if (!(i7 >>> 0 > 131 | i6)) {
    i6 = i7;
    break L1;
   }
   i3 = i6 ? i4 : i5;
   i6 = i7 - i3 | 0;
   i3 = _mbsrtowcs(i2, i11, i3, i9) | 0;
   if ((i3 | 0) == -1) break;
   i7 = (i2 | 0) == (i8 | 0);
   i4 = i4 - (i7 ? 0 : i3) | 0;
   i2 = i7 ? i2 : i2 + (i3 << 2) | 0;
   i1 = i3 + i1 | 0;
   i3 = HEAP32[i11 >> 2] | 0;
   if ((i4 | 0) != 0 & (i3 | 0) != 0) i7 = i6; else break L1;
  }
  i1 = -1;
  i4 = 0;
  i3 = HEAP32[i11 >> 2] | 0;
 } else i1 = 0; while (0);
 L8 : do if ((i3 | 0) != 0 ? (i4 | 0) != 0 & (i6 | 0) != 0 : 0) {
  i5 = i2;
  while (1) {
   i2 = _mbrtowc(i5, i3, i6, i9) | 0;
   if ((i2 + 2 | 0) >>> 0 < 3) break;
   i3 = (HEAP32[i11 >> 2] | 0) + i2 | 0;
   HEAP32[i11 >> 2] = i3;
   i6 = i6 - i2 | 0;
   i4 = i4 + -1 | 0;
   i1 = i1 + 1 | 0;
   if (!((i4 | 0) != 0 & (i6 | 0) != 0)) break L8; else i5 = i5 + 4 | 0;
  }
  switch (i2 | 0) {
  case -1:
   {
    i1 = -1;
    break L8;
   }
  case 0:
   {
    HEAP32[i11 >> 2] = 0;
    break L8;
   }
  default:
   {
    HEAP32[i9 >> 2] = 0;
    break L8;
   }
  }
 } while (0);
 if (i12) HEAP32[i10 >> 2] = HEAP32[i11 >> 2];
 STACKTOP = i13;
 return i1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i3, i6, i8, i2, i4) {
 i3 = i3 | 0;
 i6 = i6 | 0;
 i8 = i8 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i7 = 0;
 do if ((i3 | 0) == (HEAP32[i6 + 8 >> 2] | 0)) {
  if ((HEAP32[i6 + 4 >> 2] | 0) == (i8 | 0) ? (i1 = i6 + 28 | 0, (HEAP32[i1 >> 2] | 0) != 1) : 0) HEAP32[i1 >> 2] = i2;
 } else {
  if ((i3 | 0) != (HEAP32[i6 >> 2] | 0)) {
   i7 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i7 >> 2] | 0) + 24 >> 2] & 3](i7, i6, i8, i2, i4);
   break;
  }
  if ((HEAP32[i6 + 16 >> 2] | 0) != (i8 | 0) ? (i7 = i6 + 20 | 0, (HEAP32[i7 >> 2] | 0) != (i8 | 0)) : 0) {
   HEAP32[i6 + 32 >> 2] = i2;
   i5 = i6 + 44 | 0;
   if ((HEAP32[i5 >> 2] | 0) == 4) break;
   i1 = i6 + 52 | 0;
   HEAP8[i1 >> 0] = 0;
   i2 = i6 + 53 | 0;
   HEAP8[i2 >> 0] = 0;
   i3 = HEAP32[i3 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i3 >> 2] | 0) + 20 >> 2] & 7](i3, i6, i8, i8, 1, i4);
   if (HEAP8[i2 >> 0] | 0) if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = 1;
    i2 = 13;
   } else i2 = 17; else {
    i1 = 0;
    i2 = 13;
   }
   do if ((i2 | 0) == 13) {
    HEAP32[i7 >> 2] = i8;
    i8 = i6 + 40 | 0;
    HEAP32[i8 >> 2] = (HEAP32[i8 >> 2] | 0) + 1;
    if ((HEAP32[i6 + 36 >> 2] | 0) == 1 ? (HEAP32[i6 + 24 >> 2] | 0) == 2 : 0) {
     HEAP8[i6 + 54 >> 0] = 1;
     if (i1) {
      i2 = 17;
      break;
     } else {
      i1 = 4;
      break;
     }
    }
    if (i1) i2 = 17; else i1 = 4;
   } while (0);
   if ((i2 | 0) == 17) i1 = 3;
   HEAP32[i5 >> 2] = i1;
   break;
  }
  if ((i2 | 0) == 1) HEAP32[i6 + 32 >> 2] = 1;
 } while (0);
 return;
}

function ___dynamic_cast(i1, i2, i11, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i12 = i14;
 i10 = HEAP32[i1 >> 2] | 0;
 i13 = i1 + (HEAP32[i10 + -8 >> 2] | 0) | 0;
 i10 = HEAP32[i10 + -4 >> 2] | 0;
 HEAP32[i12 >> 2] = i11;
 HEAP32[i12 + 4 >> 2] = i1;
 HEAP32[i12 + 8 >> 2] = i2;
 HEAP32[i12 + 12 >> 2] = i3;
 i1 = i12 + 16 | 0;
 i2 = i12 + 20 | 0;
 i3 = i12 + 24 | 0;
 i4 = i12 + 28 | 0;
 i5 = i12 + 32 | 0;
 i6 = i12 + 40 | 0;
 i7 = (i10 | 0) == (i11 | 0);
 i8 = i1;
 i9 = i8 + 36 | 0;
 do {
  HEAP32[i8 >> 2] = 0;
  i8 = i8 + 4 | 0;
 } while ((i8 | 0) < (i9 | 0));
 HEAP16[i1 + 36 >> 1] = 0;
 HEAP8[i1 + 38 >> 0] = 0;
 L1 : do if (i7) {
  HEAP32[i12 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 20 >> 2] & 7](i11, i12, i13, i13, 1, 0);
  i1 = (HEAP32[i3 >> 2] | 0) == 1 ? i13 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i10 >> 2] | 0) + 24 >> 2] & 3](i10, i12, i13, 1, 0);
  switch (HEAP32[i12 + 36 >> 2] | 0) {
  case 0:
   {
    i1 = (HEAP32[i6 >> 2] | 0) == 1 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1 ? HEAP32[i2 >> 2] | 0 : 0;
    break L1;
   }
  case 1:
   break;
  default:
   {
    i1 = 0;
    break L1;
   }
  }
  if ((HEAP32[i3 >> 2] | 0) != 1 ? !((HEAP32[i6 >> 2] | 0) == 0 & (HEAP32[i4 >> 2] | 0) == 1 & (HEAP32[i5 >> 2] | 0) == 1) : 0) {
   i1 = 0;
   break;
  }
  i1 = HEAP32[i1 >> 2] | 0;
 } while (0);
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i3, i8, i12, i13, i14) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i8 = i8 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i15 = 0;
 if ((i1 | 0) == (HEAP32[i3 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i3, i8, i12, i13); else {
  i15 = i3 + 52 | 0;
  i6 = HEAP16[i15 >> 1] | 0;
  i4 = i6 & 255;
  i5 = i3 + 53 | 0;
  i6 = (i6 & 65535) >>> 8 & 255;
  i11 = HEAP32[i1 + 12 >> 2] | 0;
  i7 = i1 + 16 + (i11 << 3) | 0;
  HEAP8[i15 >> 0] = 0;
  HEAP8[i5 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1 + 16 | 0, i3, i8, i12, i13, i14);
  L4 : do if ((i11 | 0) > 1) {
   i9 = i3 + 24 | 0;
   i10 = i1 + 8 | 0;
   i11 = i3 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    if (HEAP8[i11 >> 0] | 0) break L4;
    i2 = HEAP16[i15 >> 1] | 0;
    if (!((i2 & 255) << 24 >> 24)) {
     if ((i2 & 65535) >= 256 ? (HEAP32[i10 >> 2] & 1 | 0) == 0 : 0) break L4;
    } else {
     if ((HEAP32[i9 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[i10 >> 2] & 2)) break L4;
    }
    HEAP8[i15 >> 0] = 0;
    HEAP8[i5 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i3, i8, i12, i13, i14);
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i7 >>> 0);
  } while (0);
  HEAP8[i15 >> 0] = i4;
  HEAP8[i5 >> 0] = i6;
 }
 return;
}

function _vfprintf(i15, i8, i1) {
 i15 = i15 | 0;
 i8 = i8 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0, i16 = 0;
 i16 = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 i10 = i16 + 120 | 0;
 i12 = i16 + 80 | 0;
 i13 = i16;
 i14 = i16 + 136 | 0;
 i2 = i12;
 i3 = i2 + 40 | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = i2 + 4 | 0;
 } while ((i2 | 0) < (i3 | 0));
 HEAP32[i10 >> 2] = HEAP32[i1 >> 2];
 if ((_printf_core(0, i8, i10, i13, i12) | 0) < 0) i1 = -1; else {
  if ((HEAP32[i15 + 76 >> 2] | 0) > -1) i11 = ___lockfile(i15) | 0; else i11 = 0;
  i1 = HEAP32[i15 >> 2] | 0;
  i9 = i1 & 32;
  if ((HEAP8[i15 + 74 >> 0] | 0) < 1) HEAP32[i15 >> 2] = i1 & -33;
  i2 = i15 + 48 | 0;
  if (!(HEAP32[i2 >> 2] | 0)) {
   i3 = i15 + 44 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   HEAP32[i3 >> 2] = i14;
   i5 = i15 + 28 | 0;
   HEAP32[i5 >> 2] = i14;
   i6 = i15 + 20 | 0;
   HEAP32[i6 >> 2] = i14;
   HEAP32[i2 >> 2] = 80;
   i7 = i15 + 16 | 0;
   HEAP32[i7 >> 2] = i14 + 80;
   i1 = _printf_core(i15, i8, i10, i13, i12) | 0;
   if (i4) {
    FUNCTION_TABLE_iiii[HEAP32[i15 + 36 >> 2] & 63](i15, 0, 0) | 0;
    i1 = (HEAP32[i6 >> 2] | 0) == 0 ? -1 : i1;
    HEAP32[i3 >> 2] = i4;
    HEAP32[i2 >> 2] = 0;
    HEAP32[i7 >> 2] = 0;
    HEAP32[i5 >> 2] = 0;
    HEAP32[i6 >> 2] = 0;
   }
  } else i1 = _printf_core(i15, i8, i10, i13, i12) | 0;
  i2 = HEAP32[i15 >> 2] | 0;
  HEAP32[i15 >> 2] = i2 | i9;
  if (i11 | 0) ___unlockfile(i15);
  i1 = (i2 & 32 | 0) == 0 ? i1 : -1;
 }
 STACKTOP = i16;
 return i1 | 0;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE30__emplace_hint_unique_key_argsIS3_JRKNS_4pairIS3_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEEiEENS_21__tree_const_iteratorISA_SP_iEERKT_DpOT0_(i4, i1, i2, i5) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i3 = i7 + 8 | 0;
 i6 = i7 + 4 | 0;
 i8 = i7;
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
 i2 = __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SI_EEiEESL_RKT_(i4, i3, i6, i2) | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) {
  __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_4pairIS3_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISO_EEEEEEDpOT_(i3, i4, i5);
  __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_(i4, HEAP32[i6 >> 2] | 0, i2, HEAP32[i3 >> 2] | 0);
  i1 = HEAP32[i3 >> 2] | 0;
 }
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj(i1, i9) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i14 + 16 | 0;
 i3 = i14 + 8 | 0;
 i11 = i14 + 4 | 0;
 i12 = i14;
 i13 = (i9 | 0) == -1;
 do if (!i13) {
  HEAP32[i3 >> 2] = i9;
  if (HEAP8[i1 + 44 >> 0] | 0) if ((_fwrite(i3, 4, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i11 >> 2] = i10;
  i2 = i3 + 4 | 0;
  i4 = i1 + 36 | 0;
  i5 = i1 + 40 | 0;
  i6 = i10 + 8 | 0;
  i7 = i10;
  i8 = i1 + 32 | 0;
  while (1) {
   i1 = HEAP32[i4 >> 2] | 0;
   i1 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i5 >> 2] | 0, i3, i2, i12, i10, i6, i11) | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) {
    i2 = 13;
    break;
   }
   if ((i1 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i1 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i3 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i10, 1, i3, HEAP32[i8 >> 2] | 0) | 0) != (i3 | 0)) {
    i2 = 13;
    break;
   }
   if ((i1 | 0) == 1) i3 = HEAP32[i12 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i3, 1, 1, HEAP32[i8 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i13 ? 0 : i9;
 STACKTOP = i14;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi(i1, i9) {
 i1 = i1 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0, i14 = 0;
 i14 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i10 = i14 + 16 | 0;
 i3 = i14 + 8 | 0;
 i11 = i14 + 4 | 0;
 i12 = i14;
 i13 = (i9 | 0) == -1;
 do if (!i13) {
  HEAP8[i3 >> 0] = i9;
  if (HEAP8[i1 + 44 >> 0] | 0) if ((_fwrite(i3, 1, 1, HEAP32[i1 + 32 >> 2] | 0) | 0) == 1) {
   i2 = 14;
   break;
  } else {
   i1 = -1;
   break;
  }
  HEAP32[i11 >> 2] = i10;
  i2 = i3 + 1 | 0;
  i4 = i1 + 36 | 0;
  i5 = i1 + 40 | 0;
  i6 = i10 + 8 | 0;
  i7 = i10;
  i8 = i1 + 32 | 0;
  while (1) {
   i1 = HEAP32[i4 >> 2] | 0;
   i1 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i1, HEAP32[i5 >> 2] | 0, i3, i2, i12, i10, i6, i11) | 0;
   if ((HEAP32[i12 >> 2] | 0) == (i3 | 0)) {
    i2 = 13;
    break;
   }
   if ((i1 | 0) == 3) {
    i2 = 7;
    break;
   }
   if ((i1 | 1 | 0) != 1) {
    i2 = 13;
    break;
   }
   i3 = (HEAP32[i11 >> 2] | 0) - i7 | 0;
   if ((_fwrite(i10, 1, i3, HEAP32[i8 >> 2] | 0) | 0) != (i3 | 0)) {
    i2 = 13;
    break;
   }
   if ((i1 | 0) == 1) i3 = HEAP32[i12 >> 2] | 0; else {
    i2 = 12;
    break;
   }
  }
  if ((i2 | 0) == 7) if ((_fwrite(i3, 1, 1, HEAP32[i8 >> 2] | 0) | 0) == 1) i2 = 12; else i2 = 13;
  if ((i2 | 0) == 12) {
   i2 = 14;
   break;
  } else if ((i2 | 0) == 13) {
   i1 = -1;
   break;
  }
 } else i2 = 14; while (0);
 if ((i2 | 0) == 14) i1 = i13 ? 0 : i9;
 STACKTOP = i14;
 return i1 | 0;
}

function _mbrtowc(i2, i4, i7, i1) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0, i10 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i9;
 i6 = (i1 | 0) == 0 ? 17320 : i1;
 i1 = HEAP32[i6 >> 2] | 0;
 L1 : do if (!i4) if (!i1) i1 = 0; else i8 = 15; else {
  i5 = (i2 | 0) == 0 ? i3 : i2;
  if (!i7) i1 = -2; else {
   if (!i1) {
    i1 = HEAP8[i4 >> 0] | 0;
    i2 = i1 & 255;
    if (i1 << 24 >> 24 > -1) {
     HEAP32[i5 >> 2] = i2;
     i1 = i1 << 24 >> 24 != 0 & 1;
     break;
    }
    i1 = i2 + -194 | 0;
    if (i1 >>> 0 > 50) {
     i8 = 15;
     break;
    }
    i1 = HEAP32[1616 + (i1 << 2) >> 2] | 0;
    i3 = i7 + -1 | 0;
    if (i3) {
     i4 = i4 + 1 | 0;
     i8 = 9;
    }
   } else {
    i3 = i7;
    i8 = 9;
   }
   L11 : do if ((i8 | 0) == 9) {
    i2 = HEAP8[i4 >> 0] | 0;
    i10 = (i2 & 255) >>> 3;
    if ((i10 + -16 | i10 + (i1 >> 26)) >>> 0 > 7) {
     i8 = 15;
     break L1;
    }
    while (1) {
     i4 = i4 + 1 | 0;
     i1 = (i2 & 255) + -128 | i1 << 6;
     i3 = i3 + -1 | 0;
     if ((i1 | 0) >= 0) break;
     if (!i3) break L11;
     i2 = HEAP8[i4 >> 0] | 0;
     if ((i2 & -64) << 24 >> 24 != -128) {
      i8 = 15;
      break L1;
     }
    }
    HEAP32[i6 >> 2] = 0;
    HEAP32[i5 >> 2] = i1;
    i1 = i7 - i3 | 0;
    break L1;
   } while (0);
   HEAP32[i6 >> 2] = i1;
   i1 = -2;
  }
 } while (0);
 if ((i8 | 0) == 15) {
  HEAP32[i6 >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  i1 = -1;
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0;
 _pthread_mutex_lock(20724) | 0;
 while (1) {
  if ((HEAP32[i1 >> 2] | 0) != 1) break;
  _pthread_cond_wait(20752, 20724) | 0;
 }
 do if (!(HEAP32[i1 >> 2] | 0)) {
  HEAP32[i1 >> 2] = 1;
  __THREW__ = 0;
  invoke_ii(70, 20724) | 0;
  i4 = __THREW__;
  __THREW__ = 0;
  if ((((!(i4 & 1) ? (__THREW__ = 0, invoke_vi(i3 | 0, i2 | 0), i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) ? (__THREW__ = 0, invoke_ii(71, 20724) | 0, i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) ? (HEAP32[i1 >> 2] = -1, __THREW__ = 0, invoke_ii(70, 20724) | 0, i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) ? (__THREW__ = 0, invoke_ii(72, 20752) | 0, i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) break;
  i4 = ___cxa_find_matching_catch_3(0) | 0;
  ___cxa_begin_catch(i4 | 0) | 0;
  __THREW__ = 0;
  invoke_ii(71, 20724) | 0;
  i4 = __THREW__;
  __THREW__ = 0;
  if ((!(i4 & 1) ? (HEAP32[i1 >> 2] = 0, __THREW__ = 0, invoke_ii(70, 20724) | 0, i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) ? (__THREW__ = 0, invoke_ii(72, 20752) | 0, i4 = __THREW__, __THREW__ = 0, !(i4 & 1)) : 0) {
   __THREW__ = 0;
   invoke_v(4);
   __THREW__ = 0;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
  __THREW__ = 0;
  invoke_v(2);
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i4 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i4);
  } else ___resumeException(i1 | 0);
 } else _pthread_mutex_unlock(20724) | 0; while (0);
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_(i4, i1, i2, i7, i8) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10;
 i9 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i9;
 __THREW__ = 0;
 i1 = invoke_iii(15, i3 | 0, 18916) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if ((!(i11 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] | 0, i1 | 0, 13558, 13590, i2 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) ? (__THREW__ = 0, i5 = invoke_iii(15, i3 | 0, 18924) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  __THREW__ = 0;
  i1 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] | 0, i5 | 0) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if ((!(i11 & 1) ? (HEAP32[i7 >> 2] = i1, __THREW__ = 0, i6 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) ? (HEAP32[i8 >> 2] = i6, __THREW__ = 0, invoke_vii(HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] | 0, i4 | 0, i5 | 0), i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i9) | 0;
   STACKTOP = i10;
   return;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else i1 = ___cxa_find_matching_catch_2() | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(i9) | 0;
 ___resumeException(i1 | 0);
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_(i4, i1, i2, i7, i8) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i3 = 0, i5 = 0, i6 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10;
 i9 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i9;
 __THREW__ = 0;
 i1 = invoke_iii(15, i3 | 0, 18884) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if ((!(i11 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] | 0, i1 | 0, 13558, 13590, i2 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) ? (__THREW__ = 0, i5 = invoke_iii(15, i3 | 0, 18900) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
  __THREW__ = 0;
  i1 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 12 >> 2] | 0, i5 | 0) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if ((!(i11 & 1) ? (HEAP8[i7 >> 0] = i1, __THREW__ = 0, i6 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0, i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) ? (HEAP8[i8 >> 0] = i6, __THREW__ = 0, invoke_vii(HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] | 0, i4 | 0, i5 | 0), i11 = __THREW__, __THREW__ = 0, !(i11 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i9) | 0;
   STACKTOP = i10;
   return;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else i1 = ___cxa_find_matching_catch_2() | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(i9) | 0;
 ___resumeException(i1 | 0);
}

function _wcsnrtombs(i3, i11, i6, i2, i1) {
 i3 = i3 | 0;
 i11 = i11 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 i7 = i10 + 8 | 0;
 i8 = i10;
 i5 = HEAP32[i11 >> 2] | 0;
 HEAP32[i8 >> 2] = i5;
 i9 = (i3 | 0) != 0;
 i4 = i9 ? i2 : 256;
 i3 = i9 ? i3 : i7;
 i2 = i5;
 L1 : do if ((i4 | 0) != 0 & (i5 | 0) != 0) {
  i1 = 0;
  i5 = i2;
  while (1) {
   i2 = i6 >>> 0 >= i4 >>> 0;
   if (!(i2 | i6 >>> 0 > 32)) {
    i2 = i5;
    break L1;
   }
   i2 = i2 ? i4 : i6;
   i6 = i6 - i2 | 0;
   i2 = _wcsrtombs(i3, i8, i2, 0) | 0;
   if ((i2 | 0) == -1) break;
   i5 = (i3 | 0) == (i7 | 0);
   i4 = i4 - (i5 ? 0 : i2) | 0;
   i3 = i5 ? i3 : i3 + i2 | 0;
   i1 = i2 + i1 | 0;
   i2 = HEAP32[i8 >> 2] | 0;
   if ((i4 | 0) != 0 & (i2 | 0) != 0) i5 = i2; else break L1;
  }
  i1 = -1;
  i4 = 0;
  i2 = HEAP32[i8 >> 2] | 0;
 } else i1 = 0; while (0);
 L8 : do if ((i2 | 0) != 0 ? (i4 | 0) != 0 & (i6 | 0) != 0 : 0) {
  i5 = i3;
  while (1) {
   i3 = _wcrtomb(i5, HEAP32[i2 >> 2] | 0, 0) | 0;
   if ((i3 + 1 | 0) >>> 0 < 2) break;
   i2 = (HEAP32[i8 >> 2] | 0) + 4 | 0;
   HEAP32[i8 >> 2] = i2;
   i6 = i6 + -1 | 0;
   i4 = i4 - i3 | 0;
   i1 = i1 + 1 | 0;
   if (!((i4 | 0) != 0 & (i6 | 0) != 0)) break L8; else i5 = i5 + i3 | 0;
  }
  if (!i3) HEAP32[i8 >> 2] = 0; else i1 = -1;
 } while (0);
 if (i9) HEAP32[i11 >> 2] = HEAP32[i8 >> 2];
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__212system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE(i3, i4, i6) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i7;
 i1 = HEAP32[i4 >> 2] | 0;
 do if (i1 | 0) {
  i2 = HEAP8[i6 + 11 >> 0] | 0;
  if (i2 << 24 >> 24 < 0) i2 = HEAP32[i6 + 4 >> 2] | 0; else i2 = i2 & 255;
  if (i2) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i6, 15855) | 0;
   i1 = HEAP32[i4 >> 2] | 0;
  }
  i4 = HEAP32[i4 + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 15](i5, i4, i1);
  i4 = HEAP8[i5 + 11 >> 0] | 0;
  i2 = i4 << 24 >> 24 < 0;
  __THREW__ = 0;
  invoke_iiii(36, i6 | 0, (i2 ? HEAP32[i5 >> 2] | 0 : i5) | 0, (i2 ? HEAP32[i5 + 4 >> 2] | 0 : i4 & 255) | 0) | 0;
  i4 = __THREW__;
  __THREW__ = 0;
  if (i4 & 1) {
   i7 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
   ___resumeException(i7 | 0);
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i5);
   break;
  }
 } while (0);
 HEAP32[i3 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i3 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 HEAP32[i3 + 8 >> 2] = HEAP32[i6 + 8 >> 2];
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i6 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 STACKTOP = i7;
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 8 | 0;
 __THREW__ = 0;
 i3 = invoke_ii(68, HEAP32[i2 >> 2] | 0) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 do if (i4 & 1) i5 = 16; else {
  __THREW__ = 0;
  i4 = invoke_iiii(34, 0, 0, 4) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_3(0) | 0;
   if (!i3) break;
   __THREW__ = 0;
   invoke_ii(68, i3 | 0) | 0;
   i7 = __THREW__;
   __THREW__ = 0;
   if (!(i7 & 1)) break;
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  }
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i7 = __THREW__, __THREW__ = 0, i7 & 1) : 0) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  }
  if (!i4) {
   i1 = HEAP32[i2 >> 2] | 0;
   if (i1) {
    __THREW__ = 0;
    i1 = invoke_ii(68, i1 | 0) | 0;
    i7 = __THREW__;
    __THREW__ = 0;
    if (i7 & 1) {
     i5 = 16;
     break;
    }
    if ((i1 | 0) != 0 ? (__THREW__ = 0, invoke_ii(68, i1 | 0) | 0, i7 = __THREW__, __THREW__ = 0, i7 & 1) : 0) {
     i7 = ___cxa_find_matching_catch_3(0) | 0;
     ___clang_call_terminate(i7);
    } else i6 = 0;
   } else i6 = 1;
  } else i6 = -1;
  return i6 | 0;
 } while (0);
 if ((i5 | 0) == 16) i1 = ___cxa_find_matching_catch_3(0) | 0;
 ___clang_call_terminate(i1);
 return 0;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i10 + 16 | 0;
 i8 = i10 + 8 | 0;
 i4 = i10 + 4 | 0;
 i5 = i10;
 i9 = i3 + 52 | 0;
 i2 = (HEAP8[i9 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i3 + 48 >> 2] | 0;
  HEAP8[i9 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  L5 : do if (i2) {
   i2 = i3 + 48 | 0;
   HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
   i11 = HEAP32[i3 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 15](i11, HEAP32[i3 + 40 >> 2] | 0, i4, i4 + 4 | 0, i5, i7, i7 + 8 | 0, i8) | 0) {
   case 1:
   case 2:
    break;
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i8 >> 2] = i7 + 1;
     i6 = 8;
     break;
    }
   default:
    i6 = 8;
   }
   L9 : do if ((i6 | 0) == 8) {
    i3 = i3 + 32 | 0;
    while (1) {
     i4 = HEAP32[i8 >> 2] | 0;
     if (i4 >>> 0 <= i7 >>> 0) break;
     i11 = i4 + -1 | 0;
     HEAP32[i8 >> 2] = i11;
     if ((_ungetc(HEAP8[i11 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) break L9;
    }
    break L5;
   } while (0);
   i1 = -1;
   break L1;
  } else i2 = i3 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i9 >> 0] = 1;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function ___stdio_read(i6, i7, i8) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i3 = i10 + 16 | 0;
 i2 = i10;
 i1 = i10 + 32 | 0;
 HEAP32[i1 >> 2] = i7;
 i4 = i1 + 4 | 0;
 i9 = i6 + 48 | 0;
 i11 = HEAP32[i9 >> 2] | 0;
 HEAP32[i4 >> 2] = i8 - ((i11 | 0) != 0 & 1);
 i5 = i6 + 44 | 0;
 HEAP32[i1 + 8 >> 2] = HEAP32[i5 >> 2];
 HEAP32[i1 + 12 >> 2] = i11;
 if (!(HEAP32[4318] | 0)) {
  HEAP32[i3 >> 2] = HEAP32[i6 + 60 >> 2];
  HEAP32[i3 + 4 >> 2] = i1;
  HEAP32[i3 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(109, i6 | 0);
  HEAP32[i2 >> 2] = HEAP32[i6 + 60 >> 2];
  HEAP32[i2 + 4 >> 2] = i1;
  HEAP32[i2 + 8 >> 2] = 2;
  i1 = ___syscall_ret(___syscall145(145, i2 | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
 }
 if ((i1 | 0) >= 1) {
  i4 = HEAP32[i4 >> 2] | 0;
  if (i1 >>> 0 > i4 >>> 0) {
   i2 = HEAP32[i5 >> 2] | 0;
   i3 = i6 + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   HEAP32[i6 + 8 >> 2] = i2 + (i1 - i4);
   if (!(HEAP32[i9 >> 2] | 0)) i1 = i8; else {
    HEAP32[i3 >> 2] = i2 + 1;
    HEAP8[i7 + (i8 + -1) >> 0] = HEAP8[i2 >> 0] | 0;
    i1 = i8;
   }
  }
 } else {
  HEAP32[i6 >> 2] = HEAP32[i6 >> 2] | i1 & 48 ^ 16;
  HEAP32[i6 + 8 >> 2] = 0;
  HEAP32[i6 + 4 >> 2] = 0;
 }
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi(i3, i1) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i10 + 16 | 0;
 i8 = i10 + 4 | 0;
 i4 = i10 + 8 | 0;
 i5 = i10;
 i9 = i3 + 52 | 0;
 i2 = (HEAP8[i9 >> 0] | 0) != 0;
 L1 : do if ((i1 | 0) == -1) if (i2) i1 = -1; else {
  i1 = HEAP32[i3 + 48 >> 2] | 0;
  HEAP8[i9 >> 0] = (i1 | 0) != -1 & 1;
 } else {
  L5 : do if (i2) {
   i2 = i3 + 48 | 0;
   HEAP8[i4 >> 0] = HEAP32[i2 >> 2];
   i11 = HEAP32[i3 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[i11 >> 2] | 0) + 12 >> 2] & 15](i11, HEAP32[i3 + 40 >> 2] | 0, i4, i4 + 1 | 0, i5, i7, i7 + 8 | 0, i8) | 0) {
   case 1:
   case 2:
    break;
   case 3:
    {
     HEAP8[i7 >> 0] = HEAP32[i2 >> 2];
     HEAP32[i8 >> 2] = i7 + 1;
     i6 = 8;
     break;
    }
   default:
    i6 = 8;
   }
   L9 : do if ((i6 | 0) == 8) {
    i3 = i3 + 32 | 0;
    while (1) {
     i4 = HEAP32[i8 >> 2] | 0;
     if (i4 >>> 0 <= i7 >>> 0) break;
     i11 = i4 + -1 | 0;
     HEAP32[i8 >> 2] = i11;
     if ((_ungetc(HEAP8[i11 >> 0] | 0, HEAP32[i3 >> 2] | 0) | 0) == -1) break L9;
    }
    break L5;
   } while (0);
   i1 = -1;
   break L1;
  } else i2 = i3 + 48 | 0; while (0);
  HEAP32[i2 >> 2] = i1;
  HEAP8[i9 >> 0] = 1;
 } while (0);
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i7, i2, i8, i9) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i10 = 0, i11 = 0;
 i10 = i8;
 i5 = i1 + 8 | 0;
 i4 = 0;
 i6 = 0;
 L1 : while (1) {
  if ((i2 | 0) == (i8 | 0) | i4 >>> 0 >= i9 >>> 0) {
   i1 = 15;
   break;
  }
  i3 = _uselocale(HEAP32[i5 >> 2] | 0) | 0;
  __THREW__ = 0;
  i1 = invoke_iiii(35, i2 | 0, i10 - i2 | 0, i7 | 0) | 0;
  i11 = __THREW__;
  __THREW__ = 0;
  if (i11 & 1) {
   i1 = 7;
   break;
  }
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i11 = __THREW__, __THREW__ = 0, i11 & 1) : 0) {
   i1 = 6;
   break;
  }
  switch (i1 | 0) {
  case -2:
  case -1:
   {
    i1 = 15;
    break L1;
   }
  case 0:
   {
    i2 = i2 + 1 | 0;
    i1 = 1;
    break;
   }
  default:
   i2 = i2 + i1 | 0;
  }
  i4 = i4 + 1 | 0;
  i6 = i1 + i6 | 0;
 }
 if ((i1 | 0) == 6) {
  i11 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i11);
 } else if ((i1 | 0) == 7) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i11 = __THREW__, __THREW__ = 0, i11 & 1) : 0) {
   i11 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i11);
  }
  ___resumeException(i1 | 0);
 } else if ((i1 | 0) == 15) return i6 | 0;
 return 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i5, i6, i1, i2, i9, i10, i11, i3) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 var i4 = 0, i7 = 0, i8 = 0;
 if ((1073741806 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 i7 = i5 + 8 | 0;
 if ((HEAP8[i7 + 3 >> 0] | 0) < 0) i8 = HEAP32[i5 >> 2] | 0; else i8 = i5;
 if (i6 >>> 0 < 536870887) {
  i1 = i1 + i6 | 0;
  i4 = i6 << 1;
  i1 = i1 >>> 0 < i4 >>> 0 ? i4 : i1;
  i1 = i1 >>> 0 < 2 ? 2 : i1 + 4 & -4;
  if (i1 >>> 0 > 1073741823) {
   i11 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev(i11);
   ___cxa_throw(i11 | 0, 1488, 97);
  }
 } else i1 = 1073741807;
 i4 = __Znwj(i1 << 2) | 0;
 if (i9 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj(i4, i8, i9) | 0;
 if (i11 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj(i4 + (i9 << 2) | 0, i3, i11) | 0;
 i2 = i2 - i10 | 0;
 i3 = i2 - i9 | 0;
 if (i3 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj(i4 + (i9 << 2) + (i11 << 2) | 0, i8 + (i9 << 2) + (i10 << 2) | 0, i3) | 0;
 if ((i6 | 0) != 1) __ZdlPv(i8);
 HEAP32[i5 >> 2] = i4;
 HEAP32[i7 >> 2] = i1 | -2147483648;
 i11 = i2 + i11 | 0;
 HEAP32[i5 + 4 >> 2] = i11;
 HEAP32[i4 + (i11 << 2) >> 2] = 0;
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i4, i3, i5, i6) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i2 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i7;
 HEAP32[i6 >> 2] = i3;
 i3 = _uselocale(HEAP32[i1 + 8 >> 2] | 0) | 0;
 __THREW__ = 0;
 i1 = invoke_iiii(33, i2 | 0, 0, i4 | 0) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (i4 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i7 = __THREW__, __THREW__ = 0, i7 & 1) : 0) {
   i7 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i7);
  }
  ___resumeException(i1 | 0);
 }
 if (i3 | 0 ? (__THREW__ = 0, invoke_ii(68, i3 | 0) | 0, i4 = __THREW__, __THREW__ = 0, i4 & 1) : 0) {
  i4 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i4);
 }
 L12 : do switch (i1 | 0) {
 case 0:
 case -1:
  {
   i1 = 2;
   break;
  }
 default:
  {
   i1 = i1 + -1 | 0;
   if (i1 >>> 0 > (i5 - (HEAP32[i6 >> 2] | 0) | 0) >>> 0) i1 = 1; else while (1) {
    if (!i1) {
     i1 = 0;
     break L12;
    }
    i4 = HEAP8[i2 >> 0] | 0;
    i5 = HEAP32[i6 >> 2] | 0;
    HEAP32[i6 >> 2] = i5 + 1;
    HEAP8[i5 >> 0] = i4;
    i2 = i2 + 1 | 0;
    i1 = i1 + -1 | 0;
   }
  }
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function _mbtowc(i1, i6, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i2 = 0, i3 = 0, i5 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i7;
 L1 : do if (!i6) i1 = 0; else {
  do if (i4 | 0) {
   i5 = (i1 | 0) == 0 ? i2 : i1;
   i1 = HEAP8[i6 >> 0] | 0;
   i2 = i1 & 255;
   if (i1 << 24 >> 24 > -1) {
    HEAP32[i5 >> 2] = i2;
    i1 = i1 << 24 >> 24 != 0 & 1;
    break L1;
   }
   i1 = i2 + -194 | 0;
   if (i1 >>> 0 <= 50) {
    i2 = i6 + 1 | 0;
    i3 = HEAP32[1616 + (i1 << 2) >> 2] | 0;
    if (i4 >>> 0 < 4 ? i3 & -2147483648 >>> ((i4 * 6 | 0) + -6 | 0) | 0 : 0) break;
    i1 = HEAPU8[i2 >> 0] | 0;
    i4 = i1 >>> 3;
    if ((i4 + -16 | i4 + (i3 >> 26)) >>> 0 <= 7) {
     i1 = i1 + -128 | i3 << 6;
     if ((i1 | 0) >= 0) {
      HEAP32[i5 >> 2] = i1;
      i1 = 2;
      break L1;
     }
     i2 = (HEAPU8[i6 + 2 >> 0] | 0) + -128 | 0;
     if (i2 >>> 0 <= 63) {
      i2 = i2 | i1 << 6;
      if ((i2 | 0) >= 0) {
       HEAP32[i5 >> 2] = i2;
       i1 = 3;
       break L1;
      }
      i1 = (HEAPU8[i6 + 3 >> 0] | 0) + -128 | 0;
      if (i1 >>> 0 <= 63) {
       HEAP32[i5 >> 2] = i1 | i2 << 6;
       i1 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  i1 = -1;
 } while (0);
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i1, i5, i6, i2, i3, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i10 = i7 + 16 | 0;
 i11 = i7 + 12 | 0;
 i8 = i7;
 i9 = i7 + 8 | 0;
 HEAP32[i11 >> 2] = i10 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i10, i11, i2, i3, i4);
 i4 = i8;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 HEAP32[i9 >> 2] = i10;
 i4 = (HEAP32[i6 >> 2] | 0) - i5 >> 2;
 i2 = _uselocale(HEAP32[i1 >> 2] | 0) | 0;
 __THREW__ = 0;
 i1 = invoke_iiiii(15, i5 | 0, i9 | 0, i4 | 0, i8 | 0) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (i4 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i11 = __THREW__, __THREW__ = 0, i11 & 1) : 0) {
   i11 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i11);
  }
  ___resumeException(i1 | 0);
 }
 if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i11 = __THREW__, __THREW__ = 0, i11 & 1) : 0) {
  i11 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i11);
 }
 if ((i1 | 0) == -1) __ZNSt3__221__throw_runtime_errorEPKc(14660); else {
  HEAP32[i6 >> 2] = i5 + (i1 << 2);
  STACKTOP = i7;
  return;
 }
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_(i10, i6, i9) {
 i10 = i10 | 0;
 i6 = i6 | 0;
 i9 = i9 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0, i11 = 0;
 i3 = i6;
 i1 = i10 + 8 | 0;
 i11 = i1 + 3 | 0;
 i2 = HEAP8[i11 >> 0] | 0;
 if (i2 << 24 >> 24 < 0) {
  i1 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0;
  i8 = HEAP32[i10 + 4 >> 2] | 0;
 } else {
  i1 = 1;
  i8 = i2 & 255;
 }
 i7 = i9 - i3 >> 2;
 do if (i7 | 0) {
  if ((i1 - i8 | 0) >>> 0 < i7 >>> 0) {
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i10, i1, i8 + i7 - i1 | 0, i8, i8, 0, 0);
   i1 = HEAP8[i11 >> 0] | 0;
  } else i1 = i2;
  i5 = i1 << 24 >> 24 < 0;
  if (i5) i4 = HEAP32[i10 >> 2] | 0; else i4 = i10;
  i3 = i8 + ((i9 - i3 | 0) >>> 2) | 0;
  i2 = i4 + (i8 << 2) | 0;
  i1 = i6;
  while (1) {
   if ((i1 | 0) == (i9 | 0)) break;
   HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
   i2 = i2 + 4 | 0;
   i1 = i1 + 4 | 0;
  }
  HEAP32[i4 + (i3 << 2) >> 2] = 0;
  i1 = i8 + i7 | 0;
  if (i5) {
   HEAP32[i10 + 4 >> 2] = i1;
   break;
  } else {
   HEAP8[i11 >> 0] = i1;
   break;
  }
 } while (0);
 return i10 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i6, i1) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i7 = i8;
 i5 = HEAP32[i6 + 8 >> 2] | 0;
 i2 = HEAP32[i6 + 4 >> 2] | 0;
 if (i5 - i2 >> 2 >>> 0 < i1 >>> 0) {
  i4 = HEAP32[i6 >> 2] | 0;
  i2 = i2 - i4 >> 2;
  i3 = i2 + i1 | 0;
  if (i3 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i6);
  i4 = i5 - i4 | 0;
  i5 = i4 >> 1;
  __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i7, i4 >> 2 >>> 0 < 536870911 ? (i5 >>> 0 < i3 >>> 0 ? i3 : i5) : 1073741823, i2, i6 + 16 | 0);
  i3 = i7 + 8 | 0;
  i2 = HEAP32[i3 >> 2] | 0;
  do {
   HEAP32[i2 >> 2] = 0;
   i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
   HEAP32[i3 >> 2] = i2;
   i1 = i1 + -1 | 0;
  } while ((i1 | 0) != 0);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i6, i7);
  __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i7);
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(i6, i1);
 STACKTOP = i8;
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw(i4, i1, i2, i6) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i8;
 i7 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i7;
 __THREW__ = 0;
 i1 = invoke_iii(15, i3 | 0, 18916) | 0;
 i9 = __THREW__;
 __THREW__ = 0;
 if ((!(i9 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 48 >> 2] | 0, i1 | 0, 13558, 13584, i2 | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) ? (__THREW__ = 0, i5 = invoke_iii(15, i3 | 0, 18924) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
  __THREW__ = 0;
  i1 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0;
  i9 = __THREW__;
  __THREW__ = 0;
  if (!(i9 & 1) ? (HEAP32[i6 >> 2] = i1, __THREW__ = 0, invoke_vii(HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] | 0, i4 | 0, i5 | 0), i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i7) | 0;
   STACKTOP = i8;
   return;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else i1 = ___cxa_find_matching_catch_2() | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(i7) | 0;
 ___resumeException(i1 | 0);
}

function __ZNSt3__212system_errorC2ENS_10error_codeEPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i4 = i5 + 12 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i6, i3, _strlen(i3) | 0);
 __THREW__ = 0;
 invoke_viii(11, i4 | 0, i2 | 0, i6 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 do if (!(i3 & 1)) {
  __THREW__ = 0;
  invoke_vii(84, i1 | 0, i4 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
   break;
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
   HEAP32[i1 >> 2] = 8796;
   i3 = i2;
   i4 = HEAP32[i3 + 4 >> 2] | 0;
   i6 = i1 + 8 | 0;
   HEAP32[i6 >> 2] = HEAP32[i3 >> 2];
   HEAP32[i6 + 4 >> 2] = i4;
   STACKTOP = i5;
   return;
  }
 } else i1 = ___cxa_find_matching_catch_2() | 0; while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i6);
 ___resumeException(i1 | 0);
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc(i4, i1, i2, i6) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i3 = 0, i5 = 0, i7 = 0, i8 = 0, i9 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i8;
 i7 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i7;
 __THREW__ = 0;
 i1 = invoke_iii(15, i3 | 0, 18884) | 0;
 i9 = __THREW__;
 __THREW__ = 0;
 if ((!(i9 & 1) ? (__THREW__ = 0, invoke_iiiii(HEAP32[(HEAP32[i1 >> 2] | 0) + 32 >> 2] | 0, i1 | 0, 13558, 13584, i2 | 0) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) ? (__THREW__ = 0, i5 = invoke_iii(15, i3 | 0, 18900) | 0, i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
  __THREW__ = 0;
  i1 = invoke_ii(HEAP32[(HEAP32[i5 >> 2] | 0) + 16 >> 2] | 0, i5 | 0) | 0;
  i9 = __THREW__;
  __THREW__ = 0;
  if (!(i9 & 1) ? (HEAP8[i6 >> 0] = i1, __THREW__ = 0, invoke_vii(HEAP32[(HEAP32[i5 >> 2] | 0) + 20 >> 2] | 0, i4 | 0, i5 | 0), i9 = __THREW__, __THREW__ = 0, !(i9 & 1)) : 0) {
   __ZNSt3__214__shared_count16__release_sharedEv(i7) | 0;
   STACKTOP = i8;
   return;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
 } else i1 = ___cxa_find_matching_catch_2() | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(i7) | 0;
 ___resumeException(i1 | 0);
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj(i5, i1, i6, i9) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 i9 = i9 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i10 = 0, i11 = 0;
 i8 = HEAP8[i5 + 11 >> 0] | 0;
 i7 = i8 << 24 >> 24 < 0;
 i4 = i5 + 4 | 0;
 i2 = HEAP32[i4 >> 2] | 0;
 i8 = i8 & 255;
 do if ((i7 ? i2 : i8) | 0) {
  if ((i1 | 0) != (i6 | 0)) {
   i2 = i6;
   i3 = i1;
   while (1) {
    i2 = i2 + -4 | 0;
    if (i3 >>> 0 >= i2 >>> 0) break;
    i11 = HEAP32[i3 >> 2] | 0;
    HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
    HEAP32[i2 >> 2] = i11;
    i3 = i3 + 4 | 0;
   }
   i2 = HEAP32[i4 >> 2] | 0;
  }
  i11 = i7 ? HEAP32[i5 >> 2] | 0 : i5;
  i6 = i6 + -4 | 0;
  i5 = i11 + (i7 ? i2 : i8) | 0;
  i2 = i11;
  while (1) {
   i3 = HEAP8[i2 >> 0] | 0;
   i4 = i3 << 24 >> 24 > 0 & i3 << 24 >> 24 != 127;
   if (i1 >>> 0 >= i6 >>> 0) break;
   if (i4 ? (i3 << 24 >> 24 | 0) != (HEAP32[i1 >> 2] | 0) : 0) {
    i10 = 10;
    break;
   }
   i1 = i1 + 4 | 0;
   i2 = (i5 - i2 | 0) > 1 ? i2 + 1 | 0 : i2;
  }
  if ((i10 | 0) == 10) {
   HEAP32[i9 >> 2] = 4;
   break;
  }
  if (i4 ? ((HEAP32[i6 >> 2] | 0) + -1 | 0) >>> 0 >= i3 << 24 >> 24 >>> 0 : 0) HEAP32[i9 >> 2] = 4;
 } while (0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i10, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i11 + 4 | 0;
 i9 = i11;
 i3 = i1 + 8 | 0;
 i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3) | 0;
 i1 = HEAP8[i3 + 8 + 3 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i2 = HEAP32[i3 + 4 >> 2] | 0; else i2 = i1 & 255;
 i1 = HEAP8[i3 + 20 + 3 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i1 = HEAP32[i3 + 16 >> 2] | 0; else i1 = i1 & 255;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i4, i3, i3 + 24 | 0, i8, i7, 0) | 0) - i3 | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i2 | 0) == 12 & (i1 | 0) == 0) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i10, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i10 = i10 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i9 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i11 + 4 | 0;
 i9 = i11;
 i3 = i1 + 8 | 0;
 i3 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 8 >> 2] & 127](i3) | 0;
 i1 = HEAP8[i3 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i2 = HEAP32[i3 + 4 >> 2] | 0; else i2 = i1 & 255;
 i1 = HEAP8[i3 + 12 + 11 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) i1 = HEAP32[i3 + 16 >> 2] | 0; else i1 = i1 & 255;
 do if ((i2 | 0) != (0 - i1 | 0)) {
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i4 >> 2] = HEAP32[i9 >> 2];
  i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i5, i4, i3, i3 + 24 | 0, i8, i7, 0) | 0) - i3 | 0;
  i2 = HEAP32[i10 >> 2] | 0;
  if ((i2 | 0) == 12 & (i1 | 0) == 0) {
   HEAP32[i10 >> 2] = 0;
   break;
  }
  if ((i2 | 0) < 12 & (i1 | 0) == 12) HEAP32[i10 >> 2] = i2 + 12;
 } else HEAP32[i7 >> 2] = HEAP32[i7 >> 2] | 4; while (0);
 STACKTOP = i11;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_(i9, i5, i8) {
 i9 = i9 | 0;
 i5 = i5 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i6 = 0, i7 = 0, i10 = 0;
 i3 = i5;
 i10 = i9 + 11 | 0;
 i1 = HEAP8[i10 >> 0] | 0;
 if (i1 << 24 >> 24 < 0) {
  i2 = (HEAP32[i9 + 8 >> 2] & 2147483647) + -1 | 0;
  i7 = HEAP32[i9 + 4 >> 2] | 0;
 } else {
  i2 = 10;
  i7 = i1 & 255;
 }
 i6 = i8 - i3 | 0;
 do if (i6 | 0) {
  if ((i2 - i7 | 0) >>> 0 < i6 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i9, i2, i7 + i6 - i2 | 0, i7, i7, 0, 0);
   i1 = HEAP8[i10 >> 0] | 0;
  }
  if (i1 << 24 >> 24 < 0) i4 = HEAP32[i9 >> 2] | 0; else i4 = i9;
  i3 = i8 + (i7 - i3) | 0;
  i2 = i4 + i7 | 0;
  i1 = i5;
  while (1) {
   if ((i1 | 0) == (i8 | 0)) break;
   HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
   i2 = i2 + 1 | 0;
   i1 = i1 + 1 | 0;
  }
  HEAP8[i4 + i3 >> 0] = 0;
  i1 = i7 + i6 | 0;
  if ((HEAP8[i10 >> 0] | 0) < 0) {
   HEAP32[i9 + 4 >> 2] = i1;
   break;
  } else {
   HEAP8[i10 >> 0] = i1;
   break;
  }
 } while (0);
 return i9 | 0;
}

function __ZL25default_terminate_handlerv() {
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 i7 = i5 + 32 | 0;
 i3 = i5 + 24 | 0;
 i8 = i5 + 16 | 0;
 i6 = i5;
 i5 = i5 + 36 | 0;
 i1 = ___cxa_get_globals_fast() | 0;
 if (i1 | 0 ? (i4 = HEAP32[i1 >> 2] | 0, i4 | 0) : 0) {
  i1 = i4 + 48 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  i1 = HEAP32[i1 + 4 >> 2] | 0;
  if (!((i2 & -256 | 0) == 1126902528 & (i1 | 0) == 1129074247)) {
   HEAP32[i3 >> 2] = HEAP32[2203];
   _abort_message(15944, i3);
  }
  if ((i2 | 0) == 1126902529 & (i1 | 0) == 1129074247) i1 = HEAP32[i4 + 44 >> 2] | 0; else i1 = i4 + 80 | 0;
  HEAP32[i5 >> 2] = i1;
  i4 = HEAP32[i4 >> 2] | 0;
  i1 = HEAP32[i4 + 4 >> 2] | 0;
  if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[356] | 0) + 16 >> 2] & 63](1424, i4, i5) | 0) {
   i8 = HEAP32[i5 >> 2] | 0;
   i5 = HEAP32[2203] | 0;
   i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i8 >> 2] | 0) + 8 >> 2] & 127](i8) | 0;
   HEAP32[i6 >> 2] = i5;
   HEAP32[i6 + 4 >> 2] = i1;
   HEAP32[i6 + 8 >> 2] = i8;
   _abort_message(15858, i6);
  } else {
   HEAP32[i8 >> 2] = HEAP32[2203];
   HEAP32[i8 + 4 >> 2] = i1;
   _abort_message(15903, i8);
  }
 }
 _abort_message(15982, i7);
}

function _memchr(i2, i5, i1) {
 i2 = i2 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i3 = 0, i4 = 0, i6 = 0, i7 = 0;
 i6 = i5 & 255;
 i3 = (i1 | 0) != 0;
 L1 : do if (i3 & (i2 & 3 | 0) != 0) {
  i4 = i5 & 255;
  while (1) {
   if ((HEAP8[i2 >> 0] | 0) == i4 << 24 >> 24) {
    i7 = 6;
    break L1;
   }
   i2 = i2 + 1 | 0;
   i1 = i1 + -1 | 0;
   i3 = (i1 | 0) != 0;
   if (!(i3 & (i2 & 3 | 0) != 0)) {
    i7 = 5;
    break;
   }
  }
 } else i7 = 5; while (0);
 if ((i7 | 0) == 5) if (i3) i7 = 6; else i1 = 0;
 L8 : do if ((i7 | 0) == 6) {
  i4 = i5 & 255;
  if ((HEAP8[i2 >> 0] | 0) != i4 << 24 >> 24) {
   i3 = Math_imul(i6, 16843009) | 0;
   L11 : do if (i1 >>> 0 > 3) while (1) {
    i6 = HEAP32[i2 >> 2] ^ i3;
    if ((i6 & -2139062144 ^ -2139062144) & i6 + -16843009 | 0) break;
    i2 = i2 + 4 | 0;
    i1 = i1 + -4 | 0;
    if (i1 >>> 0 <= 3) {
     i7 = 11;
     break L11;
    }
   } else i7 = 11; while (0);
   if ((i7 | 0) == 11) if (!i1) {
    i1 = 0;
    break;
   }
   while (1) {
    if ((HEAP8[i2 >> 0] | 0) == i4 << 24 >> 24) break L8;
    i2 = i2 + 1 | 0;
    i1 = i1 + -1 | 0;
    if (!i1) {
     i1 = 0;
     break;
    }
   }
  }
 } while (0);
 return (i1 | 0 ? i2 : 0) | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 do if (((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  __THREW__ = 0;
  i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i2 | 0) | 0;
  i3 = __THREW__;
  __THREW__ = 0;
  if (!(i3 & 1)) {
   if ((i2 | 0) != -1) break;
   i3 = HEAP32[i1 >> 2] | 0;
   i3 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(41, i3 | 0, HEAP32[i3 + 16 >> 2] | 1 | 0);
   i3 = __THREW__;
   __THREW__ = 0;
   if (!(i3 & 1)) break;
  }
  i3 = ___cxa_find_matching_catch_3(0) | 0;
  ___cxa_begin_catch(i3 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  }
 } while (0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = i1 + 4 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 i2 = i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 do if (((HEAP32[i2 + 24 >> 2] | 0 ? (HEAP32[i2 + 16 >> 2] | 0) == 0 : 0) ? HEAP32[i2 + 4 >> 2] & 8192 | 0 : 0) ? !(__ZSt18uncaught_exceptionv() | 0) : 0) {
  i2 = HEAP32[i1 >> 2] | 0;
  i2 = HEAP32[i2 + (HEAP32[(HEAP32[i2 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  __THREW__ = 0;
  i2 = invoke_ii(HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] | 0, i2 | 0) | 0;
  i3 = __THREW__;
  __THREW__ = 0;
  if (!(i3 & 1)) {
   if ((i2 | 0) != -1) break;
   i3 = HEAP32[i1 >> 2] | 0;
   i3 = i3 + (HEAP32[(HEAP32[i3 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __THREW__ = 0;
   invoke_vii(41, i3 | 0, HEAP32[i3 + 16 >> 2] | 1 | 0);
   i3 = __THREW__;
   __THREW__ = 0;
   if (!(i3 & 1)) break;
  }
  i3 = ___cxa_find_matching_catch_3(0) | 0;
  ___cxa_begin_catch(i3 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  }
 } while (0);
 return;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 if (i2 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i2 & 1024) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 i7 = i2 & 260;
 i4 = i2 >>> 14;
 i6 = (i7 | 0) == 260;
 if (i6) i5 = 0; else {
  HEAP8[i1 >> 0] = 46;
  HEAP8[i1 + 1 >> 0] = 42;
  i5 = 1;
  i1 = i1 + 2 | 0;
 }
 while (1) {
  i2 = HEAP8[i3 >> 0] | 0;
  if (!(i2 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L14 : do switch (i7 & 511) {
 case 4:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 102;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 70;
   break L14;
  }
 case 256:
  if (!(i4 & 1)) {
   HEAP8[i1 >> 0] = 101;
   break L14;
  } else {
   HEAP8[i1 >> 0] = 69;
   break L14;
  }
 default:
  {
   i2 = (i4 & 1 | 0) != 0;
   if (i6) if (i2) {
    HEAP8[i1 >> 0] = 65;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 97;
    break L14;
   } else if (i2) {
    HEAP8[i1 >> 0] = 71;
    break L14;
   } else {
    HEAP8[i1 >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return i5 | 0;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoll_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  L7 : do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
   do if ((i3 | 0) == 34) {
    HEAP32[i5 >> 2] = 4;
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0) {
     i1 = 2147483647;
     break L7;
    }
   } else {
    if ((i2 | 0) < -1 | (i2 | 0) == -1 & i1 >>> 0 < 2147483648) {
     HEAP32[i5 >> 2] = 4;
     break;
    }
    if ((i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 2147483647) {
     HEAP32[i5 >> 2] = 4;
     i1 = 2147483647;
     break L7;
    } else break L7;
   } while (0);
   i1 = -2147483648;
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 }
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i4, i5, i1, i2, i7, i8, i9) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i6 = 0, i10 = 0;
 if ((1073741807 - i5 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i4);
 i10 = i4 + 8 | 0;
 if ((HEAP8[i10 + 3 >> 0] | 0) < 0) i6 = HEAP32[i4 >> 2] | 0; else i6 = i4;
 if (i5 >>> 0 < 536870887) {
  i1 = i1 + i5 | 0;
  i3 = i5 << 1;
  i1 = i1 >>> 0 < i3 >>> 0 ? i3 : i1;
  i1 = i1 >>> 0 < 2 ? 2 : i1 + 4 & -4;
  if (i1 >>> 0 > 1073741823) {
   i10 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev(i10);
   ___cxa_throw(i10 | 0, 1488, 97);
  }
 } else i1 = 1073741807;
 i3 = __Znwj(i1 << 2) | 0;
 if (i7 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj(i3, i6, i7) | 0;
 i2 = i2 - i8 - i7 | 0;
 if (i2 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwj(i3 + (i7 << 2) + (i9 << 2) | 0, i6 + (i7 << 2) + (i8 << 2) | 0, i2) | 0;
 if ((i5 | 0) != 1) __ZdlPv(i6);
 HEAP32[i4 >> 2] = i3;
 HEAP32[i10 >> 2] = i1 | -2147483648;
 return;
}

function ___fwritex(i3, i5, i6) {
 i3 = i3 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i7 = 0;
 i1 = i6 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!i2) if (!(___towrite(i6) | 0)) {
  i1 = HEAP32[i1 >> 2] | 0;
  i4 = 5;
 } else i1 = 0; else {
  i1 = i2;
  i4 = 5;
 }
 L5 : do if ((i4 | 0) == 5) {
  i7 = i6 + 20 | 0;
  i4 = HEAP32[i7 >> 2] | 0;
  i2 = i4;
  if ((i1 - i4 | 0) >>> 0 < i5 >>> 0) {
   i1 = FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 63](i6, i3, i5) | 0;
   break;
  }
  L10 : do if ((HEAP8[i6 + 75 >> 0] | 0) > -1) {
   i1 = i5;
   while (1) {
    if (!i1) {
     i4 = i5;
     i1 = 0;
     break L10;
    }
    i4 = i1 + -1 | 0;
    if ((HEAP8[i3 + i4 >> 0] | 0) == 10) break; else i1 = i4;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[i6 + 36 >> 2] & 63](i6, i3, i1) | 0) >>> 0 < i1 >>> 0) break L5;
   i4 = i5 - i1 | 0;
   i3 = i3 + i1 | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  } else {
   i4 = i5;
   i1 = 0;
  } while (0);
  _memcpy(i2 | 0, i3 | 0, i4 | 0) | 0;
  HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + i4;
  i1 = i1 + i4 | 0;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i7, i1, i2, i9, i10, i11, i3) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i8 = 0;
 if ((-18 - i7 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i6);
 if ((HEAP8[i6 + 11 >> 0] | 0) < 0) i8 = HEAP32[i6 >> 2] | 0; else i8 = i6;
 if (i7 >>> 0 < 2147483623) {
  i4 = i1 + i7 | 0;
  i5 = i7 << 1;
  i4 = i4 >>> 0 < i5 >>> 0 ? i5 : i4;
  i4 = i4 >>> 0 < 11 ? 11 : i4 + 16 & -16;
 } else i4 = -17;
 i5 = __Znwj(i4) | 0;
 if (i9 | 0) _memcpy(i5 | 0, i8 | 0, i9 | 0) | 0;
 if (i11 | 0) _memcpy(i5 + i9 | 0, i3 | 0, i11 | 0) | 0;
 i1 = i2 - i10 | 0;
 i2 = i1 - i9 | 0;
 if (i2 | 0) _memcpy(i5 + i9 + i11 | 0, i8 + i9 + i10 | 0, i2 | 0) | 0;
 if ((i7 | 0) != 10) __ZdlPv(i8);
 HEAP32[i6 >> 2] = i5;
 HEAP32[i6 + 8 >> 2] = i4 | -2147483648;
 i11 = i1 + i11 | 0;
 HEAP32[i6 + 4 >> 2] = i11;
 HEAP8[i5 + i11 >> 0] = 0;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEESL_RKT_(i1, i5, i3) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 var i2 = 0, i4 = 0;
 i2 = i1 + 4 | 0;
 i1 = HEAP32[i2 >> 2] | 0;
 do if (i1) {
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   i2 = HEAP32[i1 + 16 >> 2] | 0;
   if ((_strcmp(i4, i2) | 0) < 0) {
    i2 = HEAP32[i1 >> 2] | 0;
    if (!i2) {
     i2 = 5;
     break;
    } else i1 = i2;
   } else {
    if ((_strcmp(i2, i4) | 0) >= 0) {
     i2 = 10;
     break;
    }
    i3 = i1 + 4 | 0;
    i2 = HEAP32[i3 >> 2] | 0;
    if (!i2) {
     i2 = 9;
     break;
    } else i1 = i2;
   }
  }
  if ((i2 | 0) == 5) {
   HEAP32[i5 >> 2] = i1;
   break;
  } else if ((i2 | 0) == 9) {
   HEAP32[i5 >> 2] = i1;
   i1 = i3;
   break;
  } else if ((i2 | 0) == 10) {
   HEAP32[i5 >> 2] = i1;
   i1 = i5;
   break;
  }
 } else {
  HEAP32[i5 >> 2] = i2;
  i1 = i2;
 } while (0);
 return i1 | 0;
}

function _vsnprintf(i2, i1, i8, i9) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i10 = 0, i11 = 0;
 i11 = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 i3 = i11 + 112 | 0;
 i10 = i11;
 i4 = i10;
 i5 = 2172;
 i6 = i4 + 112 | 0;
 do {
  HEAP32[i4 >> 2] = HEAP32[i5 >> 2];
  i4 = i4 + 4 | 0;
  i5 = i5 + 4 | 0;
 } while ((i4 | 0) < (i6 | 0));
 if ((i1 + -1 | 0) >>> 0 > 2147483646) if (!i1) {
  i2 = i3;
  i1 = 1;
  i7 = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  i1 = -1;
 } else i7 = 4;
 if ((i7 | 0) == 4) {
  i7 = -2 - i2 | 0;
  i7 = i1 >>> 0 > i7 >>> 0 ? i7 : i1;
  HEAP32[i10 + 48 >> 2] = i7;
  i3 = i10 + 20 | 0;
  HEAP32[i3 >> 2] = i2;
  HEAP32[i10 + 44 >> 2] = i2;
  i1 = i2 + i7 | 0;
  i2 = i10 + 16 | 0;
  HEAP32[i2 >> 2] = i1;
  HEAP32[i10 + 28 >> 2] = i1;
  i1 = _vfprintf(i10, i8, i9) | 0;
  if (i7) {
   i10 = HEAP32[i3 >> 2] | 0;
   HEAP8[i10 + (((i10 | 0) == (HEAP32[i2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
  }
 }
 STACKTOP = i11;
 return i1 | 0;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = i3 + 4 | 0;
 i1 = (HEAP32[i9 >> 2] | 0) != 122;
 i6 = HEAP32[i3 >> 2] | 0;
 i2 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i2 = i2 >>> 0 < 2147483647 ? i2 << 1 : -1;
 i2 = (i2 | 0) == 0 ? 4 : i2;
 i5 = (HEAP32[i4 >> 2] | 0) - i6 >> 2;
 i6 = _realloc(i1 ? i6 : 0, i2) | 0;
 if (!i6) __ZSt17__throw_bad_allocv();
 do if (!i1) {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i6;
  if (i1) {
   __THREW__ = 0;
   invoke_vi(HEAP32[i9 >> 2] | 0, i1 | 0);
   i6 = __THREW__;
   __THREW__ = 0;
   if (i6 & 1) {
    i6 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i6);
   } else {
    i8 = HEAP32[i3 >> 2] | 0;
    break;
   }
  } else i8 = i6;
 } else {
  HEAP32[i3 >> 2] = i6;
  i8 = i6;
 } while (0);
 HEAP32[i9 >> 2] = 124;
 HEAP32[i4 >> 2] = i8 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + (i2 >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = i3 + 4 | 0;
 i1 = (HEAP32[i9 >> 2] | 0) != 122;
 i6 = HEAP32[i3 >> 2] | 0;
 i2 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i2 = i2 >>> 0 < 2147483647 ? i2 << 1 : -1;
 i2 = (i2 | 0) == 0 ? 4 : i2;
 i5 = (HEAP32[i4 >> 2] | 0) - i6 >> 2;
 i6 = _realloc(i1 ? i6 : 0, i2) | 0;
 if (!i6) __ZSt17__throw_bad_allocv();
 do if (!i1) {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i6;
  if (i1) {
   __THREW__ = 0;
   invoke_vi(HEAP32[i9 >> 2] | 0, i1 | 0);
   i6 = __THREW__;
   __THREW__ = 0;
   if (i6 & 1) {
    i6 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i6);
   } else {
    i8 = HEAP32[i3 >> 2] | 0;
    break;
   }
  } else i8 = i6;
 } else {
  HEAP32[i3 >> 2] = i6;
  i8 = i6;
 } while (0);
 HEAP32[i9 >> 2] = 124;
 HEAP32[i4 >> 2] = i8 + (i5 << 2);
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + (i2 >>> 2 << 2);
 return;
}

function _memset(i5, i6, i4) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i3 = i5 + i4 | 0;
 i6 = i6 & 255;
 if ((i4 | 0) >= 67) {
  while (i5 & 3) {
   HEAP8[i5 >> 0] = i6;
   i5 = i5 + 1 | 0;
  }
  i1 = i3 & -4 | 0;
  i2 = i1 - 64 | 0;
  i7 = i6 | i6 << 8 | i6 << 16 | i6 << 24;
  while ((i5 | 0) <= (i2 | 0)) {
   HEAP32[i5 >> 2] = i7;
   HEAP32[i5 + 4 >> 2] = i7;
   HEAP32[i5 + 8 >> 2] = i7;
   HEAP32[i5 + 12 >> 2] = i7;
   HEAP32[i5 + 16 >> 2] = i7;
   HEAP32[i5 + 20 >> 2] = i7;
   HEAP32[i5 + 24 >> 2] = i7;
   HEAP32[i5 + 28 >> 2] = i7;
   HEAP32[i5 + 32 >> 2] = i7;
   HEAP32[i5 + 36 >> 2] = i7;
   HEAP32[i5 + 40 >> 2] = i7;
   HEAP32[i5 + 44 >> 2] = i7;
   HEAP32[i5 + 48 >> 2] = i7;
   HEAP32[i5 + 52 >> 2] = i7;
   HEAP32[i5 + 56 >> 2] = i7;
   HEAP32[i5 + 60 >> 2] = i7;
   i5 = i5 + 64 | 0;
  }
  while ((i5 | 0) < (i1 | 0)) {
   HEAP32[i5 >> 2] = i7;
   i5 = i5 + 4 | 0;
  }
 }
 while ((i5 | 0) < (i3 | 0)) {
  HEAP8[i5 >> 0] = i6;
  i5 = i5 + 1 | 0;
 }
 return i3 - i4 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18916) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i4, i8 + 16 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18916) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i4, i8 + 24 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18884) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i4, i8 + 16 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18884) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i4, i8 + 24 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18916) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i4, i8 + 20 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm(i4, i5, i6, i1, i7, i8) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i2 = 0, i3 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 4 | 0;
 i9 = i10;
 i1 = __ZNKSt3__28ios_base6getlocEv(i1) | 0;
 HEAP32[i3 >> 2] = i1;
 __THREW__ = 0;
 i2 = invoke_iii(15, i3 | 0, 18884) | 0;
 i11 = __THREW__;
 __THREW__ = 0;
 if (i11 & 1) {
  i11 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  ___resumeException(i11 | 0);
 } else {
  __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  HEAP32[i9 >> 2] = HEAP32[i6 >> 2];
  HEAP32[i3 >> 2] = HEAP32[i9 >> 2];
  __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i4, i8 + 20 | 0, i5, i3, i7, i2);
  STACKTOP = i10;
  return HEAP32[i5 >> 2] | 0;
 }
 return 0;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_(i3, i4, i7) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i5 = 0, i6 = 0, i8 = 0, i9 = 0;
 i9 = i3 + 4 | 0;
 i1 = (HEAP32[i9 >> 2] | 0) != 122;
 i6 = HEAP32[i3 >> 2] | 0;
 i2 = (HEAP32[i7 >> 2] | 0) - i6 | 0;
 i2 = i2 >>> 0 < 2147483647 ? i2 << 1 : -1;
 i2 = (i2 | 0) == 0 ? 1 : i2;
 i5 = (HEAP32[i4 >> 2] | 0) - i6 | 0;
 i6 = _realloc(i1 ? i6 : 0, i2) | 0;
 if (!i6) __ZSt17__throw_bad_allocv();
 do if (!i1) {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i3 >> 2] = i6;
  if (i1) {
   __THREW__ = 0;
   invoke_vi(HEAP32[i9 >> 2] | 0, i1 | 0);
   i6 = __THREW__;
   __THREW__ = 0;
   if (i6 & 1) {
    i6 = ___cxa_find_matching_catch_3(0) | 0;
    ___clang_call_terminate(i6);
   } else {
    i8 = HEAP32[i3 >> 2] | 0;
    break;
   }
  } else i8 = i6;
 } else {
  HEAP32[i3 >> 2] = i6;
  i8 = i6;
 } while (0);
 HEAP32[i9 >> 2] = 124;
 HEAP32[i4 >> 2] = i8 + i5;
 HEAP32[i7 >> 2] = (HEAP32[i3 >> 2] | 0) + i2;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i1 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i12 + 8 + 3 >> 0] | 0;
 i13 = i3 << 24 >> 24 < 0;
 i2 = i13 ? HEAP32[i12 >> 2] | 0 : i12;
 i3 = i2 + ((i13 ? HEAP32[i12 + 4 >> 2] | 0 : i3 & 255) << 2) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, i2, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0, i12 = 0, i13 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 i12 = i1 + 8 | 0;
 i12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i12 >> 2] | 0) + 20 >> 2] & 127](i12) | 0;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 i3 = HEAP8[i12 + 11 >> 0] | 0;
 i13 = i3 << 24 >> 24 < 0;
 i2 = i13 ? HEAP32[i12 >> 2] | 0 : i12;
 i3 = i2 + (i13 ? HEAP32[i12 + 4 >> 2] | 0 : i3 & 255) | 0;
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, i2, i3) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc(i3, i7, i1, i2, i4, i5, i6) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i1 = i8 + 4 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i3 + 8 | 0, i1, i2, i4, i5, i6);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP8[i5 >> 0] | 0;
  do if (i1) {
   i3 = i1 + 24 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) {
    i7 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i2 & 255) | 0) == -1;
    i1 = i7 ? 0 : i1;
    break;
   } else {
    HEAP32[i3 >> 2] = i4 + 1;
    HEAP8[i4 >> 0] = i2;
    break;
   }
  } else i1 = 0; while (0);
  i5 = i5 + 1 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i2, i1, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i5 = i1;
 i4 = i6 - i5 >> 2;
 if (i4 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 do if (i4 >>> 0 >= 2) {
  i3 = i4 + 4 & -4;
  if (i3 >>> 0 > 1073741823) {
   i6 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev(i6);
   ___cxa_throw(i6 | 0, 1488, 97);
  } else {
   i7 = __Znwj(i3 << 2) | 0;
   HEAP32[i2 >> 2] = i7;
   HEAP32[i2 + 8 >> 2] = i3 | -2147483648;
   HEAP32[i2 + 4 >> 2] = i4;
   i4 = i7;
   break;
  }
 } else {
  HEAP8[i2 + 8 + 3 >> 0] = i4;
  i4 = i2;
 } while (0);
 i3 = (i6 - i5 | 0) >>> 2;
 i2 = i4;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP32[i2 >> 2] = HEAP32[i1 >> 2];
  i1 = i1 + 4 | 0;
  i2 = i2 + 4 | 0;
 }
 HEAP32[i4 + (i3 << 2) >> 2] = 0;
 return;
}

function ___shgetc(i6) {
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i2 = i6 + 104 | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 if ((i5 | 0) != 0 ? (HEAP32[i6 + 108 >> 2] | 0) >= (i5 | 0) : 0) i7 = 4; else {
  i1 = ___uflow(i6) | 0;
  if ((i1 | 0) >= 0) {
   i2 = HEAP32[i2 >> 2] | 0;
   i5 = HEAP32[i6 + 8 >> 2] | 0;
   if (i2) {
    i4 = HEAP32[i6 + 4 >> 2] | 0;
    i2 = i2 - (HEAP32[i6 + 108 >> 2] | 0) | 0;
    i3 = i5;
    if ((i5 - i4 | 0) < (i2 | 0)) i7 = 9; else HEAP32[i6 + 100 >> 2] = i4 + (i2 + -1);
   } else {
    i3 = i5;
    i7 = 9;
   }
   if ((i7 | 0) == 9) HEAP32[i6 + 100 >> 2] = i5;
   i2 = i6 + 4 | 0;
   if (!i3) i2 = HEAP32[i2 >> 2] | 0; else {
    i2 = HEAP32[i2 >> 2] | 0;
    i6 = i6 + 108 | 0;
    HEAP32[i6 >> 2] = i3 + 1 - i2 + (HEAP32[i6 >> 2] | 0);
   }
   i2 = i2 + -1 | 0;
   if ((HEAPU8[i2 >> 0] | 0 | 0) != (i1 | 0)) HEAP8[i2 >> 0] = i1;
  } else i7 = 4;
 }
 if ((i7 | 0) == 4) {
  HEAP32[i6 + 100 >> 2] = 0;
  i1 = -1;
 }
 return i1 | 0;
}

function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc(i3, i7, i1, i2, i4, i5, i6) {
 i3 = i3 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 i1 = i8 + 8 | 0;
 i2 = i8;
 HEAP32[i2 >> 2] = i1 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc(i3 + 8 | 0, i1, i2, i4, i5, i6);
 i6 = HEAP32[i2 >> 2] | 0;
 i5 = i1;
 i1 = HEAP32[i7 >> 2] | 0;
 while (1) {
  if ((i5 | 0) == (i6 | 0)) break;
  i2 = HEAP32[i5 >> 2] | 0;
  if (!i1) i1 = 0; else {
   i3 = i1 + 24 | 0;
   i4 = HEAP32[i3 >> 2] | 0;
   if ((i4 | 0) == (HEAP32[i1 + 28 >> 2] | 0)) i2 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[i1 >> 2] | 0) + 52 >> 2] & 31](i1, i2) | 0; else {
    HEAP32[i3 >> 2] = i4 + 4;
    HEAP32[i4 >> 2] = i2;
   }
   i1 = (i2 | 0) == -1 ? 0 : i1;
  }
  i5 = i5 + 4 | 0;
 }
 STACKTOP = i8;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 65535 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else {
   i1 = i1 & 65535;
   break;
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16648] | 0) == 0 ? ___cxa_guard_acquire(16648) | 0 : 0) {
  if ((HEAP8[16656] | 0) == 0 ? ___cxa_guard_acquire(16656) | 0 : 0) {
   i2 = 19004;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 19292);
   ___cxa_atexit(115, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(18, 19004, 14076) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_iii(18, 19016, 14079) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   HEAP32[4823] = 19004;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[4823] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16728] | 0) == 0 ? ___cxa_guard_acquire(16728) | 0 : 0) {
  if ((HEAP8[16736] | 0) == 0 ? ___cxa_guard_acquire(16736) | 0 : 0) {
   i2 = 19816;
   do {
    HEAP32[i2 >> 2] = 0;
    HEAP32[i2 + 4 >> 2] = 0;
    HEAP32[i2 + 8 >> 2] = 0;
    i1 = 0;
    while (1) {
     if ((i1 | 0) == 3) break;
     HEAP32[i2 + (i1 << 2) >> 2] = 0;
     i1 = i1 + 1 | 0;
    }
    i2 = i2 + 12 | 0;
   } while ((i2 | 0) != 20104);
   ___cxa_atexit(119, 0, ___dso_handle | 0) | 0;
  }
  __THREW__ = 0;
  invoke_iii(19, 19816, 6692) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_iii(19, 19828, 6704) | 0, i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   HEAP32[5026] = 19816;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return HEAP32[5026] | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(i1, i5, i3, i2, i4) {
 i1 = i1 | 0;
 i5 = i5 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 HEAP8[i5 + 53 >> 0] = 1;
 do if ((HEAP32[i5 + 4 >> 2] | 0) == (i2 | 0)) {
  HEAP8[i5 + 52 >> 0] = 1;
  i1 = i5 + 16 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) {
   HEAP32[i1 >> 2] = i3;
   HEAP32[i5 + 24 >> 2] = i4;
   HEAP32[i5 + 36 >> 2] = 1;
   if (!((i4 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  if ((i2 | 0) != (i3 | 0)) {
   i4 = i5 + 36 | 0;
   HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
   HEAP8[i5 + 54 >> 0] = 1;
   break;
  }
  i2 = i5 + 24 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  if ((i1 | 0) == 2) {
   HEAP32[i2 >> 2] = i4;
   i1 = i4;
  }
  if ((i1 | 0) == 1 ? (HEAP32[i5 + 48 >> 2] | 0) == 1 : 0) HEAP8[i5 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5 + 4 | 0;
 i4 = i5;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i2);
 HEAP32[i2 >> 2] = 5776;
 HEAP32[i2 + 32 >> 2] = i1;
 __ZNSt3__26localeC2ERKS0_(i6, i2 + 4 | 0);
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __THREW__ = 0;
 i1 = invoke_iii(15, i4 | 0, 20684) | 0;
 i6 = __THREW__;
 __THREW__ = 0;
 if (i6 & 1) {
  i6 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i2);
  ___resumeException(i6 | 0);
 } else {
  __ZNSt3__26localeD2Ev(i4);
  HEAP32[i2 + 36 >> 2] = i1;
  HEAP32[i2 + 40 >> 2] = i3;
  HEAP8[i2 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
  STACKTOP = i5;
  return;
 }
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5 + 4 | 0;
 i4 = i5;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i2);
 HEAP32[i2 >> 2] = 5840;
 HEAP32[i2 + 32 >> 2] = i1;
 __ZNSt3__26localeC2ERKS0_(i6, i2 + 4 | 0);
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __THREW__ = 0;
 i1 = invoke_iii(15, i4 | 0, 20676) | 0;
 i6 = __THREW__;
 __THREW__ = 0;
 if (i6 & 1) {
  i6 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i2);
  ___resumeException(i6 | 0);
 } else {
  __ZNSt3__26localeD2Ev(i4);
  HEAP32[i2 + 36 >> 2] = i1;
  HEAP32[i2 + 40 >> 2] = i3;
  HEAP8[i2 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 127](i1) | 0) & 1;
  STACKTOP = i5;
  return;
 }
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  do if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i1 >>> 0 > 4294967295 | (i3 | 0) == 34) {
   HEAP32[i5 >> 2] = 4;
   i1 = -1;
   break;
  } else break; else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
  } while (0);
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 do if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  if ((HEAP8[i1 >> 0] | 0) == 45) {
   HEAP32[i5 >> 2] = 4;
   i2 = 0;
   i1 = 0;
   break;
  }
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoull_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i5 >> 2] = 4;
    i1 = -1;
    i2 = -1;
   }
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 } while (0);
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 __THREW__ = 0;
 i1 = invoke_iiii(30, i3 | 0, i4 | 0, i6 | 0) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 if (i4 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i6 = __THREW__, __THREW__ = 0, i6 & 1) : 0) {
   i6 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i6);
  }
  ___resumeException(i1 | 0);
 } else {
  if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i6 = __THREW__, __THREW__ = 0, i6 & 1) : 0) {
   i6 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i6);
  }
  STACKTOP = i5;
  return i1 | 0;
 }
 return 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i6, i7, i8) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i1 = i6 + 8 | 0;
 i5 = i1 + 3 | 0;
 i2 = HEAP8[i5 >> 0] | 0;
 i3 = i2 << 24 >> 24 < 0;
 if (i3) i4 = (HEAP32[i1 >> 2] & 2147483647) + -1 | 0; else i4 = 1;
 do if (i4 >>> 0 >= i8 >>> 0) {
  if (i3) i1 = HEAP32[i6 >> 2] | 0; else i1 = i6;
  __ZNSt3__211char_traitsIwE4moveEPwPKwj(i1, i7, i8) | 0;
  HEAP32[i1 + (i8 << 2) >> 2] = 0;
  if ((HEAP8[i5 >> 0] | 0) < 0) {
   HEAP32[i6 + 4 >> 2] = i8;
   break;
  } else {
   HEAP8[i5 >> 0] = i8;
   break;
  }
 } else {
  if (i3) i1 = HEAP32[i6 + 4 >> 2] | 0; else i1 = i2 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw(i6, i4, i8 - i4 | 0, i1, 0, i1, i8, i7);
 } while (0);
 return i6 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0;
 L1 : do if ((i1 | 0) != (HEAP32[i2 + 8 >> 2] | 0)) {
  i4 = HEAP32[i1 + 12 >> 2] | 0;
  i3 = i1 + 16 + (i4 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1 + 16 | 0, i2, i5, i6);
  if ((i4 | 0) > 1) {
   i4 = i2 + 54 | 0;
   i1 = i1 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i5, i6);
    if (HEAP8[i4 >> 0] | 0) break L1;
    i1 = i1 + 8 | 0;
   } while (i1 >>> 0 < i3 >>> 0);
  }
 } else __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i5, i6); while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i1, i2, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i3 = 0, i4 = 0;
 do if ((i1 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) {
  if ((HEAP32[i2 + 4 >> 2] | 0) == (i5 | 0) ? (i3 = i2 + 28 | 0, (HEAP32[i3 >> 2] | 0) != 1) : 0) HEAP32[i3 >> 2] = i6;
 } else if ((i1 | 0) == (HEAP32[i2 >> 2] | 0)) {
  if ((HEAP32[i2 + 16 >> 2] | 0) != (i5 | 0) ? (i4 = i2 + 20 | 0, (HEAP32[i4 >> 2] | 0) != (i5 | 0)) : 0) {
   HEAP32[i2 + 32 >> 2] = i6;
   HEAP32[i4 >> 2] = i5;
   i7 = i2 + 40 | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + 1;
   if ((HEAP32[i2 + 36 >> 2] | 0) == 1 ? (HEAP32[i2 + 24 >> 2] | 0) == 2 : 0) HEAP8[i2 + 54 >> 0] = 1;
   HEAP32[i2 + 44 >> 2] = 4;
   break;
  }
  if ((i6 | 0) == 1) HEAP32[i2 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i5, i6, i1, i4, i8, i9, i10) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 var i2 = 0, i3 = 0, i7 = 0;
 if ((-17 - i6 | 0) >>> 0 < i1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i5);
 if ((HEAP8[i5 + 11 >> 0] | 0) < 0) i7 = HEAP32[i5 >> 2] | 0; else i7 = i5;
 if (i6 >>> 0 < 2147483623) {
  i2 = i1 + i6 | 0;
  i3 = i6 << 1;
  i2 = i2 >>> 0 < i3 >>> 0 ? i3 : i2;
  i2 = i2 >>> 0 < 11 ? 11 : i2 + 16 & -16;
 } else i2 = -17;
 i3 = __Znwj(i2) | 0;
 if (i8 | 0) _memcpy(i3 | 0, i7 | 0, i8 | 0) | 0;
 i1 = i4 - i9 - i8 | 0;
 if (i1 | 0) _memcpy(i3 + i8 + i10 | 0, i7 + i8 + i9 | 0, i1 | 0) | 0;
 if ((i6 | 0) != 10) __ZdlPv(i7);
 HEAP32[i5 >> 2] = i3;
 HEAP32[i5 + 8 >> 2] = i2 | -2147483648;
 return;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji(i1, i4, i5, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i3 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i9;
 if ((i1 | 0) == (i4 | 0)) {
  HEAP32[i5 >> 2] = 4;
  i2 = 0;
  i1 = 0;
 } else {
  i7 = ___errno_location() | 0;
  i8 = HEAP32[i7 >> 2] | 0;
  HEAP32[i7 >> 2] = 0;
  i1 = _strtoll_l(i1, i6, i2, __ZNSt3__26__clocEv() | 0) | 0;
  i2 = tempRet0;
  i3 = HEAP32[i7 >> 2] | 0;
  if (!i3) HEAP32[i7 >> 2] = i8;
  if ((HEAP32[i6 >> 2] | 0) == (i4 | 0)) {
   if ((i3 | 0) == 34) {
    HEAP32[i5 >> 2] = 4;
    i2 = (i2 | 0) > 0 | (i2 | 0) == 0 & i1 >>> 0 > 0;
    i1 = i2 ? -1 : 0;
    i2 = i2 ? 2147483647 : -2147483648;
   }
  } else {
   HEAP32[i5 >> 2] = 4;
   i1 = 0;
   i2 = 0;
  }
 }
 tempRet0 = i2;
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE13__move_assignERSF_NS_17integral_constantIbLb1EEE(i5, i6, i1) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i1 = i5 + 4 | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(i5, HEAP32[i1 >> 2] | 0);
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 i2 = i6 + 4 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i3;
 i4 = i6 + 8 | 0;
 i7 = HEAP32[i4 >> 2] | 0;
 HEAP32[i5 + 8 >> 2] = i7;
 if (!i7) HEAP32[i5 >> 2] = i1; else {
  HEAP32[i3 + 8 >> 2] = i1;
  HEAP32[i6 >> 2] = i2;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i4 >> 2] = 0;
 }
 return;
}

function __ZNSt3__211__stdoutbufIwE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 8 | 0;
 i4 = i10;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i11 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i10 + 8 | 0;
 i4 = i10;
 i5 = i1 + 36 | 0;
 i6 = i1 + 40 | 0;
 i7 = i3 + 8 | 0;
 i8 = i3;
 i2 = i1 + 32 | 0;
 L1 : while (1) {
  i1 = HEAP32[i5 >> 2] | 0;
  i1 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 31](i1, HEAP32[i6 >> 2] | 0, i3, i7, i4) | 0;
  i11 = (HEAP32[i4 >> 2] | 0) - i8 | 0;
  if ((_fwrite(i3, 1, i11, HEAP32[i2 >> 2] | 0) | 0) != (i11 | 0)) {
   i1 = -1;
   break;
  }
  switch (i1 | 0) {
  case 1:
   break;
  case 2:
   {
    i1 = -1;
    break L1;
   }
  default:
   {
    i9 = 4;
    break L1;
   }
  }
 }
 if ((i9 | 0) == 4) i1 = ((_fflush(HEAP32[i2 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = i10;
 return i1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0;
 i2 = HEAP32[i5 >> 2] | 0;
 i7 = i5 + 4 | 0;
 i4 = i6 + 4 | 0;
 i3 = (HEAP32[i7 >> 2] | 0) - i2 | 0;
 i1 = (HEAP32[i4 >> 2] | 0) + (0 - (i3 >> 2) << 2) | 0;
 HEAP32[i4 >> 2] = i1;
 if ((i3 | 0) > 0) {
  _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
  i2 = i4;
  i1 = HEAP32[i4 >> 2] | 0;
 } else i2 = i4;
 i4 = HEAP32[i5 >> 2] | 0;
 HEAP32[i5 >> 2] = i1;
 HEAP32[i2 >> 2] = i4;
 i4 = i6 + 8 | 0;
 i3 = HEAP32[i7 >> 2] | 0;
 HEAP32[i7 >> 2] = HEAP32[i4 >> 2];
 HEAP32[i4 >> 2] = i3;
 i4 = i5 + 8 | 0;
 i7 = i6 + 12 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 HEAP32[i4 >> 2] = HEAP32[i7 >> 2];
 HEAP32[i7 >> 2] = i5;
 HEAP32[i6 >> 2] = HEAP32[i2 >> 2];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i6, i3, i5) {
 i6 = i6 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i7 = 0;
 if (i3 | 0) {
  i7 = i6 + 11 | 0;
  i1 = HEAP8[i7 >> 0] | 0;
  if (i1 << 24 >> 24 < 0) {
   i2 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0;
   i4 = HEAP32[i6 + 4 >> 2] | 0;
  } else {
   i2 = 10;
   i4 = i1 & 255;
  }
  if ((i2 - i4 | 0) >>> 0 < i3 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i6, i2, i3 - i2 + i4 | 0, i4, i4, 0, 0);
   i1 = HEAP8[i7 >> 0] | 0;
  }
  if (i1 << 24 >> 24 < 0) i2 = HEAP32[i6 >> 2] | 0; else i2 = i6;
  _memset(i2 + i4 | 0, i5 | 0, i3 | 0) | 0;
  i1 = i4 + i3 | 0;
  if ((HEAP8[i7 >> 0] | 0) < 0) HEAP32[i6 + 4 >> 2] = i1; else HEAP8[i7 >> 0] = i1;
  HEAP8[i2 + i1 >> 0] = 0;
 }
 return i6 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv(i3, i1, i4) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0, i6 = 0, i7 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 i5 = i7;
 if ((i3 | 0) != (i1 | 0)) if ((i1 | 0) != 0 ? (i6 = ___dynamic_cast(i1, 1448, 1432, 0) | 0, (i6 | 0) != 0) : 0) {
  i1 = i5 + 4 | 0;
  i2 = i1 + 52 | 0;
  do {
   HEAP32[i1 >> 2] = 0;
   i1 = i1 + 4 | 0;
  } while ((i1 | 0) < (i2 | 0));
  HEAP32[i5 >> 2] = i6;
  HEAP32[i5 + 8 >> 2] = i3;
  HEAP32[i5 + 12 >> 2] = -1;
  HEAP32[i5 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i6 >> 2] | 0) + 28 >> 2] & 7](i6, i5, HEAP32[i4 >> 2] | 0, 1);
  if ((HEAP32[i5 + 24 >> 2] | 0) == 1) {
   HEAP32[i4 >> 2] = HEAP32[i5 + 16 >> 2];
   i1 = 1;
  } else i1 = 0;
 } else i1 = 0; else i1 = 1;
 STACKTOP = i7;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw(i1, i7) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i3 = i1 + 8 | 0;
 i6 = i3 + 3 | 0;
 i2 = HEAP8[i6 >> 0] | 0;
 i4 = i2 << 24 >> 24 < 0;
 if (i4) {
  i5 = HEAP32[i1 + 4 >> 2] | 0;
  i2 = (HEAP32[i3 >> 2] & 2147483647) + -1 | 0;
 } else {
  i5 = i2 & 255;
  i2 = 1;
 }
 if ((i5 | 0) == (i2 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj(i1, i2, 1, i2, i2, 0, 0);
  if ((HEAP8[i6 >> 0] | 0) > -1) i2 = 7; else i2 = 8;
 } else if (i4) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) HEAP8[i6 >> 0] = i5 + 1; else if ((i2 | 0) == 8) {
  i6 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i5 + 1;
  i1 = i6;
 }
 i6 = i1 + (i5 << 2) | 0;
 HEAP32[i6 >> 2] = i7;
 HEAP32[i6 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i5, i6, i7) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0;
 i3 = i5 + 11 | 0;
 i1 = HEAP8[i3 >> 0] | 0;
 i2 = i1 << 24 >> 24 < 0;
 if (i2) i4 = (HEAP32[i5 + 8 >> 2] & 2147483647) + -1 | 0; else i4 = 10;
 do if (i4 >>> 0 >= i7 >>> 0) {
  if (i2) i1 = HEAP32[i5 >> 2] | 0; else i1 = i5;
  if (i7 | 0) _memmove(i1 | 0, i6 | 0, i7 | 0) | 0;
  HEAP8[i1 + i7 >> 0] = 0;
  if ((HEAP8[i3 >> 0] | 0) < 0) {
   HEAP32[i5 + 4 >> 2] = i7;
   break;
  } else {
   HEAP8[i3 >> 0] = i7;
   break;
  }
 } else {
  if (i2) i1 = HEAP32[i5 + 4 >> 2] | 0; else i1 = i1 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i5, i4, i7 - i4 | 0, i1, 0, i1, i7, i6);
 } while (0);
 return i5 | 0;
}

function _wcrtomb(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 do if (i1) {
  if (i2 >>> 0 < 128) {
   HEAP8[i1 >> 0] = i2;
   i1 = 1;
   break;
  }
  if (i2 >>> 0 < 2048) {
   HEAP8[i1 >> 0] = i2 >>> 6 | 192;
   HEAP8[i1 + 1 >> 0] = i2 & 63 | 128;
   i1 = 2;
   break;
  }
  if (i2 >>> 0 < 55296 | (i2 & -8192 | 0) == 57344) {
   HEAP8[i1 >> 0] = i2 >>> 12 | 224;
   HEAP8[i1 + 1 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 & 63 | 128;
   i1 = 3;
   break;
  }
  if ((i2 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[i1 >> 0] = i2 >>> 18 | 240;
   HEAP8[i1 + 1 >> 0] = i2 >>> 12 & 63 | 128;
   HEAP8[i1 + 2 >> 0] = i2 >>> 6 & 63 | 128;
   HEAP8[i1 + 3 >> 0] = i2 & 63 | 128;
   i1 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   i1 = -1;
   break;
  }
 } else i1 = 1; while (0);
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i6, i4, i5) {
 i6 = i6 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i7 = 0;
 i7 = i6 + 11 | 0;
 i1 = HEAP8[i7 >> 0] | 0;
 i3 = i1 << 24 >> 24 < 0;
 if (i3) {
  i2 = (HEAP32[i6 + 8 >> 2] & 2147483647) + -1 | 0;
  i1 = HEAP32[i6 + 4 >> 2] | 0;
 } else {
  i2 = 10;
  i1 = i1 & 255;
 }
 if ((i2 - i1 | 0) >>> 0 >= i5 >>> 0) {
  if (i5 | 0) {
   if (i3) i2 = HEAP32[i6 >> 2] | 0; else i2 = i6;
   _memcpy(i2 + i1 | 0, i4 | 0, i5 | 0) | 0;
   i1 = i1 + i5 | 0;
   if ((HEAP8[i7 >> 0] | 0) < 0) HEAP32[i6 + 4 >> 2] = i1; else HEAP8[i7 >> 0] = i1;
   HEAP8[i2 + i1 >> 0] = 0;
  }
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc(i6, i2, i5 - i2 + i1 | 0, i1, i1, 0, i5, i4);
 return i6 | 0;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5 + 4 | 0;
 i4 = i5;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 5904;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 HEAP32[i1 + 48 >> 2] = -1;
 HEAP8[i1 + 52 >> 0] = 0;
 __ZNSt3__26localeC2ERKS0_(i6, i1 + 4 | 0);
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __THREW__ = 0;
 invoke_vii(5, i1 | 0, i4 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i6 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
  ___resumeException(i6 | 0);
 } else {
  __ZNSt3__26localeD2Ev(i4);
  STACKTOP = i5;
  return;
 }
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5 + 4 | 0;
 i4 = i5;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1);
 HEAP32[i1 >> 2] = 5968;
 HEAP32[i1 + 32 >> 2] = i2;
 HEAP32[i1 + 40 >> 2] = i3;
 HEAP32[i1 + 48 >> 2] = -1;
 HEAP8[i1 + 52 >> 0] = 0;
 __ZNSt3__26localeC2ERKS0_(i6, i1 + 4 | 0);
 HEAP32[i4 >> 2] = HEAP32[i6 >> 2];
 __THREW__ = 0;
 invoke_vii(6, i1 | 0, i4 | 0);
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i6 = ___cxa_find_matching_catch_2() | 0;
  __ZNSt3__26localeD2Ev(i4);
  __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
  ___resumeException(i6 | 0);
 } else {
  __ZNSt3__26localeD2Ev(i4);
  STACKTOP = i5;
  return;
 }
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 288 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 288 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 288) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(i1, i6) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = i1 + 11 | 0;
 i2 = HEAP8[i5 >> 0] | 0;
 i3 = i2 << 24 >> 24 < 0;
 if (i3) {
  i4 = HEAP32[i1 + 4 >> 2] | 0;
  i2 = (HEAP32[i1 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  i4 = i2 & 255;
  i2 = 10;
 }
 if ((i4 | 0) == (i2 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj(i1, i2, 1, i2, i2, 0, 0);
  if ((HEAP8[i5 >> 0] | 0) > -1) i2 = 7; else i2 = 8;
 } else if (i3) i2 = 8; else i2 = 7;
 if ((i2 | 0) == 7) HEAP8[i5 >> 0] = i4 + 1; else if ((i2 | 0) == 8) {
  i5 = HEAP32[i1 >> 2] | 0;
  HEAP32[i1 + 4 >> 2] = i4 + 1;
  i1 = i5;
 }
 i5 = i1 + i4 | 0;
 HEAP8[i5 >> 0] = i6;
 HEAP8[i5 + 1 >> 0] = 0;
 return;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i2, i6, i5) {
 i2 = i2 | 0;
 i6 = i6 | 0;
 i5 = i5 | 0;
 var i1 = 0, i3 = 0, i4 = 0;
 __ZNSt3__214__shared_count12__add_sharedEv(i6);
 i3 = i2 + 8 | 0;
 i1 = HEAP32[i3 >> 2] | 0;
 do if ((HEAP32[i2 + 12 >> 2] | 0) - i1 >> 2 >>> 0 > i5 >>> 0) i4 = i3; else {
  __THREW__ = 0;
  invoke_vii(82, i3 | 0, i5 + 1 | 0);
  i4 = __THREW__;
  __THREW__ = 0;
  if (!(i4 & 1)) {
   i4 = i3;
   i1 = HEAP32[i3 >> 2] | 0;
   break;
  }
  i1 = ___cxa_find_matching_catch_2() | 0;
  if (i6 | 0) __ZNSt3__214__shared_count16__release_sharedEv(i6) | 0;
  ___resumeException(i1 | 0);
 } while (0);
 i2 = HEAP32[i1 + (i5 << 2) >> 2] | 0;
 if (i2) {
  __ZNSt3__214__shared_count16__release_sharedEv(i2) | 0;
  i1 = HEAP32[i4 >> 2] | 0;
 }
 HEAP32[i1 + (i5 << 2) >> 2] = i6;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i2) return; else {
  __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(i1, HEAP32[i2 >> 2] | 0);
  __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(i1, HEAP32[i2 + 4 >> 2] | 0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i2 + 20 | 0);
  __ZdlPv(i2);
  return;
 }
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 168 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i7 = 0, i8 = 0, i9 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 4 | 0;
 i9 = i7;
 i1 = i1 + 8 | 0;
 i1 = FUNCTION_TABLE_ii[HEAP32[HEAP32[i1 >> 2] >> 2] & 127](i1) | 0;
 HEAP32[i9 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i9 >> 2];
 i1 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb(i2, i8, i1, i1 + 168 | 0, i5, i4, 0) | 0) - i1 | 0;
 if ((i1 | 0) < 168) HEAP32[i6 >> 2] = ((i1 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = i7;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE16__construct_nodeIJRKNS_4pairIS3_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISO_EEEEEEDpOT_(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 i4 = __Znwj(32) | 0;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i1 + 4;
 i1 = i3 + 8 | 0;
 HEAP8[i1 >> 0] = 0;
 HEAP32[i4 + 16 >> 2] = HEAP32[i2 >> 2];
 __THREW__ = 0;
 invoke_vii(39, i4 + 20 | 0, i2 + 4 | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (!(i2 & 1)) {
  HEAP8[i1 >> 0] = 1;
  return;
 }
 i1 = ___cxa_find_matching_catch_2() | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = 0;
 if (i2 | 0) __ZdlPv(i2);
 ___resumeException(i1 | 0);
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = i5 + 24 | 0;
 i8 = i5 + 28 | 0;
 i2 = 0;
 while (1) {
  if ((i2 | 0) >= (i6 | 0)) break;
  i3 = HEAP32[i7 >> 2] | 0;
  i4 = HEAP32[i8 >> 2] | 0;
  if (i3 >>> 0 < i4 >>> 0) {
   i4 = i4 - i3 >> 2;
   i9 = i6 - i2 | 0;
   i4 = (i9 | 0) < (i4 | 0) ? i9 : i4;
   __ZNSt3__211char_traitsIwE4copyEPwPKwj(i3, i1, i4) | 0;
   HEAP32[i7 >> 2] = (HEAP32[i7 >> 2] | 0) + (i4 << 2);
   i1 = i1 + (i4 << 2) | 0;
   i2 = i4 + i2 | 0;
   continue;
  }
  if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] & 31](i5, HEAP32[i1 >> 2] | 0) | 0) == -1) break;
  i1 = i1 + 4 | 0;
  i2 = i2 + 1 | 0;
 }
 return i2 | 0;
}

function __ZNSt3__28ios_base5clearEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3;
 i5 = (HEAP32[i1 + 24 >> 2] | 0) == 0;
 HEAP32[i1 + 16 >> 2] = i5 & 1 | i2;
 if (!((i5 & 1 | i2) & HEAP32[i1 + 20 >> 2])) {
  STACKTOP = i3;
  return;
 }
 i1 = ___cxa_allocate_exception(16) | 0;
 __ZNSt3__217iostream_categoryEv() | 0;
 HEAP32[i4 >> 2] = 1;
 HEAP32[i4 + 4 >> 2] = 17832;
 __THREW__ = 0;
 invoke_viii(4, i1 | 0, 13344, i4 | 0);
 i5 = __THREW__;
 __THREW__ = 0;
 if (i5 & 1) {
  i5 = ___cxa_find_matching_catch_2() | 0;
  ___cxa_free_exception(i1 | 0);
  i1 = i5;
 } else {
  __THREW__ = 0;
  invoke_viii(5, i1 | 0, 160, 23);
  __THREW__ = 0;
  i1 = ___cxa_find_matching_catch_2() | 0;
 }
 ___resumeException(i1 | 0);
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci(i5, i1, i6) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 i7 = i5 + 24 | 0;
 i8 = i5 + 28 | 0;
 i4 = 0;
 while (1) {
  if ((i4 | 0) >= (i6 | 0)) break;
  i2 = HEAP32[i7 >> 2] | 0;
  i3 = HEAP32[i8 >> 2] | 0;
  if (i2 >>> 0 >= i3 >>> 0) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i5 >> 2] | 0) + 52 >> 2] & 31](i5, HEAPU8[i1 >> 0] | 0) | 0) == -1) break;
   i1 = i1 + 1 | 0;
   i4 = i4 + 1 | 0;
   continue;
  }
  i3 = i3 - i2 | 0;
  i9 = i6 - i4 | 0;
  i3 = (i9 | 0) < (i3 | 0) ? i9 : i3;
  if (i3) {
   _memcpy(i2 | 0, i1 | 0, i3 | 0) | 0;
   i2 = HEAP32[i7 >> 2] | 0;
  }
  HEAP32[i7 >> 2] = i2 + i3;
  i1 = i1 + i3 | 0;
  i4 = i3 + i4 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i2, i1, i6) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 i4 = i1;
 i3 = i6 - i4 | 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i2);
 if (i3 >>> 0 < 11) {
  HEAP8[i2 + 11 >> 0] = i3;
  i5 = i2;
 } else {
  i7 = i3 + 16 & -16;
  i5 = __Znwj(i7) | 0;
  HEAP32[i2 >> 2] = i5;
  HEAP32[i2 + 8 >> 2] = i7 | -2147483648;
  HEAP32[i2 + 4 >> 2] = i3;
 }
 i3 = i6 - i4 | 0;
 i2 = i5;
 while (1) {
  if ((i1 | 0) == (i6 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i1 = i1 + 1 | 0;
  i2 = i2 + 1 | 0;
 }
 HEAP8[i5 + i3 >> 0] = 0;
 return;
}

function _fputc(i1, i6) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i7 = 0;
 if ((HEAP32[i6 + 76 >> 2] | 0) >= 0 ? (___lockfile(i6) | 0) != 0 : 0) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i1 | 0) ? (i4 = i6 + 20 | 0, i5 = HEAP32[i4 >> 2] | 0, i5 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i4 >> 2] = i5 + 1;
   HEAP8[i5 >> 0] = i1;
   i1 = i1 & 255;
  } else i1 = ___overflow(i6, i1) | 0;
  ___unlockfile(i6);
 } else i7 = 3;
 do if ((i7 | 0) == 3) {
  if ((HEAP8[i6 + 75 >> 0] | 0) != (i1 | 0) ? (i2 = i6 + 20 | 0, i3 = HEAP32[i2 >> 2] | 0, i3 >>> 0 < (HEAP32[i6 + 16 >> 2] | 0) >>> 0) : 0) {
   HEAP32[i2 >> 2] = i3 + 1;
   HEAP8[i3 >> 0] = i1;
   i1 = i1 & 255;
   break;
  }
  i1 = ___overflow(i6, i1) | 0;
 } while (0);
 return i1 | 0;
}

function ___overflow(i5, i6) {
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i4 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i9;
 i8 = i6 & 255;
 HEAP8[i7 >> 0] = i8;
 i2 = i5 + 16 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (!i3) if (!(___towrite(i5) | 0)) {
  i3 = HEAP32[i2 >> 2] | 0;
  i4 = 4;
 } else i1 = -1; else i4 = 4;
 do if ((i4 | 0) == 4) {
  i4 = i5 + 20 | 0;
  i2 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 < i3 >>> 0 ? (i1 = i6 & 255, (i1 | 0) != (HEAP8[i5 + 75 >> 0] | 0)) : 0) {
   HEAP32[i4 >> 2] = i2 + 1;
   HEAP8[i2 >> 0] = i8;
   break;
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[i5 + 36 >> 2] & 63](i5, i7, 1) | 0) == 1) i1 = HEAPU8[i7 >> 0] | 0; else i1 = -1;
 } while (0);
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 if (i4 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i4 >>> 0 >= 2) {
  i2 = i4 + 4 & -4;
  if (i2 >>> 0 > 1073741823) {
   i4 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev(i4);
   ___cxa_throw(i4 | 0, 1488, 97);
  } else {
   i5 = __Znwj(i2 << 2) | 0;
   HEAP32[i1 >> 2] = i5;
   HEAP32[i1 + 8 >> 2] = i2 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i4;
   i1 = i5;
   break;
  }
 } else HEAP8[i1 + 8 + 3 >> 0] = i4; while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwj(i1, i3, i4) | 0;
 HEAP32[i1 + (i4 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, i3, i4) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i2 = 0, i5 = 0;
 if (i3 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 do if (i3 >>> 0 >= 2) {
  i2 = i3 + 4 & -4;
  if (i2 >>> 0 > 1073741823) {
   i4 = ___cxa_allocate_exception(4) | 0;
   __ZNSt9bad_allocC2Ev(i4);
   ___cxa_throw(i4 | 0, 1488, 97);
  } else {
   i5 = __Znwj(i2 << 2) | 0;
   HEAP32[i1 >> 2] = i5;
   HEAP32[i1 + 8 >> 2] = i2 | -2147483648;
   HEAP32[i1 + 4 >> 2] = i3;
   i1 = i5;
   break;
  }
 } else HEAP8[i1 + 8 + 3 >> 0] = i3; while (0);
 __ZNSt3__211char_traitsIwE6assignEPwjw(i1, i3, i4) | 0;
 HEAP32[i1 + (i3 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj(i1, i2, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i3 = 0;
 if (i5 & 2048) {
  HEAP8[i1 >> 0] = 43;
  i1 = i1 + 1 | 0;
 }
 if (i5 & 512) {
  HEAP8[i1 >> 0] = 35;
  i1 = i1 + 1 | 0;
 }
 while (1) {
  i3 = HEAP8[i2 >> 0] | 0;
  if (!(i3 << 24 >> 24)) break;
  HEAP8[i1 >> 0] = i3;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 L10 : do switch (i5 & 74) {
 case 64:
  {
   HEAP8[i1 >> 0] = 111;
   break;
  }
 case 8:
  if (!(i5 & 16384)) {
   HEAP8[i1 >> 0] = 120;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 88;
   break L10;
  }
 default:
  if (i4) {
   HEAP8[i1 >> 0] = 100;
   break L10;
  } else {
   HEAP8[i1 >> 0] = 117;
   break L10;
  }
 } while (0);
 return;
}

function _fflush(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 do if (i2) {
  if ((HEAP32[i2 + 76 >> 2] | 0) <= -1) {
   i1 = ___fflush_unlocked(i2) | 0;
   break;
  }
  i3 = (___lockfile(i2) | 0) == 0;
  i1 = ___fflush_unlocked(i2) | 0;
  if (!i3) ___unlockfile(i2);
 } else {
  if (!(HEAP32[542] | 0)) i1 = 0; else i1 = _fflush(HEAP32[542] | 0) | 0;
  ___lock(17300);
  i2 = HEAP32[4324] | 0;
  if (i2) do {
   if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i3 = ___lockfile(i2) | 0; else i3 = 0;
   if ((HEAP32[i2 + 20 >> 2] | 0) >>> 0 > (HEAP32[i2 + 28 >> 2] | 0) >>> 0) i1 = ___fflush_unlocked(i2) | 0 | i1;
   if (i3 | 0) ___unlockfile(i2);
   i2 = HEAP32[i2 + 56 >> 2] | 0;
  } while ((i2 | 0) != 0);
  ___unlock(17300);
 } while (0);
 return i1 | 0;
}

function _pad(i6, i2, i4, i5, i1) {
 i6 = i6 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i3 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 i7 = i8;
 do if ((i4 | 0) > (i5 | 0) & (i1 & 73728 | 0) == 0) {
  i1 = i4 - i5 | 0;
  _memset(i7 | 0, i2 | 0, (i1 >>> 0 > 256 ? 256 : i1) | 0) | 0;
  i2 = HEAP32[i6 >> 2] | 0;
  i3 = (i2 & 32 | 0) == 0;
  if (i1 >>> 0 > 255) {
   i4 = i4 - i5 | 0;
   do {
    if (i3) {
     ___fwritex(i7, 256, i6) | 0;
     i2 = HEAP32[i6 >> 2] | 0;
    }
    i1 = i1 + -256 | 0;
    i3 = (i2 & 32 | 0) == 0;
   } while (i1 >>> 0 > 255);
   if (i3) i1 = i4 & 255; else break;
  } else if (!i3) break;
  ___fwritex(i7, i1, i6) | 0;
 } while (0);
 STACKTOP = i8;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_(i1, i9, i8, i4, i5, i6, 14337, 14345) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_(i1, i9, i8, i4, i5, i6, 7736, 7768) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i7, i2, i3, i5, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i4, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 | 0) < 100 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i7, i2, i3, i5, i4) {
 i1 = i1 | 0;
 i7 = i7 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i4 = i4 | 0;
 var i6 = 0, i8 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i6 + 4 | 0;
 i8 = i6;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i5, i4, 4) | 0;
 if (!(HEAP32[i5 >> 2] & 4)) {
  if ((i1 | 0) < 69) i1 = i1 + 2e3 | 0; else i1 = (i1 | 0) < 100 ? i1 + 1900 | 0 : i1;
  HEAP32[i7 >> 2] = i1 + -1900;
 }
 STACKTOP = i6;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0, i11 = 0;
 i7 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i8 = i7 + 12 | 0;
 i9 = i7 + 8 | 0;
 i11 = i7 + 4 | 0;
 i10 = i7;
 HEAP32[i11 >> 2] = HEAP32[i2 >> 2];
 HEAP32[i10 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i9 >> 2] = HEAP32[i11 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i10 >> 2];
 i6 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_(i1, i9, i8, i4, i5, i6) | 0;
 STACKTOP = i7;
 return i6 | 0;
}

function _scalbn(d2, i1) {
 d2 = +d2;
 i1 = i1 | 0;
 var i3 = 0;
 if ((i1 | 0) > 1023) {
  d2 = d2 * 89884656743115795.0e291;
  i3 = i1 + -1023 | 0;
  i1 = i1 + -2046 | 0;
  if ((i3 | 0) > 1023) {
   d2 = d2 * 89884656743115795.0e291;
   i1 = (i1 | 0) > 1023 ? 1023 : i1;
  } else i1 = i3;
 } else if ((i1 | 0) < -1022) {
  d2 = d2 * 2.2250738585072014e-308;
  i3 = i1 + 1022 | 0;
  i1 = i1 + 2044 | 0;
  if ((i3 | 0) < -1022) {
   d2 = d2 * 2.2250738585072014e-308;
   i1 = (i1 | 0) < -1022 ? -1022 : i1;
  } else i1 = i3;
 }
 i1 = _bitshift64Shl(i1 + 1023 | 0, 0, 52) | 0;
 i3 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = i1;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(d2 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0;
 L1 : do switch ((HEAP32[i2 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   i2 = HEAP8[i1 >> 0] | 0;
   switch (i2 << 24 >> 24) {
   case 43:
   case 45:
    {
     i1 = i1 + 1 | 0;
     break L1;
    }
   default:
    {}
   }
   if ((i3 - i1 | 0) > 1 & i2 << 24 >> 24 == 48) {
    switch (HEAP8[i1 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      i4 = 7;
      break L1;
     }
    }
    i1 = i1 + 2 | 0;
   } else i4 = 7;
   break;
  }
 case 32:
  {
   i1 = i3;
   break;
  }
 default:
  i4 = 7;
 } while (0);
 return i1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 12 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 + -1 | 0) >>> 0 < 31 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 3) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 366 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSJ_SJ_(i4, i2, i3, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i3 >> 2] = i1;
 i2 = HEAP32[i4 >> 2] | 0;
 if (HEAP32[i2 >> 2] | 0) {
  HEAP32[i4 >> 2] = HEAP32[i2 >> 2];
  i1 = HEAP32[i3 >> 2] | 0;
 }
 __ZNSt3__227__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[i4 + 4 >> 2] | 0, i1);
 i4 = i4 + 8 | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1 + -1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 13 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1 + -1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 1) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 1) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 7 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 61 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 60 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 2) | 0;
 i2 = HEAP32[i7 >> 2] | 0;
 if ((i1 | 0) < 24 & (i2 & 4 | 0) == 0) HEAP32[i6 >> 2] = i1; else HEAP32[i7 >> 2] = i2 | 4;
 STACKTOP = i5;
 return;
}

function _frexp(d1, i5) {
 d1 = +d1;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i2 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 i4 = _bitshift64Lshr(i2 | 0, i3 | 0, 52) | 0;
 switch (i4 & 2047) {
 case 0:
  {
   if (d1 != 0.0) {
    d1 = +_frexp(d1 * 18446744073709552.0e3, i5);
    i2 = (HEAP32[i5 >> 2] | 0) + -64 | 0;
   } else i2 = 0;
   HEAP32[i5 >> 2] = i2;
   break;
  }
 case 2047:
  break;
 default:
  {
   HEAP32[i5 >> 2] = (i4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = i2;
   HEAP32[tempDoublePtr + 4 >> 2] = i3 & -2146435073 | 1071644672;
   d1 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +d1;
}

function _ungetc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 do if ((i1 | 0) != -1) {
  if ((HEAP32[i2 + 76 >> 2] | 0) > -1) i5 = ___lockfile(i2) | 0; else i5 = 0;
  if (!((HEAP32[i2 + 8 >> 2] | 0) == 0 ? (___toread(i2) | 0) != 0 : 0)) i6 = 6;
  if ((i6 | 0) == 6 ? (i3 = i2 + 4 | 0, i4 = HEAP32[i3 >> 2] | 0, i4 >>> 0 > ((HEAP32[i2 + 44 >> 2] | 0) + -8 | 0) >>> 0) : 0) {
   i6 = i4 + -1 | 0;
   HEAP32[i3 >> 2] = i6;
   HEAP8[i6 >> 0] = i1;
   HEAP32[i2 >> 2] = HEAP32[i2 >> 2] & -17;
   if (!i5) break;
   ___unlockfile(i2);
   break;
  }
  if (i5) {
   ___unlockfile(i2);
   i1 = -1;
  } else i1 = -1;
 } else i1 = -1; while (0);
 return i1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP8[i1 + 128 >> 0] = 0;
 do if (i2 | 0) {
  __THREW__ = 0;
  invoke_vii(81, i1 | 0, i2 | 0);
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_2() | 0;
   __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i1);
   ___resumeException(i3 | 0);
  } else {
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(i1, i2);
   break;
  }
 } while (0);
 return;
}

function ___fflush_unlocked(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i2 = i1 + 20 | 0;
 i7 = i1 + 28 | 0;
 if ((HEAP32[i2 >> 2] | 0) >>> 0 > (HEAP32[i7 >> 2] | 0) >>> 0 ? (FUNCTION_TABLE_iiii[HEAP32[i1 + 36 >> 2] & 63](i1, 0, 0) | 0, (HEAP32[i2 >> 2] | 0) == 0) : 0) i1 = -1; else {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  i5 = i1 + 8 | 0;
  i6 = HEAP32[i5 >> 2] | 0;
  if (i4 >>> 0 < i6 >>> 0) FUNCTION_TABLE_iiii[HEAP32[i1 + 40 >> 2] & 63](i1, i4 - i6 | 0, 1) | 0;
  HEAP32[i1 + 16 >> 2] = 0;
  HEAP32[i7 >> 2] = 0;
  HEAP32[i2 >> 2] = 0;
  HEAP32[i5 >> 2] = 0;
  HEAP32[i3 >> 2] = 0;
  i1 = 0;
 }
 return i1 | 0;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i4 >> 2] = 4;
  d1 = 0.0;
 } else {
  i6 = ___errno_location() | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = 0;
  d1 = +_strtold_l(i2, i5, __ZNSt3__26__clocEv() | 0);
  i2 = HEAP32[i6 >> 2] | 0;
  if (!i2) HEAP32[i6 >> 2] = i7;
  if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i4 >> 2] = 4;
  } else {
   HEAP32[i4 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i4 >> 2] = 4;
  d1 = 0.0;
 } else {
  i6 = ___errno_location() | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = 0;
  d1 = +_strtold_l(i2, i5, __ZNSt3__26__clocEv() | 0);
  i2 = HEAP32[i6 >> 2] | 0;
  if (!i2) HEAP32[i6 >> 2] = i7;
  if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i4 >> 2] = 4;
  } else {
   HEAP32[i4 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var d1 = 0.0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i8;
 if ((i2 | 0) == (i3 | 0)) {
  HEAP32[i4 >> 2] = 4;
  d1 = 0.0;
 } else {
  i6 = ___errno_location() | 0;
  i7 = HEAP32[i6 >> 2] | 0;
  HEAP32[i6 >> 2] = 0;
  d1 = +_strtold_l(i2, i5, __ZNSt3__26__clocEv() | 0);
  i2 = HEAP32[i6 >> 2] | 0;
  if (!i2) HEAP32[i6 >> 2] = i7;
  if ((HEAP32[i5 >> 2] | 0) == (i3 | 0)) {
   if ((i2 | 0) == 34) HEAP32[i4 >> 2] = 4;
  } else {
   HEAP32[i4 >> 2] = 4;
   d1 = 0.0;
  }
 }
 STACKTOP = i8;
 return +d1;
}

function _strtox(i6, i7, i1) {
 i6 = i6 | 0;
 i7 = i7 | 0;
 i1 = i1 | 0;
 var d2 = 0.0, i3 = 0, i4 = 0, i5 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i5 = i8;
 i3 = i5;
 i4 = i3 + 112 | 0;
 do {
  HEAP32[i3 >> 2] = 0;
  i3 = i3 + 4 | 0;
 } while ((i3 | 0) < (i4 | 0));
 i3 = i5 + 4 | 0;
 HEAP32[i3 >> 2] = i6;
 i4 = i5 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i5 + 44 >> 2] = i6;
 HEAP32[i5 + 76 >> 2] = -1;
 ___shlim(i5, 0);
 d2 = +___floatscan(i5, i1, 1);
 i1 = (HEAP32[i3 >> 2] | 0) - (HEAP32[i4 >> 2] | 0) + (HEAP32[i5 + 108 >> 2] | 0) | 0;
 if (i7 | 0) HEAP32[i7 >> 2] = i1 | 0 ? i6 + i1 | 0 : i6;
 STACKTOP = i8;
 return +d2;
}

function __ZSt11__terminatePFvvE(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __THREW__ = 0;
 invoke_v(i1 | 0);
 i1 = __THREW__;
 __THREW__ = 0;
 if (!(i1 & 1)) {
  __THREW__ = 0;
  invoke_vii(85, 16285, i2 | 0);
  __THREW__ = 0;
 }
 i1 = ___cxa_find_matching_catch_3(0) | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(85, 16325, i2 + 8 | 0);
 __THREW__ = 0;
 i1 = ___cxa_find_matching_catch_3(0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i2);
 } else ___clang_call_terminate(i1);
}

function _vasprintf(i2, i3, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i6 = i6 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i7 = 0, i8 = 0;
 i8 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i8;
 i7 = _malloc(240) | 0;
 do if (i7) {
  HEAP32[i1 >> 2] = HEAP32[i6 >> 2];
  i1 = _vsnprintf(i7, 240, i3, i1) | 0;
  if (i1 >>> 0 < 240) {
   i6 = _realloc(i7, i1 + 1 | 0) | 0;
   HEAP32[i2 >> 2] = i6 | 0 ? i6 : i7;
   break;
  }
  _free(i7);
  if ((i1 | 0) >= 0 ? (i4 = i1 + 1 | 0, i5 = _malloc(i4) | 0, HEAP32[i2 >> 2] = i5, (i5 | 0) != 0) : 0) i1 = _vsnprintf(i5, i4, i3, i6) | 0; else i1 = -1;
 } else i1 = -1; while (0);
 STACKTOP = i8;
 return i1 | 0;
}

function _getc(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0;
 if ((HEAP32[i4 + 76 >> 2] | 0) >= 0 ? (___lockfile(i4) | 0) != 0 : 0) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
  } else i1 = ___uflow(i4) | 0;
  ___unlockfile(i4);
 } else i3 = 3;
 do if ((i3 | 0) == 3) {
  i1 = i4 + 4 | 0;
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i4 + 8 >> 2] | 0) >>> 0) {
   HEAP32[i1 >> 2] = i2 + 1;
   i1 = HEAPU8[i2 >> 0] | 0;
   break;
  } else {
   i1 = ___uflow(i4) | 0;
   break;
  }
 } while (0);
 return i1 | 0;
}

function _realloc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 if (!i2) {
  i3 = _malloc(i3) | 0;
  return i3 | 0;
 }
 if (i3 >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  i3 = 0;
  return i3 | 0;
 }
 i1 = _try_realloc_chunk(i2 + -8 | 0, i3 >>> 0 < 11 ? 16 : i3 + 11 & -8) | 0;
 if (i1 | 0) {
  i3 = i1 + 8 | 0;
  return i3 | 0;
 }
 i1 = _malloc(i3) | 0;
 if (!i1) {
  i3 = 0;
  return i3 | 0;
 }
 i4 = HEAP32[i2 + -4 >> 2] | 0;
 i4 = (i4 & -8) - ((i4 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy(i1 | 0, i2 | 0, (i4 >>> 0 < i3 >>> 0 ? i4 : i3) | 0) | 0;
 _free(i2);
 i3 = i1;
 return i3 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 4) | 0;
 if (!(HEAP32[i7 >> 2] & 4)) HEAP32[i6 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE(i1, i6, i2, i3, i7, i4) {
 i1 = i1 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i7 = i7 | 0;
 i4 = i4 | 0;
 var i5 = 0, i8 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i1 = i5 + 4 | 0;
 i8 = i5;
 HEAP32[i8 >> 2] = HEAP32[i3 >> 2];
 HEAP32[i1 >> 2] = HEAP32[i8 >> 2];
 i1 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi(i2, i1, i7, i4, 4) | 0;
 if (!(HEAP32[i7 >> 2] & 4)) HEAP32[i6 >> 2] = i1 + -1900;
 STACKTOP = i5;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc(i2, i3, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i1 = 0, i5 = 0, i6 = 0;
 i5 = i2 + 11 | 0;
 i1 = HEAP8[i5 >> 0] | 0;
 i6 = i1 << 24 >> 24 < 0;
 if (i6) i1 = HEAP32[i2 + 4 >> 2] | 0; else i1 = i1 & 255;
 do if (i1 >>> 0 >= i3 >>> 0) if (i6) {
  HEAP8[(HEAP32[i2 >> 2] | 0) + i3 >> 0] = 0;
  HEAP32[i2 + 4 >> 2] = i3;
  break;
 } else {
  HEAP8[i2 + i3 >> 0] = 0;
  HEAP8[i5 >> 0] = i3;
  break;
 } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc(i2, i3 - i1 | 0, i4) | 0; while (0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci(i4, i1, i5) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 16 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i5 | 0)) break;
  i2 = HEAP32[i6 >> 2] | 0;
  if (i2 >>> 0 < (HEAP32[i7 >> 2] | 0) >>> 0) {
   HEAP32[i6 >> 2] = i2 + 1;
   i2 = HEAP8[i2 >> 0] | 0;
  } else {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0;
   if ((i2 | 0) == -1) break;
   i2 = i2 & 255;
  }
  HEAP8[i1 >> 0] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i3 | 0;
}

function ___toread(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i1 = i2 + 74 | 0;
 i3 = HEAP8[i1 >> 0] | 0;
 HEAP8[i1 >> 0] = i3 + 255 | i3;
 i1 = i2 + 20 | 0;
 i3 = i2 + 44 | 0;
 if ((HEAP32[i1 >> 2] | 0) >>> 0 > (HEAP32[i3 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[i2 + 36 >> 2] & 63](i2, 0, 0) | 0;
 HEAP32[i2 + 16 >> 2] = 0;
 HEAP32[i2 + 28 >> 2] = 0;
 HEAP32[i1 >> 2] = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (i1 & 20) if (!(i1 & 4)) i1 = -1; else {
  HEAP32[i2 >> 2] = i1 | 32;
  i1 = -1;
 } else {
  i1 = HEAP32[i3 >> 2] | 0;
  HEAP32[i2 + 8 >> 2] = i1;
  HEAP32[i2 + 4 >> 2] = i1;
  i1 = 0;
 }
 return i1 | 0;
}

function _strtox_545(i4, i5, i1, i2, i3) {
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i6 = 0, i7 = 0, i8 = 0, i9 = 0;
 i9 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i7 = i9;
 HEAP32[i7 >> 2] = 0;
 i8 = i7 + 4 | 0;
 HEAP32[i8 >> 2] = i4;
 HEAP32[i7 + 44 >> 2] = i4;
 i6 = i7 + 8 | 0;
 HEAP32[i6 >> 2] = (i4 | 0) < 0 ? -1 : i4 + 2147483647 | 0;
 HEAP32[i7 + 76 >> 2] = -1;
 ___shlim(i7, 0);
 i1 = ___intscan(i7, i1, 1, i2, i3) | 0;
 if (i5 | 0) HEAP32[i5 >> 2] = i4 + ((HEAP32[i8 >> 2] | 0) + (HEAP32[i7 + 108 >> 2] | 0) - (HEAP32[i6 >> 2] | 0));
 STACKTOP = i9;
 return i1 | 0;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(i1, i3, i4, i5) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i2 = 0;
 i1 = i3 + 16 | 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2) {
  if ((i2 | 0) != (i4 | 0)) {
   i5 = i3 + 36 | 0;
   HEAP32[i5 >> 2] = (HEAP32[i5 >> 2] | 0) + 1;
   HEAP32[i3 + 24 >> 2] = 2;
   HEAP8[i3 + 54 >> 0] = 1;
   break;
  }
  i1 = i3 + 24 | 0;
  if ((HEAP32[i1 >> 2] | 0) == 2) HEAP32[i1 >> 2] = i5;
 } else {
  HEAP32[i1 >> 2] = i4;
  HEAP32[i3 + 24 >> 2] = i5;
  HEAP32[i3 + 36 >> 2] = 1;
 } while (0);
 return;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i7 = 0, i8 = 0, i9 = 0, i10 = 0;
 i10 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i10;
 HEAP8[i7 >> 0] = 37;
 i8 = i7 + 1 | 0;
 HEAP8[i8 >> 0] = i5;
 i9 = i7 + 2 | 0;
 HEAP8[i9 >> 0] = i6;
 HEAP8[i7 + 3 >> 0] = 0;
 if (i6 << 24 >> 24) {
  HEAP8[i8 >> 0] = i6;
  HEAP8[i9 >> 0] = i5;
 }
 HEAP32[i3 >> 2] = i2 + (_strftime_l(i2 | 0, (HEAP32[i3 >> 2] | 0) - i2 | 0, i7 | 0, i4 | 0, HEAP32[i1 >> 2] | 0) | 0);
 STACKTOP = i10;
 return;
}

function _fmt_u(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 if (i2 >>> 0 > 0 | (i2 | 0) == 0 & i3 >>> 0 > 4294967295) {
  while (1) {
   i4 = ___uremdi3(i3 | 0, i2 | 0, 10, 0) | 0;
   i1 = i1 + -1 | 0;
   HEAP8[i1 >> 0] = i4 | 48;
   i4 = i3;
   i3 = ___udivdi3(i3 | 0, i2 | 0, 10, 0) | 0;
   if (!(i2 >>> 0 > 9 | (i2 | 0) == 9 & i4 >>> 0 > 4294967295)) break; else i2 = tempRet0;
  }
  i2 = i3;
 } else i2 = i3;
 if (i2) while (1) {
  i1 = i1 + -1 | 0;
  HEAP8[i1 >> 0] = (i2 >>> 0) % 10 | 0 | 48;
  if (i2 >>> 0 < 10) break; else i2 = (i2 >>> 0) / 10 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi(i4, i1, i5) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 var i2 = 0, i3 = 0, i6 = 0, i7 = 0;
 i6 = i4 + 12 | 0;
 i7 = i4 + 16 | 0;
 i3 = 0;
 while (1) {
  if ((i3 | 0) >= (i5 | 0)) break;
  i2 = HEAP32[i6 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i7 >> 2] | 0) >>> 0) {
   i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 40 >> 2] & 127](i4) | 0;
   if ((i2 | 0) == -1) break;
  } else {
   HEAP32[i6 >> 2] = i2 + 4;
   i2 = HEAP32[i2 >> 2] | 0;
  }
  HEAP32[i1 >> 2] = i2;
  i3 = i3 + 1 | 0;
  i1 = i1 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i2 + 4 | 0;
 i1 = HEAP32[i6 >> 2] | 0;
 i5 = HEAP32[i2 >> 2] | 0;
 i4 = i1 - i5 >> 2;
 L1 : do if (i4 >>> 0 >= i3 >>> 0) {
  if (i4 >>> 0 > i3 >>> 0) {
   i2 = i5 + (i3 << 2) | 0;
   while (1) {
    if ((i1 | 0) == (i2 | 0)) break L1;
    i5 = i1 + -4 | 0;
    HEAP32[i6 >> 2] = i5;
    i1 = i5;
   }
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj(i2, i3 - i4 | 0); while (0);
 return;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_(i1, i3, i5, i2, i6) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i4 = 0, i7 = 0;
 i1 = i3;
 while (1) {
  if ((i2 | 0) == (i6 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i5 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP8[i1 >> 0] | 0;
  i4 = HEAP8[i2 >> 0] | 0;
  if (i3 << 24 >> 24 < i4 << 24 >> 24) {
   i1 = -1;
   break;
  }
  if (i4 << 24 >> 24 < i3 << 24 >> 24) {
   i1 = 1;
   break;
  }
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i5 | 0) & 1;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  if (i3) i4 = 6;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 >> 2] = i4;
  HEAP32[i1 + 8 >> 2] = i5 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
  i4 = 6;
 }
 if ((i4 | 0) == 6) _memcpy(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, i3, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i2 = i2 | 0;
 var i4 = 0, i5 = 0;
 if (i3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1);
 if (i3 >>> 0 < 11) {
  HEAP8[i1 + 11 >> 0] = i3;
  if (i3) i4 = 6;
 } else {
  i5 = i3 + 16 & -16;
  i4 = __Znwj(i5) | 0;
  HEAP32[i1 >> 2] = i4;
  HEAP32[i1 + 8 >> 2] = i5 | -2147483648;
  HEAP32[i1 + 4 >> 2] = i3;
  i1 = i4;
  i4 = 6;
 }
 if ((i4 | 0) == 6) _memset(i1 | 0, i2 | 0, i3 | 0) | 0;
 HEAP8[i1 + i3 >> 0] = 0;
 return;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16704] | 0) == 0 ? ___cxa_guard_acquire(16704) | 0 : 0) {
  HEAP32[4945] = 0;
  HEAP32[4946] = 0;
  HEAP32[4947] = 0;
  __THREW__ = 0;
  i1 = invoke_ii(69, 6524) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_viii(7, 19780, 6524, i1 | 0), i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   ___cxa_atexit(120, 19780, ___dso_handle | 0) | 0;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return 19780;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16712] | 0) == 0 ? ___cxa_guard_acquire(16712) | 0 : 0) {
  HEAP32[4948] = 0;
  HEAP32[4949] = 0;
  HEAP32[4950] = 0;
  __THREW__ = 0;
  i1 = invoke_ii(69, 6560) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_viii(7, 19792, 6560, i1 | 0), i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   ___cxa_atexit(120, 19792, ___dso_handle | 0) | 0;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return 19792;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16720] | 0) == 0 ? ___cxa_guard_acquire(16720) | 0 : 0) {
  HEAP32[4951] = 0;
  HEAP32[4952] = 0;
  HEAP32[4953] = 0;
  __THREW__ = 0;
  i1 = invoke_ii(69, 6608) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_viii(7, 19804, 6608, i1 | 0), i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   ___cxa_atexit(120, 19804, ___dso_handle | 0) | 0;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return 19804;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 do if ((HEAP8[16696] | 0) == 0 ? ___cxa_guard_acquire(16696) | 0 : 0) {
  HEAP32[4942] = 0;
  HEAP32[4943] = 0;
  HEAP32[4944] = 0;
  __THREW__ = 0;
  i1 = invoke_ii(69, 6488) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (!(i2 & 1) ? (__THREW__ = 0, invoke_viii(7, 19768, 6488, i1 | 0), i2 = __THREW__, __THREW__ = 0, !(i2 & 1)) : 0) {
   ___cxa_atexit(120, 19768, ___dso_handle | 0) | 0;
   break;
  }
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } while (0);
 return 19768;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_(i3, i4, i5, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i3 + 12 >> 2] = 0;
 HEAP32[i3 + 16 >> 2] = i1;
 do if (i4) {
  i2 = i1 + 112 | 0;
  if (i4 >>> 0 < 29 & (HEAP8[i2 >> 0] | 0) == 0) {
   HEAP8[i2 >> 0] = 1;
   break;
  } else {
   i1 = __Znwj(i4 << 2) | 0;
   break;
  }
 } else i1 = 0; while (0);
 HEAP32[i3 >> 2] = i1;
 i5 = i1 + (i5 << 2) | 0;
 HEAP32[i3 + 8 >> 2] = i5;
 HEAP32[i3 + 4 >> 2] = i5;
 HEAP32[i3 + 12 >> 2] = i1 + (i4 << 2);
 return;
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEEaSEOSF_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i3 + 1 | 0;
 HEAP8[i4 >> 0] = HEAP8[i3 >> 0] | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE13__move_assignERSF_NS_17integral_constantIbLb1EEE(i1, i2, i4);
 STACKTOP = i3;
 return i1 | 0;
}

function __ZNSt3__26locale5__impD2Ev(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 HEAP32[i3 >> 2] = 8368;
 i4 = i3 + 8 | 0;
 i5 = i3 + 12 | 0;
 i2 = 0;
 while (1) {
  i1 = HEAP32[i4 >> 2] | 0;
  if (i2 >>> 0 >= (HEAP32[i5 >> 2] | 0) - i1 >> 2 >>> 0) break;
  i1 = HEAP32[i1 + (i2 << 2) >> 2] | 0;
  if (i1 | 0) __ZNSt3__214__shared_count16__release_sharedEv(i1) | 0;
  i2 = i2 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i3 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4);
 return;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_(i1, i3, i5, i2, i6) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 i6 = i6 | 0;
 var i4 = 0, i7 = 0;
 i1 = i3;
 while (1) {
  if ((i2 | 0) == (i6 | 0)) {
   i7 = 7;
   break;
  }
  if ((i1 | 0) == (i5 | 0)) {
   i1 = -1;
   break;
  }
  i3 = HEAP32[i1 >> 2] | 0;
  i4 = HEAP32[i2 >> 2] | 0;
  if ((i3 | 0) < (i4 | 0)) {
   i1 = -1;
   break;
  }
  if ((i4 | 0) < (i3 | 0)) {
   i1 = 1;
   break;
  }
  i2 = i2 + 4 | 0;
  i1 = i1 + 4 | 0;
 }
 if ((i7 | 0) == 7) i1 = (i1 | 0) != (i5 | 0) & 1;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i2 + 4 | 0;
 i1 = i2;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i2;
 return i7 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i2 + 4 | 0;
 i1 = i2;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i2;
 return i7 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i2 + 4 | 0;
 i1 = i2;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i2;
 return i7 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 var i9 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i9 = i2 + 4 | 0;
 i1 = i2;
 HEAP32[i9 >> 2] = i3;
 HEAP32[i1 >> 2] = i6;
 i7 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE(i3, i4, i9, i6, i7, i1, 1114111, 0) | 0;
 HEAP32[i5 >> 2] = HEAP32[i9 >> 2];
 HEAP32[i8 >> 2] = HEAP32[i1 >> 2];
 STACKTOP = i2;
 return i7 | 0;
}

function _strlen(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i4 = i1;
 L1 : do if (!(i4 & 3)) i3 = 4; else {
  i2 = i4;
  while (1) {
   if (!(HEAP8[i1 >> 0] | 0)) {
    i1 = i2;
    break L1;
   }
   i1 = i1 + 1 | 0;
   i2 = i1;
   if (!(i2 & 3)) {
    i3 = 4;
    break;
   }
  }
 } while (0);
 if ((i3 | 0) == 4) {
  while (1) {
   i2 = HEAP32[i1 >> 2] | 0;
   if (!((i2 & -2139062144 ^ -2139062144) & i2 + -16843009)) i1 = i1 + 4 | 0; else break;
  }
  if ((i2 & 255) << 24 >> 24) do i1 = i1 + 1 | 0; while ((HEAP8[i1 >> 0] | 0) != 0);
 }
 return i1 - i4 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i1 = HEAP32[i1 + 8 >> 2] | 0;
 if (i1) {
  __THREW__ = 0;
  i1 = invoke_ii(68, i1 | 0) | 0;
  i3 = __THREW__;
  __THREW__ = 0;
  if (i3 & 1) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  }
  if ((i1 | 0) != 0 ? (__THREW__ = 0, invoke_ii(68, i1 | 0) | 0, i3 = __THREW__, __THREW__ = 0, i3 & 1) : 0) {
   i3 = ___cxa_find_matching_catch_3(0) | 0;
   ___clang_call_terminate(i3);
  } else i2 = 4;
 } else i2 = 1;
 return i2 | 0;
}

function __ZNSt3__28ios_base4InitD2Ev(i1) {
 i1 = i1 | 0;
 __THREW__ = 0;
 invoke_ii(66, 18012) | 0;
 i1 = __THREW__;
 __THREW__ = 0;
 if (!(i1 & 1) ? (__THREW__ = 0, invoke_ii(67, 18096) | 0, i1 = __THREW__, __THREW__ = 0, !(i1 & 1)) : 0) {
  __THREW__ = 0;
  invoke_ii(66, 18348) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if (!(i1 & 1) ? (__THREW__ = 0, invoke_ii(67, 18432) | 0, i1 = __THREW__, __THREW__ = 0, !(i1 & 1)) : 0) return;
  i1 = ___cxa_find_matching_catch_3(0) | 0;
 } else i1 = ___cxa_find_matching_catch_3(0) | 0;
 ___clang_call_terminate(i1);
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20684) | 0;
 i3 = i1 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i2 = i1 + 44 | 0;
 HEAP32[i2 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP8[i1 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 if ((HEAP32[i2 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(13410);
 return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20676) | 0;
 i3 = i1 + 36 | 0;
 HEAP32[i3 >> 2] = i4;
 i2 = i1 + 44 | 0;
 HEAP32[i2 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[i4 >> 2] | 0) + 24 >> 2] & 127](i4) | 0;
 i3 = HEAP32[i3 >> 2] | 0;
 HEAP8[i1 + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i3 >> 2] | 0) + 28 >> 2] & 127](i3) | 0) & 1;
 if ((HEAP32[i2 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(13410);
 return;
}

function __ZNSt3__28ios_base7failureC2EPKcRKNS_10error_codeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4 + 8 | 0;
 i6 = i4;
 i8 = i3;
 i7 = HEAP32[i8 + 4 >> 2] | 0;
 i3 = i6;
 HEAP32[i3 >> 2] = HEAP32[i8 >> 2];
 HEAP32[i3 + 4 >> 2] = i7;
 HEAP32[i5 >> 2] = HEAP32[i6 >> 2];
 HEAP32[i5 + 4 >> 2] = HEAP32[i6 + 4 >> 2];
 __ZNSt3__212system_errorC2ENS_10error_codeEPKc(i1, i5, i2);
 HEAP32[i1 >> 2] = 5720;
 STACKTOP = i4;
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev(i4) {
 i4 = i4 | 0;
 var i1 = 0, i2 = 0, i3 = 0, i5 = 0;
 i1 = HEAP32[i4 + 4 >> 2] | 0;
 i2 = i4 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 while (1) {
  if ((i3 | 0) == (i1 | 0)) break;
  i5 = i3 + -4 | 0;
  HEAP32[i2 >> 2] = i5;
  i3 = i5;
 }
 i2 = HEAP32[i4 >> 2] | 0;
 do if (i2 | 0) {
  i1 = HEAP32[i4 + 16 >> 2] | 0;
  if ((i1 | 0) == (i2 | 0)) {
   HEAP8[i1 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__219__libcpp_snprintf_lEPcjP15__locale_structPKcz(i3, i4, i1, i5, i2) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 var i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i7 = i6;
 HEAP32[i7 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsnprintf(i3, i4, i5, i7) | 0;
 if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i7 = __THREW__, __THREW__ = 0, i7 & 1) : 0) {
  i7 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i7);
 }
 STACKTOP = i6;
 return i1 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 HEAP32[i1 >> 2] = 8320;
 i2 = i1 + 8 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 __THREW__ = 0;
 i4 = invoke_i(1) | 0;
 i5 = __THREW__;
 __THREW__ = 0;
 do if (!(i5 & 1)) {
  if ((i3 | 0) != (i4 | 0) ? (__THREW__ = 0, invoke_vi(121, HEAP32[i2 >> 2] | 0), i5 = __THREW__, __THREW__ = 0, i5 & 1) : 0) break;
  return;
 } while (0);
 i5 = ___cxa_find_matching_catch_3(0) | 0;
 __ZNSt3__26locale5facetD2Ev(i1);
 ___clang_call_terminate(i5);
}

function _strerror(i2) {
 i2 = i2 | 0;
 var i1 = 0, i3 = 0;
 i3 = 0;
 while (1) {
  if ((HEAPU8[10944 + i3 >> 0] | 0) == (i2 | 0)) {
   i2 = 2;
   break;
  }
  i1 = i3 + 1 | 0;
  if ((i1 | 0) == 87) {
   i1 = 11032;
   i3 = 87;
   i2 = 5;
   break;
  } else i3 = i1;
 }
 if ((i2 | 0) == 2) if (!i3) i1 = 11032; else {
  i1 = 11032;
  i2 = 5;
 }
 if ((i2 | 0) == 5) while (1) {
  do {
   i2 = i1;
   i1 = i1 + 1 | 0;
  } while ((HEAP8[i2 >> 0] | 0) != 0);
  i3 = i3 + -1 | 0;
  if (!i3) break; else i2 = 5;
 }
 return i1 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i1 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5); else {
  i1 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 20 >> 2] & 7](i1, i2, i3, i4, i5, i6);
 }
 return;
}

function __Z3foov() {
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i1;
 i3 = HEAP32[4316] | 0;
 __ZL7MakeMapv(i2);
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEEaSEOSF_(i3, i2) | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEED2Ev(i2);
 STACKTOP = i1;
 return;
}

function __Z3barv() {
 var i1 = 0, i2 = 0, i3 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i1;
 i3 = HEAP32[4317] | 0;
 __ZL7MakeMapv(i2);
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEEaSEOSF_(i3, i2) | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEED2Ev(i2);
 STACKTOP = i1;
 return;
}

function dynCall_viiiiiiiiiiiiiii(i16, i1, i8, i9, i10, i11, i12, i13, i14, i15, i2, i3, i4, i5, i6, i7) {
 i16 = i16 | 0;
 i1 = i1 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiiiiiiiiiiiiii[i16 & 3](i1 | 0, i8 | 0, i9 | 0, i10 | 0, i11 | 0, i12 | 0, i13 | 0, i14 | 0, i15 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i2;
 i2 = _uselocale(i1) | 0;
 i1 = _vsscanf(i3, i4, i6) | 0;
 if (i2 | 0 ? (__THREW__ = 0, invoke_ii(68, i2 | 0) | 0, i6 = __THREW__, __THREW__ = 0, i6 & 1) : 0) {
  i6 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i6);
 }
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 if ((HEAP8[i2 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0); else {
  HEAP32[i1 >> 2] = HEAP32[i2 >> 2];
  HEAP32[i1 + 4 >> 2] = HEAP32[i2 + 4 >> 2];
  HEAP32[i1 + 8 >> 2] = HEAP32[i2 + 8 >> 2];
 }
 return;
}

function __ZSt9terminatev() {
 var i1 = 0, i2 = 0, i3 = 0;
 __THREW__ = 0;
 i1 = invoke_i(8) | 0;
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i3);
 }
 if ((i1 | 0 ? (i2 = HEAP32[i1 >> 2] | 0, i2 | 0) : 0) ? (i3 = i2 + 48 | 0, (HEAP32[i3 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[i3 + 4 >> 2] | 0) == 1129074247 : 0) : 0) __ZSt11__terminatePFvvE(HEAP32[i2 + 12 >> 2] | 0);
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function ___stdio_seek(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i6 = i5;
 i4 = i5 + 20 | 0;
 HEAP32[i6 >> 2] = HEAP32[i1 + 60 >> 2];
 HEAP32[i6 + 4 >> 2] = 0;
 HEAP32[i6 + 8 >> 2] = i2;
 HEAP32[i6 + 12 >> 2] = i4;
 HEAP32[i6 + 16 >> 2] = i3;
 if ((___syscall_ret(___syscall140(140, i6 | 0) | 0) | 0) < 0) {
  HEAP32[i4 >> 2] = -1;
  i1 = -1;
 } else i1 = HEAP32[i4 >> 2] | 0;
 STACKTOP = i5;
 return i1 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i2, i3, i4, i5, i6, i7) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 var i1 = 0, i8 = 0;
 i8 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i8 >> 8;
 if (i8 & 1) i1 = HEAP32[(HEAP32[i5 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 20 >> 2] & 7](i2, i3, i4, i5 + i1 | 0, i8 & 2 | 0 ? i6 : 2, i7);
 return;
}

function __ZNSt3__219__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0, i5 = 0;
 i4 = HEAP32[i3 >> 2] | 0;
 i5 = i4 + 4 | 0;
 i1 = HEAP32[i5 >> 2] | 0;
 HEAP32[i3 >> 2] = i1;
 if (i1 | 0) HEAP32[i1 + 8 >> 2] = i3;
 i1 = i3 + 8 | 0;
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 >> 2];
 i2 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i2 >> 2] | 0) == (i3 | 0)) HEAP32[i2 >> 2] = i4; else HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i1 >> 2] = i4;
 return;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv(i1) {
 i1 = i1 | 0;
 do if ((HEAP8[16632] | 0) == 0 ? ___cxa_guard_acquire(16632) | 0 : 0) {
  HEAP32[4745] = 0;
  HEAP32[4746] = 0;
  HEAP32[4747] = 0;
  __THREW__ = 0;
  invoke_viii(3, 18980, 14043, 11);
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   ___cxa_atexit(116, 18980, ___dso_handle | 0) | 0;
   break;
  }
 } while (0);
 return 18980;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv(i1) {
 i1 = i1 | 0;
 do if ((HEAP8[16640] | 0) == 0 ? ___cxa_guard_acquire(16640) | 0 : 0) {
  HEAP32[4748] = 0;
  HEAP32[4749] = 0;
  HEAP32[4750] = 0;
  __THREW__ = 0;
  invoke_viii(3, 18992, 14055, 20);
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   ___cxa_atexit(116, 18992, ___dso_handle | 0) | 0;
   break;
  }
 } while (0);
 return 18992;
}

function __ZNKSt3__220__time_get_c_storageIcE3__xEv(i1) {
 i1 = i1 | 0;
 do if ((HEAP8[16624] | 0) == 0 ? ___cxa_guard_acquire(16624) | 0 : 0) {
  HEAP32[4742] = 0;
  HEAP32[4743] = 0;
  HEAP32[4744] = 0;
  __THREW__ = 0;
  invoke_viii(3, 18968, 14034, 8);
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   ___cxa_atexit(116, 18968, ___dso_handle | 0) | 0;
   break;
  }
 } while (0);
 return 18968;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv(i1) {
 i1 = i1 | 0;
 do if ((HEAP8[16616] | 0) == 0 ? ___cxa_guard_acquire(16616) | 0 : 0) {
  HEAP32[4739] = 0;
  HEAP32[4740] = 0;
  HEAP32[4741] = 0;
  __THREW__ = 0;
  invoke_viii(3, 18956, 14025, 8);
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   ___cxa_atexit(116, 18956, ___dso_handle | 0) | 0;
   break;
  }
 } while (0);
 return 18956;
}

function __ZNSt3__218__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_(i3) {
 i3 = i3 | 0;
 var i1 = 0, i2 = 0, i4 = 0;
 i2 = i3 + 4 | 0;
 i4 = HEAP32[i2 >> 2] | 0;
 i1 = HEAP32[i4 >> 2] | 0;
 HEAP32[i2 >> 2] = i1;
 if (i1 | 0) HEAP32[i1 + 8 >> 2] = i3;
 i1 = i3 + 8 | 0;
 HEAP32[i4 + 8 >> 2] = HEAP32[i1 >> 2];
 i2 = HEAP32[i1 >> 2] | 0;
 if ((HEAP32[i2 >> 2] | 0) == (i3 | 0)) HEAP32[i2 >> 2] = i4; else HEAP32[i2 + 4 >> 2] = i4;
 HEAP32[i4 >> 2] = i3;
 HEAP32[i1 >> 2] = i4;
 return;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 do if (i2 | 0) {
  i3 = i1 + 4 | 0;
  i4 = HEAP32[i3 >> 2] | 0;
  while (1) {
   if ((i4 | 0) == (i2 | 0)) break;
   i5 = i4 + -4 | 0;
   HEAP32[i3 >> 2] = i5;
   i4 = i5;
  }
  if ((i1 + 16 | 0) == (i2 | 0)) {
   HEAP8[i1 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv(i2);
   break;
  }
 } while (0);
 return;
}

function _wmemmove(i4, i3, i1) {
 i4 = i4 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 i2 = (i1 | 0) == 0;
 if (i4 - i3 >> 2 >>> 0 < i1 >>> 0) {
  if (!i2) do {
   i1 = i1 + -1 | 0;
   HEAP32[i4 + (i1 << 2) >> 2] = HEAP32[i3 + (i1 << 2) >> 2];
  } while ((i1 | 0) != 0);
 } else if (!i2) {
  i2 = i3;
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 if (i3 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i2);
 i1 = i2 + 128 | 0;
 if (i3 >>> 0 < 29 & (HEAP8[i1 >> 0] | 0) == 0) {
  HEAP8[i1 >> 0] = 1;
  i1 = i2 + 16 | 0;
 } else i1 = __Znwj(i3 << 2) | 0;
 HEAP32[i2 + 4 >> 2] = i1;
 HEAP32[i2 >> 2] = i1;
 HEAP32[i2 + 8 >> 2] = i1 + (i3 << 2);
 return;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwi(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0;
 L1 : do if (!(HEAP8[i3 + 44 >> 0] | 0)) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i4 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] & 31](i3, HEAP32[i2 >> 2] | 0) | 0) == -1) break L1;
   i1 = i1 + 1 | 0;
   i2 = i2 + 4 | 0;
  }
 } else i1 = _fwrite(i2, 4, i4, HEAP32[i3 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKci(i3, i2, i4) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 var i1 = 0;
 L1 : do if (!(HEAP8[i3 + 44 >> 0] | 0)) {
  i1 = 0;
  while (1) {
   if ((i1 | 0) >= (i4 | 0)) break L1;
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[i3 >> 2] | 0) + 52 >> 2] & 31](i3, HEAPU8[i2 >> 0] | 0) | 0) == -1) break L1;
   i1 = i1 + 1 | 0;
   i2 = i2 + 1 | 0;
  }
 } else i1 = _fwrite(i2, 1, i4, HEAP32[i3 + 32 >> 2] | 0) | 0; while (0);
 return i1 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib(i2, i3, i4, i5, i6) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 var i1 = 0, i7 = 0;
 i7 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i7 >> 8;
 if (i7 & 1) i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 24 >> 2] & 3](i2, i3, i4 + i1 | 0, i7 & 2 | 0 ? i5 : 2, i6);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i1 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4); else {
  i1 = HEAP32[i1 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 28 >> 2] & 7](i1, i2, i3, i4);
 }
 return;
}

function __ZNSt3__26locale2id5__getEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 i2 = i5 + 16 | 0;
 i3 = i5 + 12 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = i1;
 HEAP32[i4 + 4 >> 2] = 111;
 HEAP32[i4 + 8 >> 2] = 0;
 if ((HEAP32[i1 >> 2] | 0) != -1) {
  HEAP32[i2 >> 2] = i4;
  HEAP32[i3 >> 2] = i2;
  __ZNSt3__211__call_onceERVmPvPFvS2_E(i1, i3, 112);
 }
 STACKTOP = i5;
 return (HEAP32[i1 + 4 >> 2] | 0) + -1 | 0;
}

function ___towrite(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = i1 + 74 | 0;
 i3 = HEAP8[i2 >> 0] | 0;
 HEAP8[i2 >> 0] = i3 + 255 | i3;
 i2 = HEAP32[i1 >> 2] | 0;
 if (!(i2 & 8)) {
  HEAP32[i1 + 8 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  i3 = HEAP32[i1 + 44 >> 2] | 0;
  HEAP32[i1 + 28 >> 2] = i3;
  HEAP32[i1 + 20 >> 2] = i3;
  HEAP32[i1 + 16 >> 2] = i3 + (HEAP32[i1 + 48 >> 2] | 0);
  i1 = 0;
 } else {
  HEAP32[i1 >> 2] = i2 | 32;
  i1 = -1;
 }
 return i1 | 0;
}

function _sbrk(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 15 & -16 | 0;
 i2 = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 i1 = i2 + i3 | 0;
 if ((i3 | 0) > 0 & (i1 | 0) < (i2 | 0) | (i1 | 0) < 0) {
  abortOnCannotGrowMemory() | 0;
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = i1;
 if ((i1 | 0) > (getTotalMemory() | 0) ? (enlargeMemory() | 0) == 0 : 0) {
  ___setErrNo(12);
  HEAP32[DYNAMICTOP_PTR >> 2] = i2;
  return -1;
 }
 return i2 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i2, i3, i4, i5) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 var i1 = 0, i6 = 0;
 i6 = HEAP32[i2 + 4 >> 2] | 0;
 i1 = i6 >> 8;
 if (i6 & 1) i1 = HEAP32[(HEAP32[i4 >> 2] | 0) + i1 >> 2] | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 7](i2, i3, i4 + i1 | 0, i6 & 2 | 0 ? i5 : 2);
 return;
}

function __ZNSt3__28ios_baseD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 5416;
 __THREW__ = 0;
 invoke_vii(42, i1 | 0, 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i2);
 } else {
  __ZNSt3__26localeD2Ev(i1 + 28 | 0);
  _free(HEAP32[i1 + 32 >> 2] | 0);
  _free(HEAP32[i1 + 36 >> 2] | 0);
  _free(HEAP32[i1 + 48 >> 2] | 0);
  _free(HEAP32[i1 + 60 >> 2] | 0);
  return;
 }
}

function ___stdout_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 i4 = i5;
 HEAP32[i1 + 36 >> 2] = 1;
 if ((HEAP32[i1 >> 2] & 64 | 0) == 0 ? (HEAP32[i4 >> 2] = HEAP32[i1 + 60 >> 2], HEAP32[i4 + 4 >> 2] = 21505, HEAP32[i4 + 8 >> 2] = i5 + 12, ___syscall54(54, i4 | 0) | 0) : 0) HEAP8[i1 + 75 >> 0] = -1;
 i4 = ___stdio_write(i1, i2, i3) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function _vsscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 i4 = i6;
 i5 = i4;
 i7 = i5 + 112 | 0;
 do {
  HEAP32[i5 >> 2] = 0;
  i5 = i5 + 4 | 0;
 } while ((i5 | 0) < (i7 | 0));
 HEAP32[i4 + 32 >> 2] = 28;
 HEAP32[i4 + 44 >> 2] = i1;
 HEAP32[i4 + 76 >> 2] = -1;
 HEAP32[i4 + 84 >> 2] = i1;
 i7 = _vfscanf(i4, i2, i3) | 0;
 STACKTOP = i6;
 return i7 | 0;
}

function __Znwj(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (i1 | 0) == 0 ? 1 : i1;
 while (1) {
  i3 = _malloc(i2) | 0;
  if (i3 | 0) {
   i1 = 6;
   break;
  }
  i1 = __ZSt15get_new_handlerv() | 0;
  if (!i1) {
   i1 = 5;
   break;
  }
  FUNCTION_TABLE_v[i1 & 7]();
 }
 if ((i1 | 0) == 5) {
  i3 = ___cxa_allocate_exception(4) | 0;
  __ZNSt9bad_allocC2Ev(i3);
  ___cxa_throw(i3 | 0, 1488, 97);
 } else if ((i1 | 0) == 6) return i3 | 0;
 return 0;
}

function __ZNKSt3__214error_category10equivalentEiRKNS_15error_conditionE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i5;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[i1 >> 2] | 0) + 12 >> 2] & 15](i4, i1, i2);
 if ((HEAP32[i4 + 4 >> 2] | 0) == (HEAP32[i3 + 4 >> 2] | 0)) i1 = (HEAP32[i4 >> 2] | 0) == (HEAP32[i3 >> 2] | 0); else i1 = 0;
 STACKTOP = i5;
 return i1 | 0;
}

function ___string_read(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0, i6 = 0, i7 = 0;
 i4 = i1 + 84 | 0;
 i6 = HEAP32[i4 >> 2] | 0;
 i7 = i3 + 256 | 0;
 i5 = _memchr(i6, 0, i7) | 0;
 i5 = (i5 | 0) == 0 ? i7 : i5 - i6 | 0;
 i3 = i5 >>> 0 < i3 >>> 0 ? i5 : i3;
 _memcpy(i2 | 0, i6 | 0, i3 | 0) | 0;
 HEAP32[i1 + 4 >> 2] = i6 + i3;
 i2 = i6 + i5 | 0;
 HEAP32[i1 + 8 >> 2] = i2;
 HEAP32[i4 >> 2] = i2;
 return i3 | 0;
}

function __ZNSt3__28ios_base4initEPv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 + 24 >> 2] = i1;
 HEAP32[i2 + 16 >> 2] = (i1 | 0) == 0 & 1;
 HEAP32[i2 + 20 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 4098;
 HEAP32[i2 + 12 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 6;
 i3 = i2 + 28 | 0;
 i1 = i2 + 32 | 0;
 i2 = i1 + 40 | 0;
 do {
  HEAP32[i1 >> 2] = 0;
  i1 = i1 + 4 | 0;
 } while ((i1 | 0) < (i2 | 0));
 __ZNSt3__26localeC2Ev(i3);
 return;
}

function _strcmp(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0;
 i1 = HEAP8[i2 >> 0] | 0;
 i4 = HEAP8[i3 >> 0] | 0;
 if (i1 << 24 >> 24 == 0 ? 1 : i1 << 24 >> 24 != i4 << 24 >> 24) i2 = i4; else {
  do {
   i2 = i2 + 1 | 0;
   i3 = i3 + 1 | 0;
   i1 = HEAP8[i2 >> 0] | 0;
   i4 = HEAP8[i3 >> 0] | 0;
  } while (!(i1 << 24 >> 24 == 0 ? 1 : i1 << 24 >> 24 != i4 << 24 >> 24));
  i2 = i4;
 }
 return (i1 & 255) - (i2 & 255) | 0;
}

function __ZNSt3__210__time_putD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0, i4 = 0;
 i2 = HEAP32[i1 >> 2] | 0;
 __THREW__ = 0;
 i3 = invoke_i(1) | 0;
 i4 = __THREW__;
 __THREW__ = 0;
 do if (!(i4 & 1)) {
  if ((i2 | 0) != (i3 | 0) ? (__THREW__ = 0, invoke_vi(121, HEAP32[i1 >> 2] | 0), i4 = __THREW__, __THREW__ = 0, i4 & 1) : 0) break;
  return;
 } while (0);
 i4 = ___cxa_find_matching_catch_3(0) | 0;
 ___clang_call_terminate(i4);
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(50, i1 | 0, 15771);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___cxa_free_exception(i1 | 0);
  ___resumeException(i2 | 0);
 } else {
  HEAP32[i1 >> 2] = 8964;
  ___cxa_throw(i1 | 0, 1536, 99);
 }
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i1 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(50, i1 | 0, 15739);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___cxa_free_exception(i1 | 0);
  ___resumeException(i2 | 0);
 } else {
  HEAP32[i1 >> 2] = 8964;
  ___cxa_throw(i1 | 0, 1536, 99);
 }
}

function __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(i1, HEAP32[i1 + 4 >> 2] | 0);
 return;
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0, i4 = 0, i5 = 0, i6 = 0;
 i4 = i2 + 32 | 0;
 i5 = i2 + 36 | 0;
 i1 = HEAP32[i2 + 40 >> 2] | 0;
 while (1) {
  if (!i1) break;
  i6 = i1 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[i4 >> 2] | 0) + (i6 << 2) >> 2] & 15](i3, i2, HEAP32[(HEAP32[i5 >> 2] | 0) + (i6 << 2) >> 2] | 0);
  i1 = i6;
 }
 return;
}

function __ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 8944;
 __THREW__ = 0;
 invoke_vii(83, i1 + 4 | 0, ((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2) | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } else return;
}

function ___muldsi3(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0, i6 = 0;
 i6 = i1 & 65535;
 i5 = i2 & 65535;
 i3 = Math_imul(i5, i6) | 0;
 i4 = i1 >>> 16;
 i1 = (i3 >>> 16) + (Math_imul(i5, i4) | 0) | 0;
 i5 = i2 >>> 16;
 i2 = Math_imul(i5, i6) | 0;
 return (tempRet0 = (i1 >>> 16) + (Math_imul(i5, i4) | 0) + (((i1 & 65535) + i2 | 0) >>> 16) | 0, i1 + i2 << 16 | i3 & 65535 | 0) | 0;
}

function __ZNSt3__26__clocEv() {
 var i1 = 0, i2 = 0;
 do if ((HEAP8[16608] | 0) == 0 ? ___cxa_guard_acquire(16608) | 0 : 0) {
  __THREW__ = 0;
  i1 = invoke_iiii(29, 2147483647, 13594, 0) | 0;
  i2 = __THREW__;
  __THREW__ = 0;
  if (i2 & 1) {
   i2 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i2 | 0);
  } else {
   HEAP32[4723] = i1;
   break;
  }
 } while (0);
 return HEAP32[4723] | 0;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc(i1, i4, i5, i6, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i2 = i2 | 0;
 var i3 = 0, i7 = 0;
 i3 = (i5 - i4 | 0) >>> 2;
 i1 = i2;
 i2 = i4;
 while (1) {
  if ((i2 | 0) == (i5 | 0)) break;
  i7 = HEAP32[i2 >> 2] | 0;
  HEAP8[i1 >> 0] = i7 >>> 0 < 128 ? i7 & 255 : i6;
  i1 = i1 + 1 | 0;
  i2 = i2 + 4 | 0;
 }
 return i4 + (i3 << 2) | 0;
}

function _copysign(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 var i3 = 0, i4 = 0;
 HEAPF64[tempDoublePtr >> 3] = d1;
 i4 = HEAP32[tempDoublePtr >> 2] | 0;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = d2;
 i3 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | i3 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = i4;
 HEAP32[tempDoublePtr + 4 >> 2] = i3;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP8[i2 >> 0] = 0;
 HEAP32[i2 + 4 >> 2] = i1;
 i1 = i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[i1 + 16 >> 2] | 0)) {
  i1 = HEAP32[i1 + 72 >> 2] | 0;
  if (i1 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv(i1) | 0;
  HEAP8[i2 >> 0] = 1;
 }
 return;
}

function _fwrite(i2, i4, i1, i3) {
 i2 = i2 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i5 = 0, i6 = 0;
 i5 = Math_imul(i1, i4) | 0;
 if ((HEAP32[i3 + 76 >> 2] | 0) > -1) {
  i6 = (___lockfile(i3) | 0) == 0;
  i2 = ___fwritex(i2, i5, i3) | 0;
  if (!i6) ___unlockfile(i3);
 } else i2 = ___fwritex(i2, i5, i3) | 0;
 if ((i2 | 0) != (i5 | 0)) i1 = (i2 >>> 0) / (i4 >>> 0) | 0;
 return i1 | 0;
}

function dynCall_iiiiiiiiiiii(i12, i1, i4, i5, i6, i7, i8, i9, i10, i11, i2, i3) {
 i12 = i12 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiiiiiiiiiii[i12 & 3](i1 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0, i9 | 0, i10 | 0, i11 | 0, i2 | 0, i3 | 0) | 0;
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_(i2, i3, i1, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i1 = i4;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 >= 128) break;
  if (!((HEAP16[(__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i2 << 1) >> 1] & i3) << 16 >> 16)) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function __ZNSt3__28numpunctIwEC2Ej(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 8480;
 HEAP32[i1 + 8 >> 2] = 46;
 HEAP32[i1 + 12 >> 2] = 44;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _newlocale(i2, i3, i1) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 var i4 = 0;
 if (((HEAP8[i3 >> 0] | 0) != 0 ? (_strcmp(i3, 13594) | 0) != 0 : 0) ? (_strcmp(i3, 12849) | 0) != 0 : 0) i1 = 0; else i4 = 4;
 do if ((i4 | 0) == 4) if (!i1) if (!(HEAP32[4331] | 0)) {
  HEAP32[4331] = 1;
  i1 = 17328;
  break;
 } else {
  i1 = _calloc(1, 4) | 0;
  break;
 } while (0);
 return i1 | 0;
}

function __ZNSt3__28numpunctIcEC2Ej(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 + 4 >> 2] = i2 + -1;
 HEAP32[i1 >> 2] = 8440;
 HEAP8[i1 + 8 >> 0] = 46;
 HEAP8[i1 + 9 >> 0] = 44;
 i2 = i1 + 12 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt(i1, i3, i4, i2) {
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i3 | 0) == (i4 | 0)) break;
  i1 = HEAP32[i3 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAPU16[(__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i1 << 1) >> 1] | 0; else i1 = 0;
  HEAP16[i2 >> 1] = i1;
  i2 = i2 + 2 | 0;
  i3 = i3 + 4 | 0;
 }
 return i4 | 0;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = HEAP32[HEAP32[i1 >> 2] >> 2] | 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 i3 = HEAP32[i2 + 8 >> 2] | 0;
 i2 = (HEAP32[i2 >> 2] | 0) + (i3 >> 1) | 0;
 if (i3 & 1) i1 = HEAP32[(HEAP32[i2 >> 2] | 0) + i1 >> 2] | 0;
 FUNCTION_TABLE_vi[i1 & 127](i2);
 return;
}

function __ZNKSt3__219__iostream_category7messageEi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if ((i3 | 0) != 1 & (i3 | 0) < 257) __ZNKSt3__212__do_message7messageEi(i1, i2, i3); else {
  HEAP32[i1 >> 2] = 0;
  HEAP32[i1 + 4 >> 2] = 0;
  HEAP32[i1 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 13269, 35);
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 if ((i1 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, i2, i3, i4, i5);
 return;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_(i2, i3, i1, i4) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) {
   i1 = i4;
   break;
  }
  i2 = HEAP32[i1 >> 2] | 0;
  if (i2 >>> 0 < 128 ? (HEAP16[(__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i2 << 1) >> 1] & i3) << 16 >> 16 : 0) break;
  i1 = i1 + 4 | 0;
 }
 return i1 | 0;
}

function _memmove(i1, i4, i2) {
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 if ((i4 | 0) < (i1 | 0) & (i1 | 0) < (i4 + i2 | 0)) {
  i3 = i1;
  i4 = i4 + i2 | 0;
  i1 = i1 + i2 | 0;
  while ((i2 | 0) > 0) {
   i1 = i1 - 1 | 0;
   i4 = i4 - 1 | 0;
   i2 = i2 - 1 | 0;
   HEAP8[i1 >> 0] = HEAP8[i4 >> 0] | 0;
  }
  i1 = i3;
 } else _memcpy(i1, i4, i2) | 0;
 return i1 | 0;
}

function __ZNSt3__26locale8__globalEv() {
 var i1 = 0;
 do if ((HEAP8[17256] | 0) == 0 ? ___cxa_guard_acquire(17256) | 0 : 0) {
  __THREW__ = 0;
  invoke_i(6) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   HEAP32[5180] = 20716;
   break;
  }
 } while (0);
 return HEAP32[5180] | 0;
}

function __ZNSt3__26locale7classicEv() {
 var i1 = 0;
 do if ((HEAP8[17088] | 0) == 0 ? ___cxa_guard_acquire(17088) | 0 : 0) {
  __THREW__ = 0;
  invoke_i(5) | 0;
  i1 = __THREW__;
  __THREW__ = 0;
  if (i1 & 1) {
   i1 = ___cxa_find_matching_catch_2() | 0;
   ___resumeException(i1 | 0);
  } else {
   HEAP32[5178] = 20708;
   break;
  }
 } while (0);
 return HEAP32[5178] | 0;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20684) | 0;
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP8[i1 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 24 >> 2] & 127](i1) | 0;
 i2 = __ZNKSt3__26locale9use_facetERNS0_2idE(i2, 20676) | 0;
 HEAP32[i1 + 36 >> 2] = i2;
 HEAP8[i1 + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[i2 >> 2] | 0) + 28 >> 2] & 127](i2) | 0) & 1;
 return;
}

function _llvm_cttz_i32(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP8[cttz_i8 + (i2 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 8 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 8 | 0;
 i1 = HEAP8[cttz_i8 + (i2 >> 16 & 255) >> 0] | 0;
 if ((i1 | 0) < 8) return i1 + 16 | 0;
 return (HEAP8[cttz_i8 + (i2 >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP8[i2 >> 0] | 0;
  if (i1 << 24 >> 24 > -1) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
  HEAP8[i2 >> 0] = i1;
  i2 = i2 + 1 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tEC2Ej(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 HEAP32[i2 + 4 >> 2] = i1 + -1;
 HEAP32[i2 >> 2] = 8320;
 __THREW__ = 0;
 i1 = invoke_i(1) | 0;
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i3 | 0);
 } else {
  HEAP32[i2 + 8 >> 2] = i1;
  return;
 }
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_(i1, i3, i4);
 return;
}

function ___cxa_can_catch(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i4 = i5;
 HEAP32[i4 >> 2] = HEAP32[i3 >> 2];
 i1 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[i1 >> 2] | 0) + 16 >> 2] & 63](i1, i2, i4) | 0;
 if (i1) HEAP32[i3 >> 2] = HEAP32[i4 >> 2];
 STACKTOP = i5;
 return i1 & 1 | 0;
}

function _calloc(i2, i3) {
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i1 = 0;
 if (i2) {
  i1 = Math_imul(i3, i2) | 0;
  if ((i3 | i2) >>> 0 > 65535) i1 = ((i1 >>> 0) / (i2 >>> 0) | 0 | 0) == (i3 | 0) ? i1 : -1;
 } else i1 = 0;
 i2 = _malloc(i1) | 0;
 if (!i2) return i2 | 0;
 if (!(HEAP32[i2 + -4 >> 2] & 3)) return i2 | 0;
 _memset(i2 | 0, 0, i1 | 0) | 0;
 return i2 | 0;
}

function __ZNSt3__221__throw_runtime_errorEPKc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(45, i2 | 0, i1 | 0);
 i1 = __THREW__;
 __THREW__ = 0;
 if (i1 & 1) {
  i1 = ___cxa_find_matching_catch_2() | 0;
  ___cxa_free_exception(i2 | 0);
  ___resumeException(i1 | 0);
 } else ___cxa_throw(i2 | 0, 1520, 101);
}

function __ZNSt3__26localeC2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 __THREW__ = 0;
 i2 = invoke_i(7) | 0;
 i3 = __THREW__;
 __THREW__ = 0;
 if (i3 & 1) {
  i3 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i3);
 } else {
  i3 = HEAP32[i2 >> 2] | 0;
  HEAP32[i1 >> 2] = i3;
  __ZNSt3__214__shared_count12__add_sharedEv(i3);
  return;
 }
}

function dynCall_viiiiiiiiii(i11, i1, i3, i4, i5, i6, i7, i8, i9, i10, i2) {
 i11 = i11 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_viiiiiiiiii[i11 & 7](i1 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0, i9 | 0, i10 | 0, i2 | 0);
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = i1 + 4 | 0;
 i1 = i2;
 i2 = HEAP32[i3 >> 2] | 0;
 do {
  HEAP32[i2 >> 2] = 0;
  i2 = (HEAP32[i3 >> 2] | 0) + 4 | 0;
  HEAP32[i3 >> 2] = i2;
  i1 = i1 + -1 | 0;
 } while ((i1 | 0) != 0);
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (i1 << 2) >> 2] | 0;
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 while (1) {
  if ((i2 | 0) == (i3 | 0)) break;
  i1 = HEAP32[i2 >> 2] | 0;
  if (i1 >>> 0 < 128) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 2) >> 2] | 0;
  HEAP32[i2 >> 2] = i1;
  i2 = i2 + 4 | 0;
 }
 return i3 | 0;
}

function __ZNSt3__211__tree_prevIPNS_16__tree_node_baseIPvEEEET_S5_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 >> 2] | 0;
 if (!i1) while (1) {
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) i2 = i1; else break;
 } else while (1) {
  i2 = HEAP32[i1 + 4 >> 2] | 0;
  if (!i2) break; else i1 = i2;
 }
 return i1 | 0;
}

function __ZNSt3__211__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = HEAP32[i2 + 4 >> 2] | 0;
 if (!i1) while (1) {
  i1 = HEAP32[i2 + 8 >> 2] | 0;
  if ((HEAP32[i1 >> 2] | 0) == (i2 | 0)) break; else i2 = i1;
 } else while (1) {
  i2 = HEAP32[i1 >> 2] | 0;
  if (!i2) break; else i1 = i2;
 }
 return i1 | 0;
}

function ___uflow(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3;
 if ((HEAP32[i1 + 8 >> 2] | 0) == 0 ? (___toread(i1) | 0) != 0 : 0) i1 = -1; else if ((FUNCTION_TABLE_iiii[HEAP32[i1 + 32 >> 2] & 63](i1, i2, 1) | 0) == 1) i1 = HEAPU8[i2 >> 0] | 0; else i1 = -1;
 STACKTOP = i3;
 return i1 | 0;
}

function _rand() {
 var i1 = 0, i2 = 0, i3 = 0;
 i2 = 16592;
 i2 = ___muldi3(HEAP32[i2 >> 2] | 0, HEAP32[i2 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 i2 = _i64Add(i2 | 0, tempRet0 | 0, 1, 0) | 0;
 i1 = tempRet0;
 i3 = 16592;
 HEAP32[i3 >> 2] = i2;
 HEAP32[i3 + 4 >> 2] = i1;
 i1 = _bitshift64Lshr(i2 | 0, i1 | 0, 33) | 0;
 return i1 | 0;
}

function ___shlim(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0, i5 = 0;
 HEAP32[i1 + 104 >> 2] = i2;
 i3 = HEAP32[i1 + 8 >> 2] | 0;
 i4 = HEAP32[i1 + 4 >> 2] | 0;
 i5 = i3 - i4 | 0;
 HEAP32[i1 + 108 >> 2] = i5;
 if ((i2 | 0) != 0 & (i5 | 0) > (i2 | 0)) HEAP32[i1 + 100 >> 2] = i4 + i2; else HEAP32[i1 + 100 >> 2] = i3;
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 if ((i1 | 0) == (HEAP32[i2 + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, i2, i3, i4);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i6 = i1;
 HEAP32[i6 >> 2] = 0;
 HEAP32[i6 + 4 >> 2] = 0;
 i6 = i1 + 8 | 0;
 HEAP32[i6 >> 2] = -1;
 HEAP32[i6 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__218__libcpp_refstringC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0, i4 = 0;
 i4 = _strlen(i2) | 0;
 i3 = __Znwj(i4 + 13 | 0) | 0;
 HEAP32[i3 >> 2] = i4;
 HEAP32[i3 + 4 >> 2] = i4;
 HEAP32[i3 + 8 >> 2] = 0;
 i3 = i3 + 12 | 0;
 _memcpy(i3 | 0, i2 | 0, i4 + 1 | 0) | 0;
 HEAP32[i1 >> 2] = i3;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5496;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 4;
  i1 = HEAP32[i1 >> 2] | 0;
 }
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5432;
 __ZNSt3__26localeC2Ev(i1 + 4 | 0);
 i1 = i1 + 8 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 HEAP32[i1 + 12 >> 2] = 0;
 HEAP32[i1 + 16 >> 2] = 0;
 HEAP32[i1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[i1 >> 2] | 0) + 36 >> 2] & 127](i1) | 0) == -1) i1 = -1; else {
  i2 = i1 + 12 | 0;
  i1 = HEAP32[i2 >> 2] | 0;
  HEAP32[i2 >> 2] = i1 + 1;
  i1 = HEAPU8[i1 >> 0] | 0;
 }
 return i1 | 0;
}

function __ZNKSt3__26locale5__imp9use_facetEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (__ZNKSt3__26locale5__imp9has_facetEl(i1, i2) | 0) return HEAP32[(HEAP32[i1 + 8 >> 2] | 0) + (i2 << 2) >> 2] | 0; else {
  i2 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev(i2);
  ___cxa_throw(i2 | 0, 1552, 104);
 }
 return 0;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc(i3, i1, i4, i5, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  i3 = HEAP8[i1 >> 0] | 0;
  HEAP8[i2 >> 0] = i3 << 24 >> 24 > -1 ? i3 : i5;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function _sn_write(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = i1 + 20 | 0;
 i5 = HEAP32[i4 >> 2] | 0;
 i1 = (HEAP32[i1 + 16 >> 2] | 0) - i5 | 0;
 i1 = i1 >>> 0 > i3 >>> 0 ? i3 : i1;
 _memcpy(i5 | 0, i2 | 0, i1 | 0) | 0;
 HEAP32[i4 >> 2] = (HEAP32[i4 >> 2] | 0) + i1;
 return i3 | 0;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = (HEAP32[i1 >> 2] | 0) + (i2 << 4) | 0;
  i5 = i4 & -268435456;
  i2 = (i5 >>> 24 | i5) ^ i4;
  i1 = i1 + 4 | 0;
 }
 return i2 | 0;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_(i2, i1, i3) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i2 = 0;
 while (1) {
  if ((i1 | 0) == (i3 | 0)) break;
  i4 = (HEAP8[i1 >> 0] | 0) + (i2 << 4) | 0;
  i5 = i4 & -268435456;
  i2 = (i5 >>> 24 | i5) ^ i4;
  i1 = i1 + 1 | 0;
 }
 return i2 | 0;
}

function b9(i1, i2, i8, i9, i10, i11, i12, i13, i14, i15, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i12 = i12 | 0;
 i13 = i13 | 0;
 i14 = i14 | 0;
 i15 = i15 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(9);
}

function __ZNKSt3__212__do_message7messageEi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _strerror(i3) | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, i3, _strlen(i3) | 0);
 return;
}

function ___uremdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i6 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i6 | 0;
 ___udivmoddi4(i1, i2, i3, i4, i5) | 0;
 STACKTOP = i6;
 return (tempRet0 = HEAP32[i5 + 4 >> 2] | 0, HEAP32[i5 >> 2] | 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i1;
 HEAP32[i4 >> 2] = 0;
 HEAP32[i4 + 4 >> 2] = 0;
 i4 = i1 + 8 | 0;
 HEAP32[i4 >> 2] = -1;
 HEAP32[i4 + 4 >> 2] = -1;
 return;
}

function dynCall_iiiiiiiii(i9, i1, i2, i3, i4, i5, i6, i7, i8) {
 i9 = i9 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[i9 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0, i8 | 0) | 0;
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _catopen((HEAP8[i2 + 11 >> 0] | 0) < 0 ? HEAP32[i2 >> 2] | 0 : i2, 1) | 0;
 return i3 >>> ((i3 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNSt3__214__shared_count16__release_sharedEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = i1 + 4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if (!i2) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 8 >> 2] & 127](i1);
  i1 = 1;
 } else i1 = 0;
 return i1 | 0;
}

function __ZNSt13runtime_errorC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 8944;
 __THREW__ = 0;
 invoke_vii(83, i1 + 4 | 0, i2 | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } else return;
}

function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 var i1 = 0, i2 = 0;
 __THREW__ = 0;
 i1 = invoke_i(3) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i2);
 } else return HEAP32[i1 >> 2] | 0;
 return 0;
}

function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 var i1 = 0, i2 = 0;
 __THREW__ = 0;
 i1 = invoke_i(2) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i2);
 } else return HEAP32[i1 >> 2] | 0;
 return 0;
}

function __ZNSt11logic_errorC2EPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 8924;
 __THREW__ = 0;
 invoke_vii(83, i1 + 4 | 0, i2 | 0);
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_2() | 0;
  ___resumeException(i2 | 0);
 } else return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 HEAP32[i2 >> 2] = 0;
 HEAP32[i2 + 4 >> 2] = 0;
 HEAP32[i2 + 8 >> 2] = 0;
 i1 = 0;
 while (1) {
  if ((i1 | 0) == 3) break;
  HEAP32[i2 + (i1 << 2) >> 2] = 0;
  i1 = i1 + 1 | 0;
 }
 return;
}

function _wmemcpy(i4, i2, i1) {
 i4 = i4 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 var i3 = 0;
 if (i1 | 0) {
  i3 = i4;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i3 >> 2] = HEAP32[i2 >> 2];
   if (!i1) break; else {
    i2 = i2 + 4 | 0;
    i3 = i3 + 4 | 0;
   }
  }
 }
 return i4 | 0;
}

function ___muldi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = i1;
 i6 = i3;
 i3 = ___muldsi3(i5, i6) | 0;
 i1 = tempRet0;
 return (tempRet0 = (Math_imul(i2, i6) | 0) + (Math_imul(i4, i5) | 0) + i1 | i1 & 0, i3 | 0 | 0) | 0;
}

function __ZNSt3__25ctypeIcE13classic_tableEv() {
 var i1 = 0, i2 = 0;
 __THREW__ = 0;
 i1 = invoke_i(4) | 0;
 i2 = __THREW__;
 __THREW__ = 0;
 if (i2 & 1) {
  i2 = ___cxa_find_matching_catch_3(0) | 0;
  ___clang_call_terminate(i2);
 } else return HEAP32[i1 >> 2] | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 HEAP32[i5 >> 2] = i3;
 HEAP32[i8 >> 2] = i6;
 return 3;
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 8512, _wcslen(8512) | 0);
 return;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj(i1, 8536, _wcslen(8536) | 0);
 return;
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE(i1) {
 i1 = i1 | 0;
 switch (HEAP32[i1 + 4 >> 2] & 74) {
 case 64:
  {
   i1 = 8;
   break;
  }
 case 8:
  {
   i1 = 16;
   break;
  }
 case 0:
  {
   i1 = 0;
   break;
  }
 default:
  i1 = 10;
 }
 return i1 | 0;
}

function ___cxa_get_globals_fast() {
 var i1 = 0, i2 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(20800, 5) | 0)) {
  i2 = _pthread_getspecific(HEAP32[5201] | 0) | 0;
  STACKTOP = i1;
  return i2 | 0;
 } else _abort_message(16133, i1);
 return 0;
}

function dynCall_iiiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 return FUNCTION_TABLE_iiiiiiii[i8 & 15](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc(i1, 1, 45);
 return;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP8[i2 >> 0] = HEAP8[i1 >> 0] | 0;
  i2 = i2 + 1 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function _snprintf(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 var i5 = 0, i6 = 0;
 i5 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i6 = i5;
 HEAP32[i6 >> 2] = i4;
 i4 = _vsnprintf(i1, i2, i3, i6) | 0;
 STACKTOP = i5;
 return i4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free(i1);
 if (!(_pthread_setspecific(HEAP32[5201] | 0, 0) | 0)) {
  STACKTOP = i2;
  return;
 } else _abort_message(16232, i2);
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 15686, 5);
 return;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw(i3, i1, i4, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i4 = i4 | 0;
 i2 = i2 | 0;
 while (1) {
  if ((i1 | 0) == (i4 | 0)) break;
  HEAP32[i2 >> 2] = HEAP8[i1 >> 0];
  i2 = i2 + 4 | 0;
  i1 = i1 + 1 | 0;
 }
 return i4 | 0;
}

function dynCall_viiiiiii(i8, i1, i2, i3, i4, i5, i6, i7) {
 i8 = i8 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 FUNCTION_TABLE_viiiiiii[i8 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0, i7 | 0);
}

function __ZNKSt3__28numpunctIcE11do_truenameEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP32[i1 >> 2] = 0;
 HEAP32[i1 + 4 >> 2] = 0;
 HEAP32[i1 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj(i1, 15692, 4);
 return;
}

function __ZNKSt3__26locale5__imp9has_facetEl(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = HEAP32[i1 + 8 >> 2] | 0;
 if ((HEAP32[i1 + 12 >> 2] | 0) - i3 >> 2 >>> 0 > i2 >>> 0) i1 = (HEAP32[i3 + (i2 << 2) >> 2] | 0) != 0; else i1 = 0;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE(i3, i4, i5, 1114111, 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20652) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20644) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20636) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20628) | 0);
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = (HEAP32[i1 >> 2] | 0) + -4 | 0;
 i2 = HEAP32[i3 >> 2] | 0;
 HEAP32[i3 >> 2] = i2 + -1;
 if ((i2 + -1 | 0) < 0) __ZdlPv((HEAP32[i1 >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20588) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20580) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20572) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(19760) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18948) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18940) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18932) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18908) | 0);
 return;
}

function ___stdio_close(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i3 = i2;
 HEAP32[i3 >> 2] = HEAP32[i1 + 60 >> 2];
 i1 = ___syscall_ret(___syscall6(6, i3 | 0) | 0) | 0;
 STACKTOP = i2;
 return i1 | 0;
}

function __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(i1, i2, _strlen(i2) | 0) | 0;
}

function dynCall_iiiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 return FUNCTION_TABLE_iiiiiii[i7 & 63](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0) | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEtw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3 >>> 0 < 128) i1 = (HEAP16[(__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + (i3 << 1) >> 1] & i2) << 16 >> 16 != 0; else i1 = 0;
 return i1 | 0;
}

function b7(i1, i2, i4, i5, i6, i7, i8, i9, i10, i11, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 i11 = i11 | 0;
 i3 = i3 | 0;
 abort(7);
 return 0;
}

function dynCall_iiiiiid(i7, i1, i2, i3, i4, i5, d6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 return FUNCTION_TABLE_iiiiiid[i7 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, +d6) | 0;
}

function _sscanf(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 var i4 = 0, i5 = 0;
 i4 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i5 = i4;
 HEAP32[i5 >> 2] = i3;
 i3 = _vsscanf(i1, i2, i5) | 0;
 STACKTOP = i4;
 return i3 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj(i1, i2, _wcslen(i2) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj(i1, i2, _strlen(i2) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj(i1, i2, _strlen(i2) | 0) | 0;
}

function _wmemset(i3, i4, i1) {
 i3 = i3 | 0;
 i4 = i4 | 0;
 i1 = i1 | 0;
 var i2 = 0;
 if (i1 | 0) {
  i2 = i3;
  while (1) {
   i1 = i1 + -1 | 0;
   HEAP32[i2 >> 2] = i4;
   if (!i1) break; else i2 = i2 + 4 | 0;
  }
 }
 return i3 | 0;
}

function dynCall_viiiiii(i7, i1, i2, i3, i4, i5, i6) {
 i7 = i7 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 FUNCTION_TABLE_viiiiii[i7 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0, i6 | 0);
}

function _main() {
 _srand(_time(0) | 0);
 if (((_rand() | 0) % 20 | 0 | 0) < 10) __Z3foov(); else __Z3barv();
 if (!(HEAP32[4316] | 0)) __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(18012, 9804) | 0;
 return 0;
}

function _bitshift64Shl(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 << i1 | (i3 & (1 << i1) - 1 << 32 - i1) >>> 32 - i1;
  return i3 << i1;
 }
 tempRet0 = i3 << i1 - 32;
 return 0;
}

function _abort_message(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 var i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[i3 >> 2] = i2;
 i2 = HEAP32[455] | 0;
 _vfprintf(i2, i1, i3) | 0;
 _fputc(10, i2) | 0;
 _abort();
}

function _bitshift64Lshr(i3, i2, i1) {
 i3 = i3 | 0;
 i2 = i2 | 0;
 i1 = i1 | 0;
 if ((i1 | 0) < 32) {
  tempRet0 = i2 >>> i1;
  return i3 >>> i1 | (i2 & (1 << i1) - 1) << 32 - i1;
 }
 tempRet0 = 0;
 return i2 >>> i1 - 32 | 0;
}

function __ZNKSt3__28ios_base6getlocEv(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i3 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 i2 = i3;
 __ZNSt3__26localeC2ERKS0_(i2, i1 + 28 | 0);
 STACKTOP = i3;
 return HEAP32[i2 >> 2] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var i1 = 0;
 i1 = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(20804, 125) | 0)) {
  STACKTOP = i1;
  return;
 } else _abort_message(16182, i1);
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 24 >> 24 << 2) >> 2] & 255;
 return i1 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i4 = i4 - i3 | 0;
 return (i4 >>> 0 < i5 >>> 0 ? i4 : i5) | 0;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = i1 + 16 | 0;
 HEAP32[i2 >> 2] = HEAP32[i2 >> 2] | 1;
 if (!(HEAP32[i1 + 20 >> 2] & 1)) return; else ___cxa_rethrow();
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20692) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20700) | 0);
 return;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 << 24 >> 24 > -1) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + ((i1 & 255) << 2) >> 2] & 255;
 return i1 | 0;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20684) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20676) | 0);
 return;
}

function runPostSets() {}
function _i64Subtract(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = i2 - i4 - (i3 >>> 0 > i1 >>> 0 | 0) >>> 0;
 return (tempRet0 = i4, i1 - i3 >>> 0 | 0) | 0;
}

function dynCall_iiiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 return FUNCTION_TABLE_iiiiii[i6 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0) | 0;
}

function __ZNKSt3__214error_category10equivalentERKNS_10error_codeEi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ((HEAP32[i2 >> 2] | 0) == (i3 | 0) ? (HEAP32[i2 + 4 >> 2] | 0) == (i1 | 0) : 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20620) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20612) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20604) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20596) | 0);
 return;
}

function ___cxx_global_array_dtor_120(i1) {
 i1 = i1 | 0;
 i1 = 20104;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1);
 } while ((i1 | 0) != 19816);
 return;
}

function ___cxx_global_array_dtor_117(i1) {
 i1 = i1 | 0;
 i1 = 19292;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 } while ((i1 | 0) != 19004);
 return;
}

function ___cxx_global_array_dtor_93(i1) {
 i1 = i1 | 0;
 i1 = 20396;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1);
 } while ((i1 | 0) != 20108);
 return;
}

function ___cxx_global_array_dtor_69(i1) {
 i1 = i1 | 0;
 i1 = 19584;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 } while ((i1 | 0) != 19296);
 return;
}

function ___cxx_global_array_dtor_54(i1) {
 i1 = i1 | 0;
 i1 = 20568;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1);
 } while ((i1 | 0) != 20400);
 return;
}

function dynCall_iiiiid(i6, i1, i2, i3, i4, d5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 return FUNCTION_TABLE_iiiiid[i6 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0, +d5) | 0;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function b12(i1, i2, i3, i4, i5, i6, i7, i8, i9, i10) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 i9 = i9 | 0;
 i10 = i10 | 0;
 abort(12);
}

function ___cxx_global_array_dtor(i1) {
 i1 = i1 | 0;
 i1 = 19756;
 do {
  i1 = i1 + -12 | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1);
 } while ((i1 | 0) != 19588);
 return;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 var i1 = 0;
 i1 = HEAP32[(__ZNSt3__26locale7classicEv() | 0) >> 2] | 0;
 HEAP32[5179] = i1;
 __ZNSt3__214__shared_count12__add_sharedEv(i1);
 return 20716;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18924) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18900) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20668) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(20660) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18876) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18868) | 0);
 return;
}

function __ZNSt3__217iostream_categoryEv() {
 if ((HEAP8[16600] | 0) == 0 ? ___cxa_guard_acquire(16600) | 0 : 0) {
  HEAP32[4458] = 5740;
  ___cxa_atexit(25, 17832, ___dso_handle | 0) | 0;
 }
 return 17832;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (i1 << 2) >> 2] | 0;
 return i1 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 if (i1 >>> 0 < 128) i1 = HEAP32[(__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + (i1 << 2) >> 2] | 0;
 return i1 | 0;
}

function dynCall_viiiii(i6, i1, i2, i3, i4, i5) {
 i6 = i6 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 FUNCTION_TABLE_viiiii[i6 & 3](i1 | 0, i2 | 0, i3 | 0, i4 | 0, i5 | 0);
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18916) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl(i1, i2, __ZNSt3__26locale2id5__getEv(18884) | 0);
 return;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i1 = HEAP32[i1 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9use_facetEl(i1, __ZNSt3__26locale2id5__getEv(i2) | 0) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 HEAP8[i1 >> 0] = 2;
 HEAP8[i1 + 1 >> 0] = 3;
 HEAP8[i1 + 2 >> 0] = 0;
 HEAP8[i1 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 HEAP32[i5 >> 2] = i3;
 return 3;
}

function dynCall_iiiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return FUNCTION_TABLE_iiiii[i5 & 31](i1 | 0, i2 | 0, i3 | 0, i4 | 0) | 0;
}

function _i64Add(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i3 = i1 + i3 >>> 0;
 return (tempRet0 = i2 + i4 + (i3 >>> 0 < i1 >>> 0 | 0) >>> 0, i3 | 0) | 0;
}

function __ZNSt3__25ctypeIcED2Ev(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 HEAP32[i1 >> 2] = 8388;
 i2 = HEAP32[i1 + 8 >> 2] | 0;
 if (i2 | 0 ? HEAP8[i1 + 12 >> 0] | 0 : 0) __ZdaPv(i2);
 return;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_(i1, i2 + 12 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 4 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + (HEAP32[(HEAP32[i1 >> 2] | 0) + -12 >> 2] | 0) + 8 | 0);
 return;
}

function b20(i1, i2, i3, i4, i5, i6, i7, i8) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 i8 = i8 | 0;
 abort(20);
 return 0;
}

function __ZNSt3__26localeC2ERKS0_(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i2 = HEAP32[i2 >> 2] | 0;
 HEAP32[i1 >> 2] = i2;
 __ZNSt3__214__shared_count12__add_sharedEv(i2);
 return;
}

function __ZNKSt3__214error_category23default_error_conditionEi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 HEAP32[i1 >> 2] = i3;
 HEAP32[i1 + 4 >> 2] = i2;
 return;
}

function dynCall_viiii(i5, i1, i2, i3, i4) {
 i5 = i5 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 FUNCTION_TABLE_viiii[i5 & 7](i1 | 0, i2 | 0, i3 | 0, i4 | 0);
}

function _uselocale(i1) {
 i1 = i1 | 0;
 var i2 = 0, i3 = 0;
 i2 = (_pthread_self() | 0) + 184 | 0;
 i3 = HEAP32[i2 >> 2] | 0;
 if (i1 | 0) HEAP32[i2 >> 2] = i1;
 return i3 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNSt3__28numpunctIwED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8480;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 16 | 0);
 return;
}

function __ZNSt3__28numpunctIcED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8440;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1 + 12 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[i1 >> 2] | 0);
 return;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5496;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5432;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv(i1) {
 i1 = i1 | 0;
 if (i1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[i1 >> 2] | 0) + 4 >> 2] & 127](i1);
 return;
}

function dynCall_iiii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return FUNCTION_TABLE_iiii[i4 & 63](i1 | 0, i2 | 0, i3 | 0) | 0;
}

function b0(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3) i1 = _wmemmove(i1, i2, i3) | 0;
 return i1 | 0;
}

function __ZNSt3__26locale2id6__initEv(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = HEAP32[4724] | 0;
 HEAP32[4724] = i2 + 1;
 HEAP32[i1 + 4 >> 2] = i2 + 1;
 return;
}

function __ZNSt3__211char_traitsIwE6assignEPwjw(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i2) i1 = _wmemset(i1, i3, i2) | 0;
 return i1 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwj(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 if (i3) i1 = _wmemcpy(i1, i2, i3) | 0;
 return i1 | 0;
}

function dynCall_diii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +FUNCTION_TABLE_diii[i4 & 3](i1 | 0, i2 | 0, i3 | 0);
}

function ___syscall_ret(i1) {
 i1 = i1 | 0;
 if (i1 >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - i1;
  i1 = -1;
 }
 return i1 | 0;
}

function _wcslen(i2) {
 i2 = i2 | 0;
 var i1 = 0;
 i1 = i2;
 while (1) if (!(HEAP32[i1 >> 2] | 0)) break; else i1 = i1 + 4 | 0;
 return i1 - i2 >> 2 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__210__time_putD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5496;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 5432;
 __ZNSt3__26localeD2Ev(i1 + 4 | 0);
 return;
}

function b11(i1, i2, i3, i4, i5, i6, i7) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 i7 = i7 | 0;
 abort(11);
}

function ___errno_location() {
 var i1 = 0;
 if (!(HEAP32[4318] | 0)) i1 = 17316; else i1 = HEAP32[(_pthread_self() | 0) + 64 >> 2] | 0;
 return i1 | 0;
}

function __ZSt17__throw_bad_allocv() {
 var i1 = 0;
 i1 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev(i1);
 ___cxa_throw(i1 | 0, 1488, 97);
}

function dynCall_viii(i4, i1, i2, i3) {
 i4 = i4 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 FUNCTION_TABLE_viii[i4 & 15](i1 | 0, i2 | 0, i3 | 0);
}

function stackAlloc(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = STACKTOP;
 STACKTOP = STACKTOP + i1 | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return i2 | 0;
}

function ___cxa_guard_acquire(i1) {
 i1 = i1 | 0;
 if ((HEAP8[i1 >> 0] | 0) == 1) i1 = 0; else {
  HEAP8[i1 >> 0] = 1;
  i1 = 1;
 }
 return i1 | 0;
}

function ___cxa_is_pointer_type(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 0; else i1 = (___dynamic_cast(i1, 1448, 1584, 0) | 0) != 0;
 return i1 & 1 | 0;
}

function __ZNSt3__214__shared_count12__add_sharedEv(i1) {
 i1 = i1 | 0;
 i1 = i1 + 4 | 0;
 HEAP32[i1 >> 2] = (HEAP32[i1 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 >>> 0 < 128 ? i2 & 255 : i3) | 0;
}

function b5(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(5);
 return 0;
}

function _strtoull_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoull(i1, i2, i3) | 0;
 return i4 | 0;
}

function __ZNSt3__211__stdoutbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return (i2 << 24 >> 24 > -1 ? i2 : i3) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return i1 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 4 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 8 | 0);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210__stdinbufIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strtoll_l(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i4 = _strtoll(i1, i2, i3) | 0;
 return i4 | 0;
}

function __ZNSt13runtime_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8944;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(i1 + 4 | 0);
 return;
}

function b2(i1, i2, i3, i4, i5, d6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 d6 = +d6;
 abort(2);
 return 0;
}

function _strtoll(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _strtox_545(i1, i2, i3, 0, -2147483648) | 0;
 return i3 | 0;
}

function ___udivdi3(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return ___udivmoddi4(i1, i2, i3, i4, 0) | 0;
}

function __ZNSt11logic_errorD2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8924;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function b10(i1, i2, i3, i4, i5, i6) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 i6 = i6 | 0;
 abort(10);
}

function dynCall_iii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 return FUNCTION_TABLE_iii[i3 & 31](i1 | 0, i2 | 0) | 0;
}

function _strtoull(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i3 = _strtox_545(i1, i2, i3, -1, -1) | 0;
 return i3 | 0;
}

function __ZNSt3__26localeD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__214__shared_count16__release_sharedEv(HEAP32[i1 >> 2] | 0) | 0;
 return;
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__26locale5__impC2Ej(17096, 1);
 HEAP32[5177] = 17096;
 return 20708;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1 + 8 | 0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv(i1) {
 i1 = i1 | 0;
 return 2;
}

function b14(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(14);
 return 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _mbrlen(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return _mbrtowc(0, i1, i2, i3 | 0 ? i3 : 17332) | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function ___cxa_throw__wrapper(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 ___cxa_throw(i1 | 0, i2 | 0, i3 | 0);
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __GLOBAL__I_000101() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 ___cxa_atexit(110, 22884, ___dso_handle | 0) | 0;
 return;
}

function b21(i1, i2, i3, i4, d5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 d5 = +d5;
 abort(21);
 return 0;
}

function _srand(i1) {
 i1 = i1 | 0;
 var i2 = 0;
 i2 = 16592;
 HEAP32[i2 >> 2] = i1 + -1;
 HEAP32[i2 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__210__stdinbufIwE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 0) | 0;
}

function dynCall_vii(i3, i1, i2) {
 i3 = i3 | 0;
 i1 = i1 | 0;
 i2 = i2 | 0;
 FUNCTION_TABLE_vii[i3 & 127](i1 | 0, i2 | 0);
}

function _wctomb(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!i1) i1 = 0; else i1 = _wcrtomb(i1, i2, 0) | 0;
 return i1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1;
}

function __ZNSt3__210__stdinbufIwE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv(i1) {
 i1 = i1 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb(i1, 1) | 0;
}

function __ZNSt3__28ios_base7failureD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212system_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _isxdigit(i1) {
 i1 = i1 | 0;
 return ((i1 + -48 | 0) >>> 0 < 10 | ((i1 | 32) + -97 | 0) >>> 0 < 6) & 1 | 0;
}

function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 return;
}

function setThrew(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 if (!__THREW__) {
  __THREW__ = i1;
  threwValue = i2;
 }
}

function b1(i1, i2, i3, i4, i5) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 i5 = i5 | 0;
 abort(1);
}

function _mbsinit(i1) {
 i1 = i1 | 0;
 if (!i1) i1 = 1; else i1 = (HEAP32[i1 >> 2] | 0) == 0;
 return i1 & 1 | 0;
}

function _do_read(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return ___string_read(i1, i2, i3) | 0;
}

function __ZSt15get_new_handlerv() {
 var i1 = 0;
 i1 = HEAP32[5202] | 0;
 HEAP32[5202] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__26locale5__impD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__26locale5__impD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__212system_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZSt13get_terminatev() {
 var i1 = 0;
 i1 = HEAP32[2202] | 0;
 HEAP32[2202] = i1 + 0;
 return i1 | 0;
}

function __ZNSt3__28numpunctIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIwED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28numpunctIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28numpunctIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b17(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(17);
 return 0;
}

function __ZNSt13runtime_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt13runtime_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function _strtold_l(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 return +(+_strtox(i1, i2, 2));
}

function _catgets(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 return i4 | 0;
}

function dynCall_ii(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 return FUNCTION_TABLE_ii[i2 & 127](i1 | 0) | 0;
}

function _pthread_cond_broadcast__wrapper(i1) {
 i1 = i1 | 0;
 return _pthread_cond_broadcast(i1 | 0) | 0;
}

function ___clang_call_terminate(i1) {
 i1 = i1 | 0;
 ___cxa_begin_catch(i1 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt12length_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 << 24 >> 24 | 0;
}

function __ZNSt3__28ios_baseD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__28ios_baseD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt3__25ctypeIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__25ctypeIcED2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNSt11logic_errorD0Ev(i1) {
 i1 = i1 | 0;
 __ZNSt11logic_errorD2Ev(i1);
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 8 >> 2] | 0;
}

function __ZNSt3__28ios_base7failureD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt3__212system_errorD2Ev(i1);
 return;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return HEAP8[i1 + 8 >> 0] | 0;
}

function _cleanup_522(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function _cleanup_517(i1) {
 i1 = i1 | 0;
 if (!(HEAP32[i1 + 68 >> 2] | 0)) ___unlockfile(i1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv(i1) {
 i1 = i1 | 0;
 return -1;
}

function _pthread_mutex_unlock__wrapper(i1) {
 i1 = i1 | 0;
 return _pthread_mutex_unlock(i1 | 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function establishStackSpace(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 STACKTOP = i1;
 STACK_MAX = i2;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 2147483647;
}

function b22(i1, i2, i3, i4) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 i4 = i4 | 0;
 abort(22);
}

function _pthread_mutex_lock__wrapper(i1) {
 i1 = i1 | 0;
 return _pthread_mutex_lock(i1 | 0) | 0;
}

function __ZNSt3__212system_errorD2Ev(i1) {
 i1 = i1 | 0;
 __ZNSt13runtime_errorD2Ev(i1);
 return;
}

function _isspace(i1) {
 i1 = i1 | 0;
 return ((i1 | 0) == 32 | (i1 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function _isdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return (i1 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function dynCall_vi(i2, i1) {
 i2 = i2 | 0;
 i1 = i1 | 0;
 FUNCTION_TABLE_vi[i2 & 127](i1 | 0);
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return i2 | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function b15(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(15);
 return 0.0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__217__widen_from_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv(i1) {
 i1 = i1 | 0;
 return 127;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILj32EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv(i1) {
 i1 = i1 | 0;
 return 1;
}

function __ZNKSt13runtime_error4whatEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNKSt3__28messagesIwE8do_closeEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEi(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return;
}

function b8(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(8);
 return 0;
}

function __ZNKSt11logic_error4whatEv(i1) {
 i1 = i1 | 0;
 return HEAP32[i1 + 4 >> 2] | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__219__iostream_categoryD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _isxdigit_l(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return _isxdigit(i1) | 0;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt9bad_allocC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8904;
 return;
}

function __ZNKSt3__219__iostream_category4nameEv(i1) {
 i1 = i1 | 0;
 return 13305;
}

function _copysignl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_copysign(d1, d2));
}

function __ZNSt8bad_castC2Ev(i1) {
 i1 = i1 | 0;
 HEAP32[i1 >> 2] = 8984;
 return;
}

function _scalbnl(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_scalbn(d1, i2));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev(i1) {
 i1 = i1 | 0;
 return;
}

function b18(i1, i2, i3) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 i3 = i3 | 0;
 abort(18);
}

function dynCall_i(i1) {
 i1 = i1 | 0;
 return FUNCTION_TABLE_i[i1 & 15]() | 0;
}

function _frexpl(d1, i2) {
 d1 = +d1;
 i2 = i2 | 0;
 return +(+_frexp(d1, i2));
}

function __ZNSt3__26locale5facetD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28messagesIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__28messagesIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27collateIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__27collateIcED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__25ctypeIwED0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _fmodl(d1, d2) {
 d1 = +d1;
 d2 = +d2;
 return +(+_fmod(d1, d2));
}

function b13(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(13);
 return 0;
}

function __ZNSt9bad_allocD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function _catopen(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 return -1 | 0;
}

function __ZNSt8bad_castD0Ev(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__214error_categoryD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__214__shared_countD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv(i1) {
 i1 = i1 | 0;
 return 16375;
}

function dynCall_v(i1) {
 i1 = i1 | 0;
 FUNCTION_TABLE_v[i1 & 7]();
}

function __ZNKSt8bad_cast4whatEv(i1) {
 i1 = i1 | 0;
 return 16454;
}

function __ZNSt3__26locale5facetD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__28messagesIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__28messagesIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _pthread_cond_broadcast(i1) {
 i1 = i1 | 0;
 return 0;
}

function __ZNSt3__27collateIwED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt3__27collateIcED2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function _pthread_mutex_unlock(i1) {
 i1 = i1 | 0;
 return 0;
}

function _freelocale(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function b4(i1, i2) {
 i1 = i1 | 0;
 i2 = i2 | 0;
 abort(4);
}

function _pthread_mutex_lock(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function __ZdaPv(i1) {
 i1 = i1 | 0;
 __ZdlPv(i1);
 return;
}

function ___cxa_guard_release(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9type_infoD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9exceptionD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function __ZNSt9bad_allocD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function stackRestore(i1) {
 i1 = i1 | 0;
 STACKTOP = i1;
}

function __ZdlPv(i1) {
 i1 = i1 | 0;
 _free(i1);
 return;
}

function __ZNSt8bad_castD2Ev(i1) {
 i1 = i1 | 0;
 return;
}

function setTempRet0(i1) {
 i1 = i1 | 0;
 tempRet0 = i1;
}

function ___cxa_guard_abort(i1) {
 i1 = i1 | 0;
 return;
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function b6(i1) {
 i1 = i1 | 0;
 abort(6);
 return 0;
}

function ___unlockfile(i1) {
 i1 = i1 | 0;
 return;
}

function ___lockfile(i1) {
 i1 = i1 | 0;
 return 0;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose(i1) {
 i1 = i1 | 0;
 return 0;
}

function ___ctype_toupper_loc() {
 return 3828;
}

function ___ctype_tolower_loc() {
 return 2288;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b3(i1) {
 i1 = i1 | 0;
 abort(3);
}

function ___ctype_b_loc() {
 return 2284;
}

function b16() {
 abort(16);
 return 0;
}

function _pthread_self() {
 return 0;
}

function b19() {
 abort(19);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_iiiiiid = [b2,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b2];
var FUNCTION_TABLE_vi = [b3,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__28ios_base7failureD2Ev,__ZNSt3__28ios_base7failureD0Ev,__ZNSt3__214error_categoryD2Ev,__ZNSt3__219__iostream_categoryD0Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED0Ev
,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,__ZNSt3__210moneypunctIwLb1EED2Ev
,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILj32EED0Ev,__ZNSt3__217__widen_from_utf8ILj32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev
,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZNSt3__212system_errorD2Ev,__ZNSt3__212system_errorD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt12length_errorD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv,_cleanup_522,_cleanup_517,__ZNSt3__28ios_base4InitD2Ev,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor,___cxx_global_array_dtor_69,___cxx_global_array_dtor_117,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,___cxx_global_array_dtor_54,___cxx_global_array_dtor_93
,___cxx_global_array_dtor_120,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_freelocale,__ZNSt3__212__do_nothingEPv,__ZNSt3__221__throw_runtime_errorEPKc,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b3,b3];
var FUNCTION_TABLE_vii = [b4,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv
,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEi,__ZNKSt3__28messagesIwE8do_closeEi,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,__ZNSt3__28ios_base5clearEj,__ZNSt3__28ios_base16__call_callbacksENS0_5eventE,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,__ZNSt3__28ios_base4initEPv,__ZNSt13runtime_errorC2EPKc,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt11logic_errorC2EPKc,__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__27codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_
,__ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,__ZNSt3__218__libcpp_refstringC2EPKc,__ZNSt13runtime_errorC2ERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,_abort_message,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_iiiiiii = [b5,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,__ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_ii = [b6,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNKSt13runtime_error4whatEv,__ZNKSt3__219__iostream_category4nameEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv
,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv
,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt11logic_error4whatEv,__ZNKSt8bad_cast4whatEv,__ZNKSt3__28ios_base6getlocEv,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEE5flushEv,_uselocale,_wcslen,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,__Znwj,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiiiiiiiiii = [b7,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b7];
var FUNCTION_TABLE_iiii = [b8,___stdio_write,___stdio_seek,___stdio_read,___stdout_write,_sn_write,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNKSt3__214error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__214error_category10equivalentERKNS_10error_codeEi,__ZNSt3__211__stdoutbufIwE6xsputnEPKwi,__ZNSt3__211__stdoutbufIcE6xsputnEPKci,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_do_read
,_newlocale,_vasprintf,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorIS9_EE5valueERS5_E4typeES9_S9_,_wcrtomb,_mbtowc,_mbrlen,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
,b8,b8,b8,b8,b8];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b9,__ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,__ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b9];
var FUNCTION_TABLE_viiiiii = [b10,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
var FUNCTION_TABLE_viiiiiii = [b11,__ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,b11,b11,b11];
var FUNCTION_TABLE_viiiiiiiiii = [b12,__ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,__ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,__ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,__ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b12,b12,b12];
var FUNCTION_TABLE_iii = [b13,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,__ZNKSt3__26locale9use_facetERNS0_2idE,_isxdigit_l,_isdigit_l,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b13,b13,b13,b13,b13,b13,b13,b13,b13
,b13,b13,b13];
var FUNCTION_TABLE_iiiiii = [b14,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,_wcsnrtombs,_mbsnrtowcs,b14,b14,b14,b14,b14,b14
,b14,b14,b14];
var FUNCTION_TABLE_diii = [b15,__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj,__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj];
var FUNCTION_TABLE_i = [b16,__ZNSt3__26__clocEv,___ctype_tolower_loc,___ctype_toupper_loc,___ctype_b_loc,__ZNSt3__26locale5__imp12make_classicEv,__ZNSt3__26locale5__imp11make_globalEv,__ZNSt3__26locale8__globalEv,___cxa_get_globals_fast,b16,b16,b16,b16,b16,b16,b16];
var FUNCTION_TABLE_iiiii = [b17,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,__ZNSt3__26__treeINS_12__value_typeIPKcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_19__map_value_compareIS3_SA_7cmp_strLb1EEENS7_ISA_EEE30__emplace_hint_unique_key_argsIS3_JRKNS_4pairIS3_S9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEEiEENS_21__tree_const_iteratorISA_SP_iEERKT_DpOT0_,__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z,__ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji,__ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz,_mbsrtowcs,_catgets,_mbrtowc,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
,b17,b17,b17];
var FUNCTION_TABLE_viii = [b18,__ZNKSt3__214error_category23default_error_conditionEi,__ZNKSt3__219__iostream_category7messageEi,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,__ZNSt3__28ios_base7failureC2EPKcRKNS_10error_codeE,___cxa_throw__wrapper,__ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,__ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,__ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__212system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b18,b18,b18,b18];
var FUNCTION_TABLE_v = [b19,__ZL25default_terminate_handlerv,___cxa_end_catch__wrapper,__ZSt17__throw_bad_allocv,___cxa_rethrow__wrapper,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b19,b19];
var FUNCTION_TABLE_iiiiiiiii = [b20,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b20,b20,b20,b20,b20];
var FUNCTION_TABLE_iiiiid = [b21,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b21,b21,b21];
var FUNCTION_TABLE_viiii = [b22,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi];

  return { _main: _main, ___udivdi3: ___udivdi3, _bitshift64Lshr: _bitshift64Lshr, ___udivmoddi4: ___udivmoddi4, _fflush: _fflush, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _llvm_cttz_i32: _llvm_cttz_i32, _sbrk: _sbrk, _memcpy: _memcpy, ___muldi3: ___muldi3, _bitshift64Shl: _bitshift64Shl, ___uremdi3: ___uremdi3, _i64Subtract: _i64Subtract, _memset: _memset, _i64Add: _i64Add, _pthread_self: _pthread_self, _pthread_mutex_unlock: _pthread_mutex_unlock, _pthread_cond_broadcast: _pthread_cond_broadcast, ___errno_location: ___errno_location, ___muldsi3: ___muldsi3, ___cxa_can_catch: ___cxa_can_catch, _free: _free, _memmove: _memmove, _malloc: _malloc, _pthread_mutex_lock: _pthread_mutex_lock, __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setTempRet0: setTempRet0, getTempRet0: getTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var _main = Module["_main"] = asm["_main"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var _free = Module["_free"] = asm["_free"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = Module["stackAlloc"];
Runtime.stackSave = Module["stackSave"];
Runtime.stackRestore = Module["stackRestore"];
Runtime.establishStackSpace = Module["establishStackSpace"];
Runtime.setTempRet0 = Module["setTempRet0"];
Runtime.getTempRet0 = Module["getTempRet0"];
Module["asm"] = asm;
if (memoryInitializer) {
 if (typeof Module["locateFile"] === "function") {
  memoryInitializer = Module["locateFile"](memoryInitializer);
 } else if (Module["memoryInitializerPrefixURL"]) {
  memoryInitializer = Module["memoryInitializerPrefixURL"] + memoryInitializer;
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, Runtime.GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = (function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   HEAPU8.set(data, Runtime.GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  });
  function doBrowserLoad() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, (function() {
    throw "could not load memory initializer " + memoryInitializer;
   }));
  }
  if (Module["memoryInitializerRequest"]) {
   function useRequest() {
    var request = Module["memoryInitializerRequest"];
    if (request.status !== 200 && request.status !== 0) {
     console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
     doBrowserLoad();
     return;
    }
    applyMemoryInitializer(request.response);
   }
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
Module["callMain"] = Module.callMain = function callMain(args) {
 args = args || [];
 ensureInitRuntime();
 var argc = args.length + 1;
 function pad() {
  for (var i = 0; i < 4 - 1; i++) {
   argv.push(0);
  }
 }
 var argv = [ allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL) ];
 pad();
 for (var i = 0; i < argc - 1; i = i + 1) {
  argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
  pad();
 }
 argv.push(0);
 argv = allocate(argv, "i32", ALLOC_NORMAL);
 try {
  var ret = Module["_main"](argc, argv, 0);
  exit(ret, true);
 } catch (e) {
  if (e instanceof ExitStatus) {
   return;
  } else if (e == "SimulateInfiniteLoop") {
   Module["noExitRuntime"] = true;
   return;
  } else {
   if (e && typeof e === "object" && e.stack) Module.printErr("exception thrown: " + [ e, e.stack ]);
   throw e;
  }
 } finally {
  calledMain = true;
 }
};
function run(args) {
 args = args || Module["arguments"];
 if (preloadStartTime === null) preloadStartTime = Date.now();
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  if (Module["_main"] && shouldRunNow) Module["callMain"](args);
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = Module.run = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"]) {
  return;
 }
 if (Module["noExitRuntime"]) {} else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["exit"](status);
 } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
  quit(status);
 }
 throw new ExitStatus(status);
}
Module["exit"] = Module.exit = exit;
var abortDecorators = [];
function abort(what) {
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
 var output = "abort(" + what + ") at " + stackTrace() + extra;
 if (abortDecorators) {
  abortDecorators.forEach((function(decorator) {
   output = decorator(output, what);
  }));
 }
 throw output;
}
Module["abort"] = Module.abort = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
var shouldRunNow = true;
if (Module["noInitialRun"]) {
 shouldRunNow = false;
}
run();




